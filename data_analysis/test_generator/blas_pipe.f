
      module blas_pipe
            use pipemodule
      contains
          subroutine chbgvx( jobz, range, uplo, n, ka, kb, ab, ldab, bb,
     $                   ldbb, q, ldq, vl, vu, il, iu, abstol, m, w, z,
     $                   ldz, work, rwork, iwork, ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, ka, kb, ldab, ldbb, ldq, ldz, m,
     $                   n
      real               abstol, vl, vu
      integer            ifail( * ), iwork( * )
      real               rwork( * ), w( * )
      complex            ab( ldab, * ), bb( ldbb, * ), q( ldq, * ),
     $                   work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chbgvx", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ka, pipe)
      call pipe_write_integer(kb, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complexs(bb, pipe)
      call pipe_write_integer(ldbb, pipe)
      call pipe_write_complexs(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_real(vl, pipe)
      call pipe_write_real(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_real(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ka, pipe)
      call pipe_read_integer(kb, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complexs(bb, pipe)
      call pipe_read_integer(ldbb, pipe)
      call pipe_read_complexs(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_real(vl, pipe)
      call pipe_read_real(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_real(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sormlq( side, trans, m, n, k, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      real               a( lda, * ), c( ldc, * ), tau( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sormlq", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgeqrf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      complex            a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgeqrf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ddisna( job, m, n, d, sep, info )
      character          job
      integer            info, m, n
      double precision   d( * ), sep( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ddisna", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(sep, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(sep, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chbev( jobz, uplo, n, kd, ab, ldab, w, z, ldz, work,
     $                  rwork, info )
      character          jobz, uplo
      integer            info, kd, ldab, ldz, n
      real               rwork( * ), w( * )
      complex            ab( ldab, * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chbev", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgelsy( m, n, nrhs, a, lda, b, ldb, jpvt, rcond, rank,
     $                   work, lwork, rwork, info )
      integer            info, lda, ldb, lwork, m, n, nrhs, rank
      double precision   rcond
      integer            jpvt( * )
      double precision   rwork( * )
      complex*16         a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgelsy", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integers(jpvt, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_integer(rank, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integers(jpvt, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_integer(rank, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgels( trans, m, n, nrhs, a, lda, b, ldb, work, lwork,
     $                  info )
      character          trans
      integer            info, lda, ldb, lwork, m, n, nrhs
      double precision   a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgels", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cunmhr( side, trans, m, n, ilo, ihi, a, lda, tau, c,
     $                   ldc, work, lwork, info )
      character          side, trans
      integer            ihi, ilo, info, lda, ldc, lwork, m, n
      complex            a( lda, * ), c( ldc, * ), tau( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cunmhr", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zsysvx( fact, uplo, n, nrhs, a, lda, af, ldaf, ipiv, b,
     $                   ldb, x, ldx, rcond, ferr, berr, work, lwork,
     $                   rwork, info )
      character          fact, uplo
      integer            info, lda, ldaf, ldb, ldx, lwork, n, nrhs
      double precision   rcond
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         a( lda, * ), af( ldaf, * ), b( ldb, * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zsysvx", pipe)
      call pipe_write_character(fact, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(af, pipe)
      call pipe_write_integer(ldaf, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(fact, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(af, pipe)
      call pipe_read_integer(ldaf, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine strrfs( uplo, trans, diag, n, nrhs, a, lda, b, ldb, x,
     $                   ldx, ferr, berr, work, iwork, info )
      character          diag, trans, uplo
      integer            info, lda, ldb, ldx, n, nrhs
      integer            iwork( * )
      real               a( lda, * ), b( ldb, * ), berr( * ), ferr( * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("strrfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chfrk( transr, uplo, trans, n, k, alpha, a, lda, beta,
     $                  c )
      real               alpha, beta
      integer            k, lda, n
      character          trans, transr, uplo
      complex            a( lda, * ), c( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chfrk", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_real(alpha, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_real(beta, pipe)
      call pipe_write_complexs(c, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_real(alpha, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_real(beta, pipe)
      call pipe_read_complexs(c, pipe)
      call pipe_close(pipe)

      end

      subroutine sormhr( side, trans, m, n, ilo, ihi, a, lda, tau, c,
     $                   ldc, work, lwork, info )
      character          side, trans
      integer            ihi, ilo, info, lda, ldc, lwork, m, n
      real               a( lda, * ), c( ldc, * ), tau( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sormhr", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtfttp( transr, uplo, n, arf, ap, info )
      character          transr, uplo
      integer            info, n
      double precision   ap( 0: * ), arf( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtfttp", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(arf, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(arf, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgglse( m, n, p, a, lda, b, ldb, c, d, x, work, lwork,
     $                   info )
      integer            info, lda, ldb, lwork, m, n, p
      real               a( lda, * ), b( ldb, * ), c( * ), d( * ),
     $                   work( * ), x( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgglse", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(p, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(x, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(p, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(x, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpoequ( n, a, lda, s, scond, amax, info )
      integer            info, lda, n
      double precision   amax, scond
      double precision   s( * )
      complex*16         a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpoequ", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_double(scond, pipe)
      call pipe_write_double(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_double(scond, pipe)
      call pipe_read_double(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine csptrf( uplo, n, ap, ipiv, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      complex            ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("csptrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zsytrs( uplo, n, nrhs, a, lda, ipiv, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zsytrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpoequb( n, a, lda, s, scond, amax, info )
      integer            info, lda, n
      double precision   amax, scond
      complex*16         a( lda, * )
      double precision   s( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpoequb", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_double(scond, pipe)
      call pipe_write_double(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_double(scond, pipe)
      call pipe_read_double(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cptcon( n, d, e, anorm, rcond, rwork, info )
      integer            info, n
      real               anorm, rcond
      real               d( * ), rwork( * )
      complex            e( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cptcon", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_complexs(e, pipe)
      call pipe_write_real(anorm, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_complexs(e, pipe)
      call pipe_read_real(anorm, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgglse( m, n, p, a, lda, b, ldb, c, d, x, work, lwork,
     $                   info )
      integer            info, lda, ldb, lwork, m, n, p
      complex            a( lda, * ), b( ldb, * ), c( * ), d( * ),
     $                   work( * ), x( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgglse", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(p, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(c, pipe)
      call pipe_write_complexs(d, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(p, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(c, pipe)
      call pipe_read_complexs(d, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sspgst( itype, uplo, n, ap, bp, info )
      character          uplo
      integer            info, itype, n
      real               ap( * ), bp( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sspgst", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_reals(bp, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_reals(bp, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctrcon( norm, uplo, diag, n, a, lda, rcond, work,
     $                   rwork, info )
      character          diag, norm, uplo
      integer            info, lda, n
      real               rcond
      real               rwork( * )
      complex            a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctrcon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cstedc( compz, n, d, e, z, ldz, work, lwork, rwork,
     $                   lrwork, iwork, liwork, info )
      character          compz
      integer            info, ldz, liwork, lrwork, lwork, n
      integer            iwork( * )
      real               d( * ), e( * ), rwork( * )
      complex            work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cstedc", pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(lrwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(lrwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhetrd( uplo, n, a, lda, d, e, tau, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      double precision   d( * ), e( * )
      complex*16         a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhetrd", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgebrd( m, n, a, lda, d, e, tauq, taup, work, lwork,
     $                   info )
      integer            info, lda, lwork, m, n
      real               a( lda, * ), d( * ), e( * ), taup( * ),
     $                   tauq( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgebrd", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_reals(tauq, pipe)
      call pipe_write_reals(taup, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_reals(tauq, pipe)
      call pipe_read_reals(taup, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpbrfs( uplo, n, kd, nrhs, ab, ldab, afb, ldafb, b,
     $                   ldb, x, ldx, ferr, berr, work, iwork, info )
      character          uplo
      integer            info, kd, ldab, ldafb, ldb, ldx, n, nrhs
      integer            iwork( * )
      double precision   ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),
     $                   berr( * ), ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpbrfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(afb, pipe)
      call pipe_write_integer(ldafb, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(afb, pipe)
      call pipe_read_integer(ldafb, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chpgv( itype, jobz, uplo, n, ap, bp, w, z, ldz, work,
     $                  rwork, info )
      character          jobz, uplo
      integer            info, itype, ldz, n
      real               rwork( * ), w( * )
      complex            ap( * ), bp( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chpgv", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_complexs(bp, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_complexs(bp, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sporfs( uplo, n, nrhs, a, lda, af, ldaf, b, ldb, x,
     $                   ldx, ferr, berr, work, iwork, info )
      character          uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            iwork( * )
      real               a( lda, * ), af( ldaf, * ), b( ldb, * ),
     $                   berr( * ), ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sporfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(af, pipe)
      call pipe_write_integer(ldaf, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(af, pipe)
      call pipe_read_integer(ldaf, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsytrf( uplo, n, a, lda, ipiv, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      integer            ipiv( * )
      double precision   a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsytrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine strtrs( uplo, trans, diag, n, nrhs, a, lda, b, ldb,
     $                   info )
      character          diag, trans, uplo
      integer            info, lda, ldb, n, nrhs
      real               a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("strtrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctrttp( uplo, n, a, lda, ap, info )
      character          uplo
      integer            info, n, lda
      complex            a( lda, * ), ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctrttp", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhptrf( uplo, n, ap, ipiv, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      complex*16         ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhptrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chptri( uplo, n, ap, ipiv, work, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      complex            ap( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chptri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztpttf( transr, uplo, n, ap, arf, info )
      character          transr, uplo
      integer            info, n
      complex*16         ap( 0: * ), arf( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztpttf", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_complex16s(arf, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_complex16s(arf, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgbequ( m, n, kl, ku, ab, ldab, r, c, rowcnd, colcnd,
     $                   amax, info )
      integer            info, kl, ku, ldab, m, n
      real               amax, colcnd, rowcnd
      real               ab( ldab, * ), c( * ), r( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgbequ", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(r, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_real(rowcnd, pipe)
      call pipe_write_real(colcnd, pipe)
      call pipe_write_real(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(r, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_real(rowcnd, pipe)
      call pipe_read_real(colcnd, pipe)
      call pipe_read_real(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgeev( jobvl, jobvr, n, a, lda, w, vl, ldvl, vr, ldvr,
     $                  work, lwork, rwork, info )
      implicit none
      character          jobvl, jobvr
      integer            info, lda, ldvl, ldvr, lwork, n
      double precision   rwork( * )
      complex*16         a( lda, * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   w( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgeev", pipe)
      call pipe_write_character(jobvl, pipe)
      call pipe_write_character(jobvr, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(w, pipe)
      call pipe_write_complex16s(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_complex16s(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobvl, pipe)
      call pipe_read_character(jobvr, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(w, pipe)
      call pipe_read_complex16s(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_complex16s(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhetrs( uplo, n, nrhs, a, lda, ipiv, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhetrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztrtrs( uplo, trans, diag, n, nrhs, a, lda, b, ldb,
     $                   info )
      character          diag, trans, uplo
      integer            info, lda, ldb, n, nrhs
      complex*16         a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztrtrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssbgst( vect, uplo, n, ka, kb, ab, ldab, bb, ldbb, x,
     $                   ldx, work, info )
      character          uplo, vect
      integer            info, ka, kb, ldab, ldbb, ldx, n
      real               ab( ldab, * ), bb( ldbb, * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssbgst", pipe)
      call pipe_write_character(vect, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ka, pipe)
      call pipe_write_integer(kb, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(bb, pipe)
      call pipe_write_integer(ldbb, pipe)
      call pipe_write_reals(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(vect, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ka, pipe)
      call pipe_read_integer(kb, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(bb, pipe)
      call pipe_read_integer(ldbb, pipe)
      call pipe_read_reals(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sorgbr( vect, m, n, k, a, lda, tau, work, lwork, info )
      character          vect
      integer            info, k, lda, lwork, m, n
      real               a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sorgbr", pipe)
      call pipe_write_character(vect, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(vect, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhbtrd( vect, uplo, n, kd, ab, ldab, d, e, q, ldq,
     $                   work, info )
      character          uplo, vect
      integer            info, kd, ldab, ldq, n
      double precision   d( * ), e( * )
      complex*16         ab( ldab, * ), q( ldq, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhbtrd", pipe)
      call pipe_write_character(vect, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_complex16s(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(vect, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_complex16s(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgghrd( compq, compz, n, ilo, ihi, a, lda, b, ldb, q,
     $                   ldq, z, ldz, info )
      character          compq, compz
      integer            ihi, ilo, info, lda, ldb, ldq, ldz, n
      complex*16         a( lda, * ), b( ldb, * ), q( ldq, * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgghrd", pipe)
      call pipe_write_character(compq, pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(compq, pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgebak( job, side, n, ilo, ihi, scale, m, v, ldv,
     $                   info )
      character          job, side
      integer            ihi, ilo, info, ldv, m, n
      real               scale( * )
      complex            v( ldv, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgebak", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_reals(scale, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_complexs(v, pipe)
      call pipe_write_integer(ldv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_reals(scale, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_complexs(v, pipe)
      call pipe_read_integer(ldv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgelss( m, n, nrhs, a, lda, b, ldb, s, rcond, rank,
     $                   work, lwork, info )
      integer            info, lda, ldb, lwork, m, n, nrhs, rank
      double precision   rcond
      double precision   a( lda, * ), b( ldb, * ), s( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgelss", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_integer(rank, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_integer(rank, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dggbal( job, n, a, lda, b, ldb, ilo, ihi, lscale,
     $                   rscale, work, info )
      character          job
      integer            ihi, ilo, info, lda, ldb, n
      double precision   a( lda, * ), b( ldb, * ), lscale( * ),
     $                   rscale( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dggbal", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_doubles(lscale, pipe)
      call pipe_write_doubles(rscale, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_doubles(lscale, pipe)
      call pipe_read_doubles(rscale, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpbstf( uplo, n, kd, ab, ldab, info )
      character          uplo
      integer            info, kd, ldab, n
      double precision   ab( ldab, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpbstf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgtsvx( fact, trans, n, nrhs, dl, d, du, dlf, df, duf,
     $                   du2, ipiv, b, ldb, x, ldx, rcond, ferr, berr,
     $                   work, rwork, info )
      character          fact, trans
      integer            info, ldb, ldx, n, nrhs
      double precision   rcond
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         b( ldb, * ), d( * ), df( * ), dl( * ),
     $                   dlf( * ), du( * ), du2( * ), duf( * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgtsvx", pipe)
      call pipe_write_character(fact, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(dl, pipe)
      call pipe_write_complex16s(d, pipe)
      call pipe_write_complex16s(du, pipe)
      call pipe_write_complex16s(dlf, pipe)
      call pipe_write_complex16s(df, pipe)
      call pipe_write_complex16s(duf, pipe)
      call pipe_write_complex16s(du2, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(fact, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(dl, pipe)
      call pipe_read_complex16s(d, pipe)
      call pipe_read_complex16s(du, pipe)
      call pipe_read_complex16s(dlf, pipe)
      call pipe_read_complex16s(df, pipe)
      call pipe_read_complex16s(duf, pipe)
      call pipe_read_complex16s(du2, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cggglm( n, m, p, a, lda, b, ldb, d, x, y, work, lwork,
     $                   info )
      integer            info, lda, ldb, lwork, m, n, p
      complex            a( lda, * ), b( ldb, * ), d( * ), work( * ),
     $                   x( * ), y( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cggglm", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(p, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(d, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_complexs(y, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(p, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(d, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_complexs(y, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine csyrfs( uplo, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb,
     $                   x, ldx, ferr, berr, work, rwork, info )
      character          uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            a( lda, * ), af( ldaf, * ), b( ldb, * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("csyrfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(af, pipe)
      call pipe_write_integer(ldaf, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(af, pipe)
      call pipe_read_integer(ldaf, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpotri( uplo, n, a, lda, info )
      character          uplo
      integer            info, lda, n
      complex            a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpotri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhbgvd( jobz, uplo, n, ka, kb, ab, ldab, bb, ldbb, w,
     $                   z, ldz, work, lwork, rwork, lrwork, iwork,
     $                   liwork, info )
      character          jobz, uplo
      integer            info, ka, kb, ldab, ldbb, ldz, liwork, lrwork,
     $                   lwork, n
      integer            iwork( * )
      double precision   rwork( * ), w( * )
      complex*16         ab( ldab, * ), bb( ldbb, * ), work( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhbgvd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ka, pipe)
      call pipe_write_integer(kb, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complex16s(bb, pipe)
      call pipe_write_integer(ldbb, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(lrwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ka, pipe)
      call pipe_read_integer(kb, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complex16s(bb, pipe)
      call pipe_read_integer(ldbb, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(lrwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhegvx( itype, jobz, range, uplo, n, a, lda, b, ldb,
     $                   vl, vu, il, iu, abstol, m, w, z, ldz, work,
     $                   lwork, rwork, iwork, ifail, info )
      character          jobz, range, uplo
      integer            il, info, itype, iu, lda, ldb, ldz, lwork, m, n
      double precision   abstol, vl, vu
      integer            ifail( * ), iwork( * )
      double precision   rwork( * ), w( * )
      complex*16         a( lda, * ), b( ldb, * ), work( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhegvx", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_double(vl, pipe)
      call pipe_write_double(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_double(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_double(vl, pipe)
      call pipe_read_double(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_double(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhbevx( jobz, range, uplo, n, kd, ab, ldab, q, ldq, vl,
     $                   vu, il, iu, abstol, m, w, z, ldz, work, rwork,
     $                   iwork, ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, kd, ldab, ldq, ldz, m, n
      double precision   abstol, vl, vu
      integer            ifail( * ), iwork( * )
      double precision   rwork( * ), w( * )
      complex*16         ab( ldab, * ), q( ldq, * ), work( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhbevx", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complex16s(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_double(vl, pipe)
      call pipe_write_double(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_double(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complex16s(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_double(vl, pipe)
      call pipe_read_double(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_double(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dopmtr( side, uplo, trans, m, n, ap, tau, c, ldc, work,
     $                   info )
      character          side, trans, uplo
      integer            info, ldc, m, n
      double precision   ap( * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dopmtr", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chpevd( jobz, uplo, n, ap, w, z, ldz, work, lwork,
     $                   rwork, lrwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, ldz, liwork, lrwork, lwork, n
      integer            iwork( * )
      real               rwork( * ), w( * )
      complex            ap( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chpevd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(lrwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(lrwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chegvd( itype, jobz, uplo, n, a, lda, b, ldb, w, work,
     $                   lwork, rwork, lrwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, itype, lda, ldb, liwork, lrwork, lwork, n
      integer            iwork( * )
      real               rwork( * ), w( * )
      complex            a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chegvd", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(lrwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(lrwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctpttf( transr, uplo, n, ap, arf, info )
      character          transr, uplo
      integer            info, n
      complex            ap( 0: * ), arf( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctpttf", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_complexs(arf, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_complexs(arf, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgesv( n, nrhs, a, lda, ipiv, b, ldb, info )
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      complex            a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgesv", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsyevd( jobz, uplo, n, a, lda, w, work, lwork, iwork,
     $                   liwork, info )
      character          jobz, uplo
      integer            info, lda, liwork, lwork, n
      integer            iwork( * )
      double precision   a( lda, * ), w( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsyevd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgeqrfp( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      complex*16         a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgeqrfp", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dspcon( uplo, n, ap, ipiv, anorm, rcond, work, iwork,
     $                   info )
      character          uplo
      integer            info, n
      double precision   anorm, rcond
      integer            ipiv( * ), iwork( * )
      double precision   ap( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dspcon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_double(anorm, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_double(anorm, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine stprfs( uplo, trans, diag, n, nrhs, ap, b, ldb, x, ldx,
     $                   ferr, berr, work, iwork, info )
      character          diag, trans, uplo
      integer            info, ldb, ldx, n, nrhs
      integer            iwork( * )
      real               ap( * ), b( ldb, * ), berr( * ), ferr( * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("stprfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spftrf( transr, uplo, n, a, info )
      character          transr, uplo
      integer            n, info
      real               a( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spftrf", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine csprfs( uplo, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx,
     $                   ferr, berr, work, rwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            afp( * ), ap( * ), b( ldb, * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("csprfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_complexs(afp, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_complexs(afp, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgeqp3( m, n, a, lda, jpvt, tau, work, lwork, rwork,
     $                   info )
      integer            info, lda, lwork, m, n
      integer            jpvt( * )
      double precision   rwork( * )
      complex*16         a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgeqp3", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(jpvt, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(jpvt, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgtrfs( trans, n, nrhs, dl, d, du, dlf, df, duf, du2,
     $                   ipiv, b, ldb, x, ldx, ferr, berr, work, rwork,
     $                   info )
      character          trans
      integer            info, ldb, ldx, n, nrhs
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         b( ldb, * ), d( * ), df( * ), dl( * ),
     $                   dlf( * ), du( * ), du2( * ), duf( * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgtrfs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(dl, pipe)
      call pipe_write_complex16s(d, pipe)
      call pipe_write_complex16s(du, pipe)
      call pipe_write_complex16s(dlf, pipe)
      call pipe_write_complex16s(df, pipe)
      call pipe_write_complex16s(duf, pipe)
      call pipe_write_complex16s(du2, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(dl, pipe)
      call pipe_read_complex16s(d, pipe)
      call pipe_read_complex16s(du, pipe)
      call pipe_read_complex16s(dlf, pipe)
      call pipe_read_complex16s(df, pipe)
      call pipe_read_complex16s(duf, pipe)
      call pipe_read_complex16s(du2, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine csytrs( uplo, n, nrhs, a, lda, ipiv, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      complex            a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("csytrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cppcon( uplo, n, ap, anorm, rcond, work, rwork, info )
      character          uplo
      integer            info, n
      real               anorm, rcond
      real               rwork( * )
      complex            ap( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cppcon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_real(anorm, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_real(anorm, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgtsv( n, nrhs, dl, d, du, b, ldb, info )
      integer            info, ldb, n, nrhs
      real               b( ldb, * ), d( * ), dl( * ), du( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgtsv", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(dl, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(du, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(dl, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(du, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sorgtr( uplo, n, a, lda, tau, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      real               a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sorgtr", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cunmlq( side, trans, m, n, k, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      complex            a( lda, * ), c( ldc, * ), tau( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cunmlq", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spteqr( compz, n, d, e, z, ldz, work, info )
      character          compz
      integer            info, ldz, n
      real               d( * ), e( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spteqr", pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtrttp( uplo, n, a, lda, ap, info )
      character          uplo
      integer            info, n, lda
      double precision   a( lda, * ), ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtrttp", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctrevc( side, howmny, select, n, t, ldt, vl, ldvl, vr,
     $                   ldvr, mm, m, work, rwork, info )
      character          howmny, side
      integer            info, ldt, ldvl, ldvr, m, mm, n
      logical            select( * )
      real               rwork( * )
      complex            t( ldt, * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctrevc", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(howmny, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(t, pipe)
      call pipe_write_integer(ldt, pipe)
      call pipe_write_complexs(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_complexs(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_integer(mm, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(howmny, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(t, pipe)
      call pipe_read_integer(ldt, pipe)
      call pipe_read_complexs(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_complexs(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_integer(mm, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgbsv( n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb, info )
      integer            info, kl, ku, ldab, ldb, n, nrhs
      integer            ipiv( * )
      real               ab( ldab, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgbsv", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssyevr( jobz, range, uplo, n, a, lda, vl, vu, il, iu,
     $                   abstol, m, w, z, ldz, isuppz, work, lwork,
     $                   iwork, liwork, info )
      character          jobz, range, uplo
      integer            il, info, iu, lda, ldz, liwork, lwork, m, n
      real               abstol, vl, vu
      integer            isuppz( * ), iwork( * )
      real               a( lda, * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssyevr", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_real(vl, pipe)
      call pipe_write_real(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_real(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integers(isuppz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_real(vl, pipe)
      call pipe_read_real(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_real(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integers(isuppz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sbdsdc( uplo, compq, n, d, e, u, ldu, vt, ldvt, q, iq,
     $                   work, iwork, info )
      character          compq, uplo
      integer            info, ldu, ldvt, n
      integer            iq( * ), iwork( * )
      real               d( * ), e( * ), q( * ), u( ldu, * ),
     $                   vt( ldvt, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sbdsdc", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(compq, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_reals(u, pipe)
      call pipe_write_integer(ldu, pipe)
      call pipe_write_reals(vt, pipe)
      call pipe_write_integer(ldvt, pipe)
      call pipe_write_reals(q, pipe)
      call pipe_write_integers(iq, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(compq, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_reals(u, pipe)
      call pipe_read_integer(ldu, pipe)
      call pipe_read_reals(vt, pipe)
      call pipe_read_integer(ldvt, pipe)
      call pipe_read_reals(q, pipe)
      call pipe_read_integers(iq, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtptrs( uplo, trans, diag, n, nrhs, ap, b, ldb, info )
      character          diag, trans, uplo
      integer            info, ldb, n, nrhs
      double precision   ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtptrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssysvx( fact, uplo, n, nrhs, a, lda, af, ldaf, ipiv, b,
     $                   ldb, x, ldx, rcond, ferr, berr, work, lwork,
     $                   iwork, info )
      character          fact, uplo
      integer            info, lda, ldaf, ldb, ldx, lwork, n, nrhs
      real               rcond
      integer            ipiv( * ), iwork( * )
      real               a( lda, * ), af( ldaf, * ), b( ldb, * ),
     $                   berr( * ), ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssysvx", pipe)
      call pipe_write_character(fact, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(af, pipe)
      call pipe_write_integer(ldaf, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(fact, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(af, pipe)
      call pipe_read_integer(ldaf, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsyevx( jobz, range, uplo, n, a, lda, vl, vu, il, iu,
     $                   abstol, m, w, z, ldz, work, lwork, iwork,
     $                   ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, lda, ldz, lwork, m, n
      double precision   abstol, vl, vu
      integer            ifail( * ), iwork( * )
      double precision   a( lda, * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsyevx", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_double(vl, pipe)
      call pipe_write_double(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_double(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_double(vl, pipe)
      call pipe_read_double(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_double(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sggevx( balanc, jobvl, jobvr, sense, n, a, lda, b, ldb,
     $                   alphar, alphai, beta, vl, ldvl, vr, ldvr, ilo,
     $                   ihi, lscale, rscale, abnrm, bbnrm, rconde,
     $                   rcondv, work, lwork, iwork, bwork, info )
      character          balanc, jobvl, jobvr, sense
      integer            ihi, ilo, info, lda, ldb, ldvl, ldvr, lwork, n
      real               abnrm, bbnrm
      logical            bwork( * )
      integer            iwork( * )
      real               a( lda, * ), alphai( * ), alphar( * ),
     $                   b( ldb, * ), beta( * ), lscale( * ),
     $                   rconde( * ), rcondv( * ), rscale( * ),
     $                   vl( ldvl, * ), vr( ldvr, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sggevx", pipe)
      call pipe_write_character(balanc, pipe)
      call pipe_write_character(jobvl, pipe)
      call pipe_write_character(jobvr, pipe)
      call pipe_write_character(sense, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(alphar, pipe)
      call pipe_write_reals(alphai, pipe)
      call pipe_write_reals(beta, pipe)
      call pipe_write_reals(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_reals(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_reals(lscale, pipe)
      call pipe_write_reals(rscale, pipe)
      call pipe_write_real(abnrm, pipe)
      call pipe_write_real(bbnrm, pipe)
      call pipe_write_reals(rconde, pipe)
      call pipe_write_reals(rcondv, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_logics(bwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(balanc, pipe)
      call pipe_read_character(jobvl, pipe)
      call pipe_read_character(jobvr, pipe)
      call pipe_read_character(sense, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(alphar, pipe)
      call pipe_read_reals(alphai, pipe)
      call pipe_read_reals(beta, pipe)
      call pipe_read_reals(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_reals(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_reals(lscale, pipe)
      call pipe_read_reals(rscale, pipe)
      call pipe_read_real(abnrm, pipe)
      call pipe_read_real(bbnrm, pipe)
      call pipe_read_reals(rconde, pipe)
      call pipe_read_reals(rcondv, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_logics(bwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cunghr( n, ilo, ihi, a, lda, tau, work, lwork, info )
      integer            ihi, ilo, info, lda, lwork, n
      complex            a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cunghr", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zunmbr( vect, side, trans, m, n, k, a, lda, tau, c,
     $                   ldc, work, lwork, info )
      character          side, trans, vect
      integer            info, k, lda, ldc, lwork, m, n
      complex*16         a( lda, * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zunmbr", pipe)
      call pipe_write_character(vect, pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(vect, pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpptrf( uplo, n, ap, info )
      character          uplo
      integer            info, n
      complex            ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpptrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chbevd( jobz, uplo, n, kd, ab, ldab, w, z, ldz, work,
     $                   lwork, rwork, lrwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, kd, ldab, ldz, liwork, lrwork, lwork, n
      integer            iwork( * )
      real               rwork( * ), w( * )
      complex            ab( ldab, * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chbevd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(lrwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(lrwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpocon( uplo, n, a, lda, anorm, rcond, work, rwork,
     $                   info )
      character          uplo
      integer            info, lda, n
      real               anorm, rcond
      real               rwork( * )
      complex            a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpocon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_real(anorm, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_real(anorm, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhptrs( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhptrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgeqrf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      real               a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgeqrf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgebak( job, side, n, ilo, ihi, scale, m, v, ldv,
     $                   info )
      character          job, side
      integer            ihi, ilo, info, ldv, m, n
      double precision   scale( * ), v( ldv, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgebak", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_doubles(scale, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(v, pipe)
      call pipe_write_integer(ldv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_doubles(scale, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(v, pipe)
      call pipe_read_integer(ldv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine stfttr( transr, uplo, n, arf, a, lda, info )
      character          transr, uplo
      integer            info, n, lda
      real               a( 0: lda-1, 0: * ), arf( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("stfttr", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(arf, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(arf, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zspcon( uplo, n, ap, ipiv, anorm, rcond, work, info )
      character          uplo
      integer            info, n
      double precision   anorm, rcond
      integer            ipiv( * )
      complex*16         ap( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zspcon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_double(anorm, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_double(anorm, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zungtr( uplo, n, a, lda, tau, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      complex*16         a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zungtr", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgeequb( m, n, a, lda, r, c, rowcnd, colcnd, amax,
     $                    info )
      integer            info, lda, m, n
      double precision   amax, colcnd, rowcnd
      double precision   a( lda, * ), c( * ), r( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgeequb", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(r, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_double(rowcnd, pipe)
      call pipe_write_double(colcnd, pipe)
      call pipe_write_double(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(r, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_double(rowcnd, pipe)
      call pipe_read_double(colcnd, pipe)
      call pipe_read_double(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssfrk( transr, uplo, trans, n, k, alpha, a, lda, beta,
     $                  c )
      real               alpha, beta
      integer            k, lda, n
      character          trans, transr, uplo
      real               a( lda, * ), c( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssfrk", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_real(alpha, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_real(beta, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_real(alpha, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_real(beta, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_close(pipe)

      end

      subroutine dormqr( side, trans, m, n, k, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      double precision   a( lda, * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dormqr", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgehrd( n, ilo, ihi, a, lda, tau, work, lwork, info )
      integer            ihi, ilo, info, lda, lwork, n
      complex            a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgehrd", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgbcon( norm, n, kl, ku, ab, ldab, ipiv, anorm, rcond,
     $                   work, iwork, info )
      character          norm
      integer            info, kl, ku, ldab, n
      double precision   anorm, rcond
      integer            ipiv( * ), iwork( * )
      double precision   ab( ldab, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgbcon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_double(anorm, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_double(anorm, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dspgst( itype, uplo, n, ap, bp, info )
      character          uplo
      integer            info, itype, n
      double precision   ap( * ), bp( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dspgst", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_doubles(bp, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_doubles(bp, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sggqrf( n, m, p, a, lda, taua, b, ldb, taub, work,
     $                   lwork, info )
      integer            info, lda, ldb, lwork, m, n, p
      real               a( lda, * ), b( ldb, * ), taua( * ), taub( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sggqrf", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(p, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(taua, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(taub, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(p, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(taua, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(taub, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dbdsdc( uplo, compq, n, d, e, u, ldu, vt, ldvt, q, iq,
     $                   work, iwork, info )
      character          compq, uplo
      integer            info, ldu, ldvt, n
      integer            iq( * ), iwork( * )
      double precision   d( * ), e( * ), q( * ), u( ldu, * ),
     $                   vt( ldvt, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dbdsdc", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(compq, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_doubles(u, pipe)
      call pipe_write_integer(ldu, pipe)
      call pipe_write_doubles(vt, pipe)
      call pipe_write_integer(ldvt, pipe)
      call pipe_write_doubles(q, pipe)
      call pipe_write_integers(iq, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(compq, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_doubles(u, pipe)
      call pipe_read_integer(ldu, pipe)
      call pipe_read_doubles(vt, pipe)
      call pipe_read_integer(ldvt, pipe)
      call pipe_read_doubles(q, pipe)
      call pipe_read_integers(iq, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsygvx( itype, jobz, range, uplo, n, a, lda, b, ldb,
     $                   vl, vu, il, iu, abstol, m, w, z, ldz, work,
     $                   lwork, iwork, ifail, info )
      character          jobz, range, uplo
      integer            il, info, itype, iu, lda, ldb, ldz, lwork, m, n
      double precision   abstol, vl, vu
      integer            ifail( * ), iwork( * )
      double precision   a( lda, * ), b( ldb, * ), w( * ), work( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsygvx", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_double(vl, pipe)
      call pipe_write_double(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_double(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_double(vl, pipe)
      call pipe_read_double(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_double(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chpevx( jobz, range, uplo, n, ap, vl, vu, il, iu,
     $                   abstol, m, w, z, ldz, work, rwork, iwork,
     $                   ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, ldz, m, n
      real               abstol, vl, vu
      integer            ifail( * ), iwork( * )
      real               rwork( * ), w( * )
      complex            ap( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chpevx", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_real(vl, pipe)
      call pipe_write_real(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_real(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_real(vl, pipe)
      call pipe_read_real(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_real(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgelsy( m, n, nrhs, a, lda, b, ldb, jpvt, rcond, rank,
     $                   work, lwork, info )
      integer            info, lda, ldb, lwork, m, n, nrhs, rank
      double precision   rcond
      integer            jpvt( * )
      double precision   a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgelsy", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integers(jpvt, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_integer(rank, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integers(jpvt, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_integer(rank, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztprfs( uplo, trans, diag, n, nrhs, ap, b, ldb, x, ldx,
     $                   ferr, berr, work, rwork, info )
      character          diag, trans, uplo
      integer            info, ldb, ldx, n, nrhs
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         ap( * ), b( ldb, * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztprfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zstein( n, d, e, m, w, iblock, isplit, z, ldz, work,
     $                   iwork, ifail, info )
      integer            info, ldz, m, n
      integer            iblock( * ), ifail( * ), isplit( * ),
     $                   iwork( * )
      double precision   d( * ), e( * ), w( * ), work( * )
      complex*16         z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zstein", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_integers(iblock, pipe)
      call pipe_write_integers(isplit, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_integers(iblock, pipe)
      call pipe_read_integers(isplit, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sposv( uplo, n, nrhs, a, lda, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      real               a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sposv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtrtri( uplo, diag, n, a, lda, info )
      character          diag, uplo
      integer            info, lda, n
      double precision   a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtrtri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhesv( uplo, n, nrhs, a, lda, ipiv, b, ldb, work,
     $                  lwork, info )
      character          uplo
      integer            info, lda, ldb, lwork, n, nrhs
      integer            ipiv( * )
      complex*16         a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhesv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgbequb( m, n, kl, ku, ab, ldab, r, c, rowcnd, colcnd,
     $                    amax, info )
      integer            info, kl, ku, ldab, m, n
      double precision   amax, colcnd, rowcnd
      double precision   c( * ), r( * )
      complex*16         ab( ldab, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgbequb", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(r, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_double(rowcnd, pipe)
      call pipe_write_double(colcnd, pipe)
      call pipe_write_double(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(r, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_double(rowcnd, pipe)
      call pipe_read_double(colcnd, pipe)
      call pipe_read_double(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgelss( m, n, nrhs, a, lda, b, ldb, s, rcond, rank,
     $                   work, lwork, info )
      integer            info, lda, ldb, lwork, m, n, nrhs, rank
      real               rcond
      real               a( lda, * ), b( ldb, * ), s( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgelss", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_integer(rank, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_integer(rank, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtrcon( norm, uplo, diag, n, a, lda, rcond, work,
     $                   iwork, info )
      character          diag, norm, uplo
      integer            info, lda, n
      double precision   rcond
      integer            iwork( * )
      double precision   a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtrcon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgeqlf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      complex            a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgeqlf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chesv( uplo, n, nrhs, a, lda, ipiv, b, ldb, work,
     $                  lwork, info )
      character          uplo
      integer            info, lda, ldb, lwork, n, nrhs
      integer            ipiv( * )
      complex            a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chesv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssbevd( jobz, uplo, n, kd, ab, ldab, w, z, ldz, work,
     $                   lwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, kd, ldab, ldz, liwork, lwork, n
      integer            iwork( * )
      real               ab( ldab, * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssbevd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zggqrf( n, m, p, a, lda, taua, b, ldb, taub, work,
     $                   lwork, info )
      integer            info, lda, ldb, lwork, m, n, p
      complex*16         a( lda, * ), b( ldb, * ), taua( * ), taub( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zggqrf", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(p, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(taua, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(taub, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(p, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(taua, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(taub, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpbsv( uplo, n, kd, nrhs, ab, ldab, b, ldb, info )
      character          uplo
      integer            info, kd, ldab, ldb, n, nrhs
      complex*16         ab( ldab, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpbsv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtftri( transr, uplo, diag, n, a, info )
      character          transr, uplo, diag
      integer            info, n
      double precision   a( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtftri", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zsteqr( compz, n, d, e, z, ldz, work, info )
      character          compz
      integer            info, ldz, n
      double precision   d( * ), e( * ), work( * )
      complex*16         z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zsteqr", pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine csysv( uplo, n, nrhs, a, lda, ipiv, b, ldb, work,
     $                  lwork, info )
      character          uplo
      integer            info, lda, ldb, lwork, n, nrhs
      integer            ipiv( * )
      complex            a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("csysv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spbtrf( uplo, n, kd, ab, ldab, info )
      character          uplo
      integer            info, kd, ldab, n
      real               ab( ldab, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spbtrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine stgsna( job, howmny, select, n, a, lda, b, ldb, vl,
     $                   ldvl, vr, ldvr, s, dif, mm, m, work, lwork,
     $                   iwork, info )
      character          howmny, job
      integer            info, lda, ldb, ldvl, ldvr, lwork, m, mm, n
      logical            select( * )
      integer            iwork( * )
      real               a( lda, * ), b( ldb, * ), dif( * ), s( * ),
     $                   vl( ldvl, * ), vr( ldvr, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("stgsna", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(howmny, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_reals(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_reals(dif, pipe)
      call pipe_write_integer(mm, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(howmny, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_reals(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_reals(dif, pipe)
      call pipe_read_integer(mm, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dhgeqz( job, compq, compz, n, ilo, ihi, h, ldh, t, ldt,
     $                   alphar, alphai, beta, q, ldq, z, ldz, work,
     $                   lwork, info )
      character          compq, compz, job
      integer            ihi, ilo, info, ldh, ldq, ldt, ldz, lwork, n
      double precision   alphai( * ), alphar( * ), beta( * ),
     $                   h( ldh, * ), q( ldq, * ), t( ldt, * ),
     $                   work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dhgeqz", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(compq, pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_doubles(h, pipe)
      call pipe_write_integer(ldh, pipe)
      call pipe_write_doubles(t, pipe)
      call pipe_write_integer(ldt, pipe)
      call pipe_write_doubles(alphar, pipe)
      call pipe_write_doubles(alphai, pipe)
      call pipe_write_doubles(beta, pipe)
      call pipe_write_doubles(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(compq, pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_doubles(h, pipe)
      call pipe_read_integer(ldh, pipe)
      call pipe_read_doubles(t, pipe)
      call pipe_read_integer(ldt, pipe)
      call pipe_read_doubles(alphar, pipe)
      call pipe_read_doubles(alphai, pipe)
      call pipe_read_doubles(beta, pipe)
      call pipe_read_doubles(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zsyequb( uplo, n, a, lda, s, scond, amax, work, info )
      integer            info, lda, n
      double precision   amax, scond
      character          uplo
      complex*16         a( lda, * ), work( * )
      double precision   s( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zsyequb", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_double(scond, pipe)
      call pipe_write_double(amax, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_double(scond, pipe)
      call pipe_read_double(amax, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpftri( transr, uplo, n, a, info )
      character          transr, uplo
      integer            info, n
      complex            a( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpftri", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhbgv( jobz, uplo, n, ka, kb, ab, ldab, bb, ldbb, w, z,
     $                  ldz, work, rwork, info )
      character          jobz, uplo
      integer            info, ka, kb, ldab, ldbb, ldz, n
      double precision   rwork( * ), w( * )
      complex*16         ab( ldab, * ), bb( ldbb, * ), work( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhbgv", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ka, pipe)
      call pipe_write_integer(kb, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complex16s(bb, pipe)
      call pipe_write_integer(ldbb, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ka, pipe)
      call pipe_read_integer(kb, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complex16s(bb, pipe)
      call pipe_read_integer(ldbb, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgesdd( jobz, m, n, a, lda, s, u, ldu, vt, ldvt,
     $                   work, lwork, iwork, info )
      implicit none
      character          jobz
      integer            info, lda, ldu, ldvt, lwork, m, n
      integer            iwork( * )
      double precision   a( lda, * ), s( * ), u( ldu, * ),
     $                   vt( ldvt, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgesdd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_doubles(u, pipe)
      call pipe_write_integer(ldu, pipe)
      call pipe_write_doubles(vt, pipe)
      call pipe_write_integer(ldvt, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_doubles(u, pipe)
      call pipe_read_integer(ldu, pipe)
      call pipe_read_doubles(vt, pipe)
      call pipe_read_integer(ldvt, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgerqf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      complex*16         a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgerqf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgbtrf( m, n, kl, ku, ab, ldab, ipiv, info )
      integer            info, kl, ku, ldab, m, n
      integer            ipiv( * )
      complex*16         ab( ldab, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgbtrf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgttrs( trans, n, nrhs, dl, d, du, du2, ipiv, b, ldb,
     $                   info )
      character          trans
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      complex            b( ldb, * ), d( * ), dl( * ), du( * ), du2( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgttrs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(dl, pipe)
      call pipe_write_complexs(d, pipe)
      call pipe_write_complexs(du, pipe)
      call pipe_write_complexs(du2, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(dl, pipe)
      call pipe_read_complexs(d, pipe)
      call pipe_read_complexs(du, pipe)
      call pipe_read_complexs(du2, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssptrd( uplo, n, ap, d, e, tau, info )
      character          uplo
      integer            info, n
      real               ap( * ), d( * ), e( * ), tau( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssptrd", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cheevd( jobz, uplo, n, a, lda, w, work, lwork, rwork,
     $                   lrwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, lda, liwork, lrwork, lwork, n
      integer            iwork( * )
      real               rwork( * ), w( * )
      complex            a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cheevd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(lrwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(lrwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpptrf( uplo, n, ap, info )
      character          uplo
      integer            info, n
      double precision   ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpptrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chegvx( itype, jobz, range, uplo, n, a, lda, b, ldb,
     $                   vl, vu, il, iu, abstol, m, w, z, ldz, work,
     $                   lwork, rwork, iwork, ifail, info )
      character          jobz, range, uplo
      integer            il, info, itype, iu, lda, ldb, ldz, lwork, m, n
      real               abstol, vl, vu
      integer            ifail( * ), iwork( * )
      real               rwork( * ), w( * )
      complex            a( lda, * ), b( ldb, * ), work( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chegvx", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_real(vl, pipe)
      call pipe_write_real(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_real(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_real(vl, pipe)
      call pipe_read_real(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_real(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine csptrs( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      complex            ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("csptrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssygvx( itype, jobz, range, uplo, n, a, lda, b, ldb,
     $                   vl, vu, il, iu, abstol, m, w, z, ldz, work,
     $                   lwork, iwork, ifail, info )
      character          jobz, range, uplo
      integer            il, info, itype, iu, lda, ldb, ldz, lwork, m, n
      real               abstol, vl, vu
      integer            ifail( * ), iwork( * )
      real               a( lda, * ), b( ldb, * ), w( * ), work( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssygvx", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_real(vl, pipe)
      call pipe_write_real(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_real(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_real(vl, pipe)
      call pipe_read_real(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_real(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztptri( uplo, diag, n, ap, info )
      character          diag, uplo
      integer            info, n
      complex*16         ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztptri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssygvd( itype, jobz, uplo, n, a, lda, b, ldb, w, work,
     $                   lwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, itype, lda, ldb, liwork, lwork, n
      integer            iwork( * )
      real               a( lda, * ), b( ldb, * ), w( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssygvd", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgehrd( n, ilo, ihi, a, lda, tau, work, lwork, info )
      integer            ihi, ilo, info, lda, lwork, n
      complex*16        a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgehrd", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsbgv( jobz, uplo, n, ka, kb, ab, ldab, bb, ldbb, w, z,
     $                  ldz, work, info )
      character          jobz, uplo
      integer            info, ka, kb, ldab, ldbb, ldz, n
      double precision   ab( ldab, * ), bb( ldbb, * ), w( * ),
     $                   work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsbgv", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ka, pipe)
      call pipe_write_integer(kb, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(bb, pipe)
      call pipe_write_integer(ldbb, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ka, pipe)
      call pipe_read_integer(kb, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(bb, pipe)
      call pipe_read_integer(ldbb, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zunghr( n, ilo, ihi, a, lda, tau, work, lwork, info )
      integer            ihi, ilo, info, lda, lwork, n
      complex*16         a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zunghr", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssprfs( uplo, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx,
     $                   ferr, berr, work, iwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      integer            ipiv( * ), iwork( * )
      real               afp( * ), ap( * ), b( ldb, * ), berr( * ),
     $                   ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssprfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_reals(afp, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_reals(afp, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgbtrs( trans, n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb,
     $                   info )
      character          trans
      integer            info, kl, ku, ldab, ldb, n, nrhs
      integer            ipiv( * )
      real               ab( ldab, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgbtrs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine stpttf( transr, uplo, n, ap, arf, info )
      character          transr, uplo
      integer            info, n
      real               ap( 0: * ), arf( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("stpttf", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_reals(arf, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_reals(arf, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsytrd( uplo, n, a, lda, d, e, tau, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      double precision   a( lda, * ), d( * ), e( * ), tau( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsytrd", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dormhr( side, trans, m, n, ilo, ihi, a, lda, tau, c,
     $                   ldc, work, lwork, info )
      character          side, trans
      integer            ihi, ilo, info, lda, ldc, lwork, m, n
      double precision   a( lda, * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dormhr", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgtsvx( fact, trans, n, nrhs, dl, d, du, dlf, df, duf,
     $                   du2, ipiv, b, ldb, x, ldx, rcond, ferr, berr,
     $                   work, rwork, info )
      character          fact, trans
      integer            info, ldb, ldx, n, nrhs
      real               rcond
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            b( ldb, * ), d( * ), df( * ), dl( * ),
     $                   dlf( * ), du( * ), du2( * ), duf( * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgtsvx", pipe)
      call pipe_write_character(fact, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(dl, pipe)
      call pipe_write_complexs(d, pipe)
      call pipe_write_complexs(du, pipe)
      call pipe_write_complexs(dlf, pipe)
      call pipe_write_complexs(df, pipe)
      call pipe_write_complexs(duf, pipe)
      call pipe_write_complexs(du2, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(fact, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(dl, pipe)
      call pipe_read_complexs(d, pipe)
      call pipe_read_complexs(du, pipe)
      call pipe_read_complexs(dlf, pipe)
      call pipe_read_complexs(df, pipe)
      call pipe_read_complexs(duf, pipe)
      call pipe_read_complexs(du2, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtprfs( uplo, trans, diag, n, nrhs, ap, b, ldb, x, ldx,
     $                   ferr, berr, work, iwork, info )
      character          diag, trans, uplo
      integer            info, ldb, ldx, n, nrhs
      integer            iwork( * )
      double precision   ap( * ), b( ldb, * ), berr( * ), ferr( * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtprfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sstebz( range, order, n, vl, vu, il, iu, abstol, d, e,
     $                   m, nsplit, w, iblock, isplit, work, iwork,
     $                   info )
      character          order, range
      integer            il, info, iu, m, n, nsplit
      real               abstol, vl, vu
      integer            iblock( * ), isplit( * ), iwork( * )
      real               d( * ), e( * ), w( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sstebz", pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(order, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_real(vl, pipe)
      call pipe_write_real(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_real(abstol, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(nsplit, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_integers(iblock, pipe)
      call pipe_write_integers(isplit, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(order, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_real(vl, pipe)
      call pipe_read_real(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_real(abstol, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(nsplit, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_integers(iblock, pipe)
      call pipe_read_integers(isplit, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpbtrf( uplo, n, kd, ab, ldab, info )
      character          uplo
      integer            info, kd, ldab, n
      complex*16         ab( ldab, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpbtrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine strsen( job, compq, select, n, t, ldt, q, ldq, wr, wi,
     $                   m, s, sep, work, lwork, iwork, liwork, info )
      character          compq, job
      integer            info, ldq, ldt, liwork, lwork, m, n
      real               s, sep
      logical            select( * )
      integer            iwork( * )
      real               q( ldq, * ), t( ldt, * ), wi( * ), work( * ),
     $                   wr( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("strsen", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(compq, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(t, pipe)
      call pipe_write_integer(ldt, pipe)
      call pipe_write_reals(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_reals(wr, pipe)
      call pipe_write_reals(wi, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_real(s, pipe)
      call pipe_write_real(sep, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(compq, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(t, pipe)
      call pipe_read_integer(ldt, pipe)
      call pipe_read_reals(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_reals(wr, pipe)
      call pipe_read_reals(wi, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_real(s, pipe)
      call pipe_read_real(sep, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dorglq( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      double precision   a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dorglq", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cheevx( jobz, range, uplo, n, a, lda, vl, vu, il, iu,
     $                   abstol, m, w, z, ldz, work, lwork, rwork,
     $                   iwork, ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, lda, ldz, lwork, m, n
      real               abstol, vl, vu
      integer            ifail( * ), iwork( * )
      real               rwork( * ), w( * )
      complex            a( lda, * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cheevx", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_real(vl, pipe)
      call pipe_write_real(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_real(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_real(vl, pipe)
      call pipe_read_real(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_real(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgesvd( jobu, jobvt, m, n, a, lda, s, u, ldu, vt, ldvt,
     $                   work, lwork, info )
      character          jobu, jobvt
      integer            info, lda, ldu, ldvt, lwork, m, n
      real               a( lda, * ), s( * ), u( ldu, * ),
     $                   vt( ldvt, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgesvd", pipe)
      call pipe_write_character(jobu, pipe)
      call pipe_write_character(jobvt, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_reals(u, pipe)
      call pipe_write_integer(ldu, pipe)
      call pipe_write_reals(vt, pipe)
      call pipe_write_integer(ldvt, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobu, pipe)
      call pipe_read_character(jobvt, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_reals(u, pipe)
      call pipe_read_integer(ldu, pipe)
      call pipe_read_reals(vt, pipe)
      call pipe_read_integer(ldvt, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgeqlf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      real               a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgeqlf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpteqr( compz, n, d, e, z, ldz, work, info )
      character          compz
      integer            info, ldz, n
      real               d( * ), e( * ), work( * )
      complex            z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpteqr", pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssyevx( jobz, range, uplo, n, a, lda, vl, vu, il, iu,
     $                   abstol, m, w, z, ldz, work, lwork, iwork,
     $                   ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, lda, ldz, lwork, m, n
      real               abstol, vl, vu
      integer            ifail( * ), iwork( * )
      real               a( lda, * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssyevx", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_real(vl, pipe)
      call pipe_write_real(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_real(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_real(vl, pipe)
      call pipe_read_real(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_real(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpbcon( uplo, n, kd, ab, ldab, anorm, rcond, work,
     $                   rwork, info )
      character          uplo
      integer            info, kd, ldab, n
      double precision   anorm, rcond
      double precision   rwork( * )
      complex*16         ab( ldab, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpbcon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_double(anorm, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_double(anorm, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgetrs( trans, n, nrhs, a, lda, ipiv, b, ldb, info )
      character          trans
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      complex            a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgetrs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsbgvd( jobz, uplo, n, ka, kb, ab, ldab, bb, ldbb, w,
     $                   z, ldz, work, lwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, ka, kb, ldab, ldbb, ldz, liwork, lwork, n
      integer            iwork( * )
      double precision   ab( ldab, * ), bb( ldbb, * ), w( * ),
     $                   work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsbgvd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ka, pipe)
      call pipe_write_integer(kb, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(bb, pipe)
      call pipe_write_integer(ldbb, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ka, pipe)
      call pipe_read_integer(kb, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(bb, pipe)
      call pipe_read_integer(ldbb, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgeqrfp( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      complex            a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgeqrfp", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgeequb( m, n, a, lda, r, c, rowcnd, colcnd, amax,
     $                    info )
      integer            info, lda, m, n
      real               amax, colcnd, rowcnd
      real               a( lda, * ), c( * ), r( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgeequb", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(r, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_real(rowcnd, pipe)
      call pipe_write_real(colcnd, pipe)
      call pipe_write_real(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(r, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_real(rowcnd, pipe)
      call pipe_read_real(colcnd, pipe)
      call pipe_read_real(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sggbal( job, n, a, lda, b, ldb, ilo, ihi, lscale,
     $                   rscale, work, info )
      character          job
      integer            ihi, ilo, info, lda, ldb, n
      real               a( lda, * ), b( ldb, * ), lscale( * ),
     $                   rscale( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sggbal", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_reals(lscale, pipe)
      call pipe_write_reals(rscale, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_reals(lscale, pipe)
      call pipe_read_reals(rscale, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsytri( uplo, n, a, lda, ipiv, work, info )
      character          uplo
      integer            info, lda, n
      integer            ipiv( * )
      double precision   a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsytri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsfrk( transr, uplo, trans, n, k, alpha, a, lda, beta,
     $                  c )
      double precision   alpha, beta
      integer            k, lda, n
      character          trans, transr, uplo
      double precision   a( lda, * ), c( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsfrk", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_double(alpha, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_double(beta, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_double(alpha, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_double(beta, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_close(pipe)

      end

      subroutine stgsyl( trans, ijob, m, n, a, lda, b, ldb, c, ldc, d,
     $                   ldd, e, lde, f, ldf, scale, dif, work, lwork,
     $                   iwork, info )
      character          trans
      integer            ijob, info, lda, ldb, ldc, ldd, lde, ldf,
     $                   lwork, m, n
      real               dif, scale
      integer            iwork( * )
      real               a( lda, * ), b( ldb, * ), c( ldc, * ),
     $                   d( ldd, * ), e( lde, * ), f( ldf, * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("stgsyl", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(ijob, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_integer(ldd, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_integer(lde, pipe)
      call pipe_write_reals(f, pipe)
      call pipe_write_integer(ldf, pipe)
      call pipe_write_real(scale, pipe)
      call pipe_write_real(dif, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(ijob, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_integer(ldd, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_integer(lde, pipe)
      call pipe_read_reals(f, pipe)
      call pipe_read_integer(ldf, pipe)
      call pipe_read_real(scale, pipe)
      call pipe_read_real(dif, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpptrf( uplo, n, ap, info )
      character          uplo
      integer            info, n
      complex*16         ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpptrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgetrf( m, n, a, lda, ipiv, info )
      integer            info, lda, m, n
      integer            ipiv( * )
      complex*16         a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgetrf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtgsna( job, howmny, select, n, a, lda, b, ldb, vl,
     $                   ldvl, vr, ldvr, s, dif, mm, m, work, lwork,
     $                   iwork, info )
      character          howmny, job
      integer            info, lda, ldb, ldvl, ldvr, lwork, m, mm, n
      logical            select( * )
      integer            iwork( * )
      double precision   a( lda, * ), b( ldb, * ), dif( * ), s( * ),
     $                   vl( ldvl, * ), vr( ldvr, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtgsna", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(howmny, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_doubles(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_doubles(dif, pipe)
      call pipe_write_integer(mm, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(howmny, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_doubles(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_doubles(dif, pipe)
      call pipe_read_integer(mm, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cggevx( balanc, jobvl, jobvr, sense, n, a, lda, b, ldb,
     $                   alpha, beta, vl, ldvl, vr, ldvr, ilo, ihi,
     $                   lscale, rscale, abnrm, bbnrm, rconde, rcondv,
     $                   work, lwork, rwork, iwork, bwork, info )
      character          balanc, jobvl, jobvr, sense
      integer            ihi, ilo, info, lda, ldb, ldvl, ldvr, lwork, n
      real               abnrm, bbnrm
      logical            bwork( * )
      integer            iwork( * )
      real               lscale( * ), rconde( * ), rcondv( * ),
     $                   rscale( * ), rwork( * )
      complex            a( lda, * ), alpha( * ), b( ldb, * ),
     $                   beta( * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cggevx", pipe)
      call pipe_write_character(balanc, pipe)
      call pipe_write_character(jobvl, pipe)
      call pipe_write_character(jobvr, pipe)
      call pipe_write_character(sense, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(alpha, pipe)
      call pipe_write_complexs(beta, pipe)
      call pipe_write_complexs(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_complexs(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_reals(lscale, pipe)
      call pipe_write_reals(rscale, pipe)
      call pipe_write_real(abnrm, pipe)
      call pipe_write_real(bbnrm, pipe)
      call pipe_write_reals(rconde, pipe)
      call pipe_write_reals(rcondv, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_logics(bwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(balanc, pipe)
      call pipe_read_character(jobvl, pipe)
      call pipe_read_character(jobvr, pipe)
      call pipe_read_character(sense, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(alpha, pipe)
      call pipe_read_complexs(beta, pipe)
      call pipe_read_complexs(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_complexs(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_reals(lscale, pipe)
      call pipe_read_reals(rscale, pipe)
      call pipe_read_real(abnrm, pipe)
      call pipe_read_real(bbnrm, pipe)
      call pipe_read_reals(rconde, pipe)
      call pipe_read_reals(rcondv, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_logics(bwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgelsd( m, n, nrhs, a, lda, b, ldb, s, rcond, rank,
     $                   work, lwork, rwork, iwork, info )
      integer            info, lda, ldb, lwork, m, n, nrhs, rank
      real               rcond
      integer            iwork( * )
      real               rwork( * ), s( * )
      complex            a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgelsd", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_integer(rank, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_integer(rank, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssygst( itype, uplo, n, a, lda, b, ldb, info )
      character          uplo
      integer            info, itype, lda, ldb, n
      real               a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssygst", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spttrs( n, nrhs, d, e, b, ldb, info )
      integer            info, ldb, n, nrhs
      real               b( ldb, * ), d( * ), e( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spttrs", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cupmtr( side, uplo, trans, m, n, ap, tau, c, ldc, work,
     $                   info )
      character          side, trans, uplo
      integer            info, ldc, m, n
      complex            ap( * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cupmtr", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsbevd( jobz, uplo, n, kd, ab, ldab, w, z, ldz, work,
     $                   lwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, kd, ldab, ldz, liwork, lwork, n
      integer            iwork( * )
      double precision   ab( ldab, * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsbevd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgelqf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      real               a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgelqf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spptrs( uplo, n, nrhs, ap, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      real               ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spptrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgghrd( compq, compz, n, ilo, ihi, a, lda, b, ldb, q,
     $                   ldq, z, ldz, info )
      character          compq, compz
      integer            ihi, ilo, info, lda, ldb, ldq, ldz, n
      complex            a( lda, * ), b( ldb, * ), q( ldq, * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgghrd", pipe)
      call pipe_write_character(compq, pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(compq, pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sormtr( side, uplo, trans, m, n, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans, uplo
      integer            info, lda, ldc, lwork, m, n
      real               a( lda, * ), c( ldc, * ), tau( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sormtr", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhfrk( transr, uplo, trans, n, k, alpha, a, lda, beta,
     $                  c )
      double precision   alpha, beta
      integer            k, lda, n
      character          trans, transr, uplo
      complex*16         a( lda, * ), c( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhfrk", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_double(alpha, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_double(beta, pipe)
      call pipe_write_complex16s(c, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_double(alpha, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_double(beta, pipe)
      call pipe_read_complex16s(c, pipe)
      call pipe_close(pipe)

      end

      subroutine chsein( side, eigsrc, initv, select, n, h, ldh, w, vl,
     $                   ldvl, vr, ldvr, mm, m, work, rwork, ifaill,
     $                   ifailr, info )
      character          eigsrc, initv, side
      integer            info, ldh, ldvl, ldvr, m, mm, n
      logical            select( * )
      integer            ifaill( * ), ifailr( * )
      real               rwork( * )
      complex            h( ldh, * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   w( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chsein", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(eigsrc, pipe)
      call pipe_write_character(initv, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(h, pipe)
      call pipe_write_integer(ldh, pipe)
      call pipe_write_complexs(w, pipe)
      call pipe_write_complexs(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_complexs(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_integer(mm, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integers(ifaill, pipe)
      call pipe_write_integers(ifailr, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(eigsrc, pipe)
      call pipe_read_character(initv, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(h, pipe)
      call pipe_read_integer(ldh, pipe)
      call pipe_read_complexs(w, pipe)
      call pipe_read_complexs(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_complexs(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_integer(mm, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integers(ifaill, pipe)
      call pipe_read_integers(ifailr, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgelqf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      double precision   a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgelqf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sstevx( jobz, range, n, d, e, vl, vu, il, iu, abstol,
     $                   m, w, z, ldz, work, iwork, ifail, info )
      character          jobz, range
      integer            il, info, iu, ldz, m, n
      real               abstol, vl, vu
      integer            ifail( * ), iwork( * )
      real               d( * ), e( * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sstevx", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_real(vl, pipe)
      call pipe_write_real(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_real(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_real(vl, pipe)
      call pipe_read_real(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_real(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cspcon( uplo, n, ap, ipiv, anorm, rcond, work, info )
      character          uplo
      integer            info, n
      real               anorm, rcond
      integer            ipiv( * )
      complex            ap( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cspcon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_real(anorm, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_real(anorm, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spstrf( uplo, n, a, lda, piv, rank, tol, work, info )
      real               tol
      integer            info, lda, n, rank
      character          uplo
      real               a( lda, * ), work( 2*n )
      integer            piv( n )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spstrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(piv, pipe)
      call pipe_write_integer(rank, pipe)
      call pipe_write_real(tol, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(piv, pipe)
      call pipe_read_integer(rank, pipe)
      call pipe_read_real(tol, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgelqf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      complex*16         a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgelqf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgeev( jobvl, jobvr, n, a, lda, w, vl, ldvl, vr, ldvr,
     $                  work, lwork, rwork, info )
      implicit none
      character          jobvl, jobvr
      integer            info, lda, ldvl, ldvr, lwork, n
      real   rwork( * )
      complex         a( lda, * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   w( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgeev", pipe)
      call pipe_write_character(jobvl, pipe)
      call pipe_write_character(jobvr, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(w, pipe)
      call pipe_write_complexs(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_complexs(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobvl, pipe)
      call pipe_read_character(jobvr, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(w, pipe)
      call pipe_read_complexs(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_complexs(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztgexc( wantq, wantz, n, a, lda, b, ldb, q, ldq, z,
     $                   ldz, ifst, ilst, info )
      logical            wantq, wantz
      integer            ifst, ilst, info, lda, ldb, ldq, ldz, n
      complex*16         a( lda, * ), b( ldb, * ), q( ldq, * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztgexc", pipe)
      call pipe_write_logic(wantq, pipe)
      call pipe_write_logic(wantz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integer(ifst, pipe)
      call pipe_write_integer(ilst, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_logic(wantq, pipe)
      call pipe_read_logic(wantz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integer(ifst, pipe)
      call pipe_read_integer(ilst, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctrtri( uplo, diag, n, a, lda, info )
      character          diag, uplo
      integer            info, lda, n
      complex            a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctrtri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtrtrs( uplo, trans, diag, n, nrhs, a, lda, b, ldb,
     $                   info )
      character          diag, trans, uplo
      integer            info, lda, ldb, n, nrhs
      double precision   a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtrtrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine csysvx( fact, uplo, n, nrhs, a, lda, af, ldaf, ipiv, b,
     $                   ldb, x, ldx, rcond, ferr, berr, work, lwork,
     $                   rwork, info )
      character          fact, uplo
      integer            info, lda, ldaf, ldb, ldx, lwork, n, nrhs
      real               rcond
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            a( lda, * ), af( ldaf, * ), b( ldb, * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("csysvx", pipe)
      call pipe_write_character(fact, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(af, pipe)
      call pipe_write_integer(ldaf, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(fact, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(af, pipe)
      call pipe_read_integer(ldaf, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctftri( transr, uplo, diag, n, a, info )
      character          transr, uplo, diag
      integer            info, n
      complex            a( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctftri", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsptri( uplo, n, ap, ipiv, work, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      double precision   ap( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsptri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cptrfs( uplo, n, nrhs, d, e, df, ef, b, ldb, x, ldx,
     $                   ferr, berr, work, rwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      real               berr( * ), d( * ), df( * ), ferr( * ),
     $                   rwork( * )
      complex            b( ldb, * ), e( * ), ef( * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cptrfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_complexs(e, pipe)
      call pipe_write_reals(df, pipe)
      call pipe_write_complexs(ef, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_complexs(e, pipe)
      call pipe_read_reals(df, pipe)
      call pipe_read_complexs(ef, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgetrf( m, n, a, lda, ipiv, info )
      integer            info, lda, m, n
      integer            ipiv( * )
      double precision   a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgetrf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgghrd( compq, compz, n, ilo, ihi, a, lda, b, ldb, q,
     $                   ldq, z, ldz, info )
      character          compq, compz
      integer            ihi, ilo, info, lda, ldb, ldq, ldz, n
      double precision   a( lda, * ), b( ldb, * ), q( ldq, * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgghrd", pipe)
      call pipe_write_character(compq, pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(compq, pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dppequ( uplo, n, ap, s, scond, amax, info )
      character          uplo
      integer            info, n
      double precision   amax, scond
      double precision   ap( * ), s( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dppequ", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_double(scond, pipe)
      call pipe_write_double(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_double(scond, pipe)
      call pipe_read_double(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssytri( uplo, n, a, lda, ipiv, work, info )
      character          uplo
      integer            info, lda, n
      integer            ipiv( * )
      real               a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssytri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsycon( uplo, n, a, lda, ipiv, anorm, rcond, work,
     $                   iwork, info )
      character          uplo
      integer            info, lda, n
      double precision   anorm, rcond
      integer            ipiv( * ), iwork( * )
      double precision   a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsycon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_double(anorm, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_double(anorm, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgehrd( n, ilo, ihi, a, lda, tau, work, lwork, info )
      integer            ihi, ilo, info, lda, lwork, n
      double precision  a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgehrd", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgbsv( n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb, info )
      integer            info, kl, ku, ldab, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         ab( ldab, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgbsv", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zsytrf( uplo, n, a, lda, ipiv, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      integer            ipiv( * )
      complex*16         a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zsytrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssyev( jobz, uplo, n, a, lda, w, work, lwork, info )
      character          jobz, uplo
      integer            info, lda, lwork, n
      real               a( lda, * ), w( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssyev", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chetrs( uplo, n, nrhs, a, lda, ipiv, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      complex            a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chetrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zsyrfs( uplo, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb,
     $                   x, ldx, ferr, berr, work, rwork, info )
      character          uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         a( lda, * ), af( ldaf, * ), b( ldb, * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zsyrfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(af, pipe)
      call pipe_write_integer(ldaf, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(af, pipe)
      call pipe_read_integer(ldaf, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dspsvx( fact, uplo, n, nrhs, ap, afp, ipiv, b, ldb, x,
     $                   ldx, rcond, ferr, berr, work, iwork, info )
      character          fact, uplo
      integer            info, ldb, ldx, n, nrhs
      double precision   rcond
      integer            ipiv( * ), iwork( * )
      double precision   afp( * ), ap( * ), b( ldb, * ), berr( * ),
     $                   ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dspsvx", pipe)
      call pipe_write_character(fact, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_doubles(afp, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(fact, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_doubles(afp, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgttrf( n, dl, d, du, du2, ipiv, info )
      integer            info, n
      integer            ipiv( * )
      complex*16         d( * ), dl( * ), du( * ), du2( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgttrf", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(dl, pipe)
      call pipe_write_complex16s(d, pipe)
      call pipe_write_complex16s(du, pipe)
      call pipe_write_complex16s(du2, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(dl, pipe)
      call pipe_read_complex16s(d, pipe)
      call pipe_read_complex16s(du, pipe)
      call pipe_read_complex16s(du2, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgeqp3( m, n, a, lda, jpvt, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      integer            jpvt( * )
      double precision   a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgeqp3", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(jpvt, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(jpvt, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chegv( itype, jobz, uplo, n, a, lda, b, ldb, w, work,
     $                  lwork, rwork, info )
      character          jobz, uplo
      integer            info, itype, lda, ldb, lwork, n
      real               rwork( * ), w( * )
      complex            a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chegv", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spptrf( uplo, n, ap, info )
      character          uplo
      integer            info, n
      real               ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spptrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine csycon( uplo, n, a, lda, ipiv, anorm, rcond, work,
     $                   info )
      character          uplo
      integer            info, lda, n
      real               anorm, rcond
      integer            ipiv( * )
      complex            a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("csycon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_real(anorm, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_real(anorm, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zheevd( jobz, uplo, n, a, lda, w, work, lwork, rwork,
     $                   lrwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, lda, liwork, lrwork, lwork, n
      integer            iwork( * )
      double precision   rwork( * ), w( * )
      complex*16         a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zheevd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(lrwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(lrwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgebal( job, n, a, lda, ilo, ihi, scale, info )
      character          job
      integer            ihi, ilo, info, lda, n
      real               scale( * )
      complex            a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgebal", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_reals(scale, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_reals(scale, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgerfs( trans, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb,
     $                   x, ldx, ferr, berr, work, rwork, info )
      character          trans
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         a( lda, * ), af( ldaf, * ), b( ldb, * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgerfs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(af, pipe)
      call pipe_write_integer(ldaf, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(af, pipe)
      call pipe_read_integer(ldaf, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cunmql( side, trans, m, n, k, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      complex            a( lda, * ), c( ldc, * ), tau( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cunmql", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dspev( jobz, uplo, n, ap, w, z, ldz, work, info )
      character          jobz, uplo
      integer            info, ldz, n
      double precision   ap( * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dspev", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cptsvx( fact, n, nrhs, d, e, df, ef, b, ldb, x, ldx,
     $                   rcond, ferr, berr, work, rwork, info )
      character          fact
      integer            info, ldb, ldx, n, nrhs
      real               rcond
      real               berr( * ), d( * ), df( * ), ferr( * ),
     $                   rwork( * )
      complex            b( ldb, * ), e( * ), ef( * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cptsvx", pipe)
      call pipe_write_character(fact, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_complexs(e, pipe)
      call pipe_write_reals(df, pipe)
      call pipe_write_complexs(ef, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(fact, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_complexs(e, pipe)
      call pipe_read_reals(df, pipe)
      call pipe_read_complexs(ef, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cggev( jobvl, jobvr, n, a, lda, b, ldb, alpha, beta,
     $                  vl, ldvl, vr, ldvr, work, lwork, rwork, info )
      character          jobvl, jobvr
      integer            info, lda, ldb, ldvl, ldvr, lwork, n
      real               rwork( * )
      complex            a( lda, * ), alpha( * ), b( ldb, * ),
     $                   beta( * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cggev", pipe)
      call pipe_write_character(jobvl, pipe)
      call pipe_write_character(jobvr, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(alpha, pipe)
      call pipe_write_complexs(beta, pipe)
      call pipe_write_complexs(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_complexs(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobvl, pipe)
      call pipe_read_character(jobvr, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(alpha, pipe)
      call pipe_read_complexs(beta, pipe)
      call pipe_read_complexs(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_complexs(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sstedc( compz, n, d, e, z, ldz, work, lwork, iwork,
     $                   liwork, info )
      character          compz
      integer            info, ldz, liwork, lwork, n
      integer            iwork( * )
      real               d( * ), e( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sstedc", pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dormtr( side, uplo, trans, m, n, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans, uplo
      integer            info, lda, ldc, lwork, m, n
      double precision   a( lda, * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dormtr", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhegvd( itype, jobz, uplo, n, a, lda, b, ldb, w, work,
     $                   lwork, rwork, lrwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, itype, lda, ldb, liwork, lrwork, lwork, n
      integer            iwork( * )
      double precision   rwork( * ), w( * )
      complex*16         a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhegvd", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(lrwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(lrwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cungbr( vect, m, n, k, a, lda, tau, work, lwork, info )
      character          vect
      integer            info, k, lda, lwork, m, n
      complex            a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cungbr", pipe)
      call pipe_write_character(vect, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(vect, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine checon( uplo, n, a, lda, ipiv, anorm, rcond, work,
     $                   info )
      character          uplo
      integer            info, lda, n
      real               anorm, rcond
      integer            ipiv( * )
      complex            a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("checon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_real(anorm, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_real(anorm, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgbbrd( vect, m, n, ncc, kl, ku, ab, ldab, d, e, q,
     $                   ldq, pt, ldpt, c, ldc, work, rwork, info )
      character          vect
      integer            info, kl, ku, ldab, ldc, ldpt, ldq, m, n, ncc
      double precision   d( * ), e( * ), rwork( * )
      complex*16         ab( ldab, * ), c( ldc, * ), pt( ldpt, * ),
     $                   q( ldq, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgbbrd", pipe)
      call pipe_write_character(vect, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ncc, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_complex16s(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_complex16s(pt, pipe)
      call pipe_write_integer(ldpt, pipe)
      call pipe_write_complex16s(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(vect, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ncc, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_complex16s(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_complex16s(pt, pipe)
      call pipe_read_integer(ldpt, pipe)
      call pipe_read_complex16s(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sstev( jobz, n, d, e, z, ldz, work, info )
      character          jobz
      integer            info, ldz, n
      real               d( * ), e( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sstev", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zungql( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      complex*16         a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zungql", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpbequ( uplo, n, kd, ab, ldab, s, scond, amax, info )
      character          uplo
      integer            info, kd, ldab, n
      double precision   amax, scond
      double precision   ab( ldab, * ), s( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpbequ", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_double(scond, pipe)
      call pipe_write_double(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_double(scond, pipe)
      call pipe_read_double(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgels( trans, m, n, nrhs, a, lda, b, ldb, work, lwork,
     $                  info )
      character          trans
      integer            info, lda, ldb, lwork, m, n, nrhs
      real               a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgels", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssterf( n, d, e, info )
      integer            info, n
      real               d( * ), e( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssterf", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtgsja( jobu, jobv, jobq, m, p, n, k, l, a, lda, b,
     $                   ldb, tola, tolb, alpha, beta, u, ldu, v, ldv,
     $                   q, ldq, work, ncycle, info )
      character          jobq, jobu, jobv
      integer            info, k, l, lda, ldb, ldq, ldu, ldv, m, n,
     $                   ncycle, p
      double precision   tola, tolb
      double precision   a( lda, * ), alpha( * ), b( ldb, * ),
     $                   beta( * ), q( ldq, * ), u( ldu, * ),
     $                   v( ldv, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtgsja", pipe)
      call pipe_write_character(jobu, pipe)
      call pipe_write_character(jobv, pipe)
      call pipe_write_character(jobq, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(p, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_integer(l, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_double(tola, pipe)
      call pipe_write_double(tolb, pipe)
      call pipe_write_doubles(alpha, pipe)
      call pipe_write_doubles(beta, pipe)
      call pipe_write_doubles(u, pipe)
      call pipe_write_integer(ldu, pipe)
      call pipe_write_doubles(v, pipe)
      call pipe_write_integer(ldv, pipe)
      call pipe_write_doubles(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(ncycle, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobu, pipe)
      call pipe_read_character(jobv, pipe)
      call pipe_read_character(jobq, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(p, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_integer(l, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_double(tola, pipe)
      call pipe_read_double(tolb, pipe)
      call pipe_read_doubles(alpha, pipe)
      call pipe_read_doubles(beta, pipe)
      call pipe_read_doubles(u, pipe)
      call pipe_read_integer(ldu, pipe)
      call pipe_read_doubles(v, pipe)
      call pipe_read_integer(ldv, pipe)
      call pipe_read_doubles(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(ncycle, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztgsen( ijob, wantq, wantz, select, n, a, lda, b, ldb,
     $                   alpha, beta, q, ldq, z, ldz, m, pl, pr, dif,
     $                   work, lwork, iwork, liwork, info )
      logical            wantq, wantz
      integer            ijob, info, lda, ldb, ldq, ldz, liwork, lwork,
     $                   m, n
      double precision   pl, pr
      logical            select( * )
      integer            iwork( * )
      double precision   dif( * )
      complex*16         a( lda, * ), alpha( * ), b( ldb, * ),
     $                   beta( * ), q( ldq, * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztgsen", pipe)
      call pipe_write_integer(ijob, pipe)
      call pipe_write_logic(wantq, pipe)
      call pipe_write_logic(wantz, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(alpha, pipe)
      call pipe_write_complex16s(beta, pipe)
      call pipe_write_complex16s(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_double(pl, pipe)
      call pipe_write_double(pr, pipe)
      call pipe_write_doubles(dif, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(ijob, pipe)
      call pipe_read_logic(wantq, pipe)
      call pipe_read_logic(wantz, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(alpha, pipe)
      call pipe_read_complex16s(beta, pipe)
      call pipe_read_complex16s(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_double(pl, pipe)
      call pipe_read_double(pr, pipe)
      call pipe_read_doubles(dif, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sstegr( jobz, range, n, d, e, vl, vu, il, iu,
     $           abstol, m, w, z, ldz, isuppz, work, lwork, iwork,
     $           liwork, info )
      character          jobz, range
      integer            il, info, iu, ldz, liwork, lwork, m, n
      real             abstol, vl, vu
      integer            isuppz( * ), iwork( * )
      real               d( * ), e( * ), w( * ), work( * )
      real               z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sstegr", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_real(vl, pipe)
      call pipe_write_real(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_real(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integers(isuppz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_real(vl, pipe)
      call pipe_read_real(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_real(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integers(isuppz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine csytri( uplo, n, a, lda, ipiv, work, info )
      character          uplo
      integer            info, lda, n
      integer            ipiv( * )
      complex            a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("csytri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine stbrfs( uplo, trans, diag, n, kd, nrhs, ab, ldab, b,
     $                   ldb, x, ldx, ferr, berr, work, iwork, info )
      character          diag, trans, uplo
      integer            info, kd, ldab, ldb, ldx, n, nrhs
      integer            iwork( * )
      real               ab( ldab, * ), b( ldb, * ), berr( * ),
     $                   ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("stbrfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dstev( jobz, n, d, e, z, ldz, work, info )
      character          jobz
      integer            info, ldz, n
      double precision   d( * ), e( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dstev", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpbtrs( uplo, n, kd, nrhs, ab, ldab, b, ldb, info )
      character          uplo
      integer            info, kd, ldab, ldb, n, nrhs
      complex            ab( ldab, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpbtrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhecon( uplo, n, a, lda, ipiv, anorm, rcond, work,
     $                   info )
      character          uplo
      integer            info, lda, n
      double precision   anorm, rcond
      integer            ipiv( * )
      complex*16         a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhecon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_double(anorm, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_double(anorm, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctprfs( uplo, trans, diag, n, nrhs, ap, b, ldb, x, ldx,
     $                   ferr, berr, work, rwork, info )
      character          diag, trans, uplo
      integer            info, ldb, ldx, n, nrhs
      real               berr( * ), ferr( * ), rwork( * )
      complex            ap( * ), b( ldb, * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctprfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhegst( itype, uplo, n, a, lda, b, ldb, info )
      character          uplo
      integer            info, itype, lda, ldb, n
      complex*16         a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhegst", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctptrs( uplo, trans, diag, n, nrhs, ap, b, ldb, info )
      character          diag, trans, uplo
      integer            info, ldb, n, nrhs
      complex            ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctptrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtpcon( norm, uplo, diag, n, ap, rcond, work, iwork,
     $                   info )
      character          diag, norm, uplo
      integer            info, n
      double precision   rcond
      integer            iwork( * )
      double precision   ap( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtpcon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cunmrq( side, trans, m, n, k, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      complex            a( lda, * ), c( ldc, * ), tau( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cunmrq", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chbtrd( vect, uplo, n, kd, ab, ldab, d, e, q, ldq,
     $                   work, info )
      character          uplo, vect
      integer            info, kd, ldab, ldq, n
      real               d( * ), e( * )
      complex            ab( ldab, * ), q( ldq, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chbtrd", pipe)
      call pipe_write_character(vect, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_complexs(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(vect, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_complexs(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sormqr( side, trans, m, n, k, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      real               a( lda, * ), c( ldc, * ), tau( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sormqr", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine shgeqz( job, compq, compz, n, ilo, ihi, h, ldh, t, ldt,
     $                   alphar, alphai, beta, q, ldq, z, ldz, work,
     $                   lwork, info )
      character          compq, compz, job
      integer            ihi, ilo, info, ldh, ldq, ldt, ldz, lwork, n
      real               alphai( * ), alphar( * ), beta( * ),
     $                   h( ldh, * ), q( ldq, * ), t( ldt, * ),
     $                   work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("shgeqz", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(compq, pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_reals(h, pipe)
      call pipe_write_integer(ldh, pipe)
      call pipe_write_reals(t, pipe)
      call pipe_write_integer(ldt, pipe)
      call pipe_write_reals(alphar, pipe)
      call pipe_write_reals(alphai, pipe)
      call pipe_write_reals(beta, pipe)
      call pipe_write_reals(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(compq, pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_reals(h, pipe)
      call pipe_read_integer(ldh, pipe)
      call pipe_read_reals(t, pipe)
      call pipe_read_integer(ldt, pipe)
      call pipe_read_reals(alphar, pipe)
      call pipe_read_reals(alphai, pipe)
      call pipe_read_reals(beta, pipe)
      call pipe_read_reals(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgecon( norm, n, a, lda, anorm, rcond, work, rwork,
     $                   info )
      character          norm
      integer            info, lda, n
      real               anorm, rcond
      real               rwork( * )
      complex            a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgecon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_real(anorm, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_real(anorm, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgbtrs( trans, n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb,
     $                   info )
      character          trans
      integer            info, kl, ku, ldab, ldb, n, nrhs
      integer            ipiv( * )
      double precision   ab( ldab, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgbtrs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztbcon( norm, uplo, diag, n, kd, ab, ldab, rcond, work,
     $                   rwork, info )
      character          diag, norm, uplo
      integer            info, kd, ldab, n
      double precision   rcond
      double precision   rwork( * )
      complex*16         ab( ldab, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztbcon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chbgv( jobz, uplo, n, ka, kb, ab, ldab, bb, ldbb, w, z,
     $                  ldz, work, rwork, info )
      character          jobz, uplo
      integer            info, ka, kb, ldab, ldbb, ldz, n
      real               rwork( * ), w( * )
      complex            ab( ldab, * ), bb( ldbb, * ), work( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chbgv", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ka, pipe)
      call pipe_write_integer(kb, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complexs(bb, pipe)
      call pipe_write_integer(ldbb, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ka, pipe)
      call pipe_read_integer(kb, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complexs(bb, pipe)
      call pipe_read_integer(ldbb, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine strsyl( trana, tranb, isgn, m, n, a, lda, b, ldb, c,
     $                   ldc, scale, info )
      character          trana, tranb
      integer            info, isgn, lda, ldb, ldc, m, n
      real               scale
      real               a( lda, * ), b( ldb, * ), c( ldc, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("strsyl", pipe)
      call pipe_write_character(trana, pipe)
      call pipe_write_character(tranb, pipe)
      call pipe_write_integer(isgn, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_real(scale, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trana, pipe)
      call pipe_read_character(tranb, pipe)
      call pipe_read_integer(isgn, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_real(scale, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtptri( uplo, diag, n, ap, info )
      character          diag, uplo
      integer            info, n
      double precision   ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtptri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgeqp3( m, n, a, lda, jpvt, tau, work, lwork, rwork,
     $                   info )
      integer            info, lda, lwork, m, n
      integer            jpvt( * )
      real               rwork( * )
      complex            a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgeqp3", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(jpvt, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(jpvt, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine stgevc( side, howmny, select, n, s, lds, p, ldp, vl,
     $                   ldvl, vr, ldvr, mm, m, work, info )
      character          howmny, side
      integer            info, ldp, lds, ldvl, ldvr, m, mm, n
      logical            select( * )
      real               p( ldp, * ), s( lds, * ), vl( ldvl, * ),
     $                   vr( ldvr, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("stgevc", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(howmny, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_integer(lds, pipe)
      call pipe_write_reals(p, pipe)
      call pipe_write_integer(ldp, pipe)
      call pipe_write_reals(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_reals(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_integer(mm, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(howmny, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_integer(lds, pipe)
      call pipe_read_reals(p, pipe)
      call pipe_read_integer(ldp, pipe)
      call pipe_read_reals(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_reals(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_integer(mm, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine stgsen( ijob, wantq, wantz, select, n, a, lda, b, ldb,
     $                   alphar, alphai, beta, q, ldq, z, ldz, m, pl,
     $                   pr, dif, work, lwork, iwork, liwork, info )
      logical            wantq, wantz
      integer            ijob, info, lda, ldb, ldq, ldz, liwork, lwork,
     $                   m, n
      real               pl, pr
      logical            select( * )
      integer            iwork( * )
      real               a( lda, * ), alphai( * ), alphar( * ),
     $                   b( ldb, * ), beta( * ), dif( * ), q( ldq, * ),
     $                   work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("stgsen", pipe)
      call pipe_write_integer(ijob, pipe)
      call pipe_write_logic(wantq, pipe)
      call pipe_write_logic(wantz, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(alphar, pipe)
      call pipe_write_reals(alphai, pipe)
      call pipe_write_reals(beta, pipe)
      call pipe_write_reals(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_real(pl, pipe)
      call pipe_write_real(pr, pipe)
      call pipe_write_reals(dif, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(ijob, pipe)
      call pipe_read_logic(wantq, pipe)
      call pipe_read_logic(wantz, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(alphar, pipe)
      call pipe_read_reals(alphai, pipe)
      call pipe_read_reals(beta, pipe)
      call pipe_read_reals(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_real(pl, pipe)
      call pipe_read_real(pr, pipe)
      call pipe_read_reals(dif, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sstein( n, d, e, m, w, iblock, isplit, z, ldz, work,
     $                   iwork, ifail, info )
      integer            info, ldz, m, n
      integer            iblock( * ), ifail( * ), isplit( * ),
     $                   iwork( * )
      real               d( * ), e( * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sstein", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_integers(iblock, pipe)
      call pipe_write_integers(isplit, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_integers(iblock, pipe)
      call pipe_read_integers(isplit, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sptsvx( fact, n, nrhs, d, e, df, ef, b, ldb, x, ldx,
     $                   rcond, ferr, berr, work, info )
      character          fact
      integer            info, ldb, ldx, n, nrhs
      real               rcond
      real               b( ldb, * ), berr( * ), d( * ), df( * ),
     $                   e( * ), ef( * ), ferr( * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sptsvx", pipe)
      call pipe_write_character(fact, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_reals(df, pipe)
      call pipe_write_reals(ef, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(fact, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_reals(df, pipe)
      call pipe_read_reals(ef, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgtsvx( fact, trans, n, nrhs, dl, d, du, dlf, df, duf,
     $                   du2, ipiv, b, ldb, x, ldx, rcond, ferr, berr,
     $                   work, iwork, info )
      character          fact, trans
      integer            info, ldb, ldx, n, nrhs
      real               rcond
      integer            ipiv( * ), iwork( * )
      real               b( ldb, * ), berr( * ), d( * ), df( * ),
     $                   dl( * ), dlf( * ), du( * ), du2( * ), duf( * ),
     $                   ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgtsvx", pipe)
      call pipe_write_character(fact, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(dl, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(du, pipe)
      call pipe_write_reals(dlf, pipe)
      call pipe_write_reals(df, pipe)
      call pipe_write_reals(duf, pipe)
      call pipe_write_reals(du2, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(fact, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(dl, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(du, pipe)
      call pipe_read_reals(dlf, pipe)
      call pipe_read_reals(df, pipe)
      call pipe_read_reals(duf, pipe)
      call pipe_read_reals(du2, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpbsv( uplo, n, kd, nrhs, ab, ldab, b, ldb, info )
      character          uplo
      integer            info, kd, ldab, ldb, n, nrhs
      double precision   ab( ldab, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpbsv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cstegr( jobz, range, n, d, e, vl, vu, il, iu,
     $           abstol, m, w, z, ldz, isuppz, work, lwork, iwork,
     $           liwork, info )
      character          jobz, range
      integer            il, info, iu, ldz, liwork, lwork, m, n
      real             abstol, vl, vu
      integer            isuppz( * ), iwork( * )
      real               d( * ), e( * ), w( * ), work( * )
      complex            z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cstegr", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_real(vl, pipe)
      call pipe_write_real(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_real(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integers(isuppz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_real(vl, pipe)
      call pipe_read_real(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_real(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integers(isuppz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgbequ( m, n, kl, ku, ab, ldab, r, c, rowcnd, colcnd,
     $                   amax, info )
      integer            info, kl, ku, ldab, m, n
      double precision   amax, colcnd, rowcnd
      double precision   c( * ), r( * )
      complex*16         ab( ldab, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgbequ", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(r, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_double(rowcnd, pipe)
      call pipe_write_double(colcnd, pipe)
      call pipe_write_double(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(r, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_double(rowcnd, pipe)
      call pipe_read_double(colcnd, pipe)
      call pipe_read_double(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgesdd( jobz, m, n, a, lda, s, u, ldu, vt, ldvt,
     $                   work, lwork, rwork, iwork, info )
      implicit none
      character          jobz
      integer            info, lda, ldu, ldvt, lwork, m, n
      integer            iwork( * )
      real               rwork( * ), s( * )
      complex            a( lda, * ), u( ldu, * ), vt( ldvt, * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgesdd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_complexs(u, pipe)
      call pipe_write_integer(ldu, pipe)
      call pipe_write_complexs(vt, pipe)
      call pipe_write_integer(ldvt, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_complexs(u, pipe)
      call pipe_read_integer(ldu, pipe)
      call pipe_read_complexs(vt, pipe)
      call pipe_read_integer(ldvt, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dptsvx( fact, n, nrhs, d, e, df, ef, b, ldb, x, ldx,
     $                   rcond, ferr, berr, work, info )
      character          fact
      integer            info, ldb, ldx, n, nrhs
      double precision   rcond
      double precision   b( ldb, * ), berr( * ), d( * ), df( * ),
     $                   e( * ), ef( * ), ferr( * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dptsvx", pipe)
      call pipe_write_character(fact, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_doubles(df, pipe)
      call pipe_write_doubles(ef, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(fact, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_doubles(df, pipe)
      call pipe_read_doubles(ef, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctgsja( jobu, jobv, jobq, m, p, n, k, l, a, lda, b,
     $                   ldb, tola, tolb, alpha, beta, u, ldu, v, ldv,
     $                   q, ldq, work, ncycle, info )
      character          jobq, jobu, jobv
      integer            info, k, l, lda, ldb, ldq, ldu, ldv, m, n,
     $                   ncycle, p
      real               tola, tolb
      real               alpha( * ), beta( * )
      complex            a( lda, * ), b( ldb, * ), q( ldq, * ),
     $                   u( ldu, * ), v( ldv, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctgsja", pipe)
      call pipe_write_character(jobu, pipe)
      call pipe_write_character(jobv, pipe)
      call pipe_write_character(jobq, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(p, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_integer(l, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_real(tola, pipe)
      call pipe_write_real(tolb, pipe)
      call pipe_write_reals(alpha, pipe)
      call pipe_write_reals(beta, pipe)
      call pipe_write_complexs(u, pipe)
      call pipe_write_integer(ldu, pipe)
      call pipe_write_complexs(v, pipe)
      call pipe_write_integer(ldv, pipe)
      call pipe_write_complexs(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(ncycle, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobu, pipe)
      call pipe_read_character(jobv, pipe)
      call pipe_read_character(jobq, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(p, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_integer(l, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_real(tola, pipe)
      call pipe_read_real(tolb, pipe)
      call pipe_read_reals(alpha, pipe)
      call pipe_read_reals(beta, pipe)
      call pipe_read_complexs(u, pipe)
      call pipe_read_integer(ldu, pipe)
      call pipe_read_complexs(v, pipe)
      call pipe_read_integer(ldv, pipe)
      call pipe_read_complexs(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(ncycle, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sstevd( jobz, n, d, e, z, ldz, work, lwork, iwork,
     $                   liwork, info )
      character          jobz
      integer            info, ldz, liwork, lwork, n
      integer            iwork( * )
      real               d( * ), e( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sstevd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssbtrd( vect, uplo, n, kd, ab, ldab, d, e, q, ldq,
     $                   work, info )
      character          uplo, vect
      integer            info, kd, ldab, ldq, n
      real               ab( ldab, * ), d( * ), e( * ), q( ldq, * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssbtrd", pipe)
      call pipe_write_character(vect, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_reals(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(vect, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_reals(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtrttf( transr, uplo, n, a, lda, arf, info )
      character          transr, uplo
      integer            info, n, lda
      double precision   a( 0: lda-1, 0: * ), arf( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtrttf", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(arf, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(arf, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpbtrf( uplo, n, kd, ab, ldab, info )
      character          uplo
      integer            info, kd, ldab, n
      double precision   ab( ldab, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpbtrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spoequb( n, a, lda, s, scond, amax, info )
      integer            info, lda, n
      real               amax, scond
      real               a( lda, * ), s( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spoequb", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_real(scond, pipe)
      call pipe_write_real(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_real(scond, pipe)
      call pipe_read_real(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssbev( jobz, uplo, n, kd, ab, ldab, w, z, ldz, work,
     $                  info )
      character          jobz, uplo
      integer            info, kd, ldab, ldz, n
      real               ab( ldab, * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssbev", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chptrf( uplo, n, ap, ipiv, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      complex            ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chptrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine stfsm( transr, side, uplo, trans, diag, m, n, alpha, a,
     $                  b, ldb )
      character          transr, diag, side, trans, uplo
      integer            ldb, m, n
      real               alpha
      real               a( 0: * ), b( 0: ldb-1, 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("stfsm", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_real(alpha, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_real(alpha, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_close(pipe)

      end

      subroutine dtrevc( side, howmny, select, n, t, ldt, vl, ldvl, vr,
     $                   ldvr, mm, m, work, info )
      character          howmny, side
      integer            info, ldt, ldvl, ldvr, m, mm, n
      logical            select( * )
      double precision   t( ldt, * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtrevc", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(howmny, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(t, pipe)
      call pipe_write_integer(ldt, pipe)
      call pipe_write_doubles(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_doubles(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_integer(mm, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(howmny, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(t, pipe)
      call pipe_read_integer(ldt, pipe)
      call pipe_read_doubles(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_doubles(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_integer(mm, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgbequb( m, n, kl, ku, ab, ldab, r, c, rowcnd, colcnd,
     $                    amax, info )
      integer            info, kl, ku, ldab, m, n
      real               amax, colcnd, rowcnd
      real               ab( ldab, * ), c( * ), r( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgbequb", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(r, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_real(rowcnd, pipe)
      call pipe_write_real(colcnd, pipe)
      call pipe_write_real(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(r, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_real(rowcnd, pipe)
      call pipe_read_real(colcnd, pipe)
      call pipe_read_real(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chprfs( uplo, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx,
     $                   ferr, berr, work, rwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            afp( * ), ap( * ), b( ldb, * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chprfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_complexs(afp, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_complexs(afp, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dstegr( jobz, range, n, d, e, vl, vu, il, iu,
     $           abstol, m, w, z, ldz, isuppz, work, lwork, iwork,
     $           liwork, info )
      character          jobz, range
      integer            il, info, iu, ldz, liwork, lwork, m, n
      double precision abstol, vl, vu
      integer            isuppz( * ), iwork( * )
      double precision   d( * ), e( * ), w( * ), work( * )
      double precision   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dstegr", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_double(vl, pipe)
      call pipe_write_double(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_double(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integers(isuppz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_double(vl, pipe)
      call pipe_read_double(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_double(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integers(isuppz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpstrf( uplo, n, a, lda, piv, rank, tol, work, info )
      double precision   tol
      integer            info, lda, n, rank
      character          uplo
      complex*16         a( lda, * )
      double precision   work( 2*n )
      integer            piv( n )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpstrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(piv, pipe)
      call pipe_write_integer(rank, pipe)
      call pipe_write_double(tol, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(piv, pipe)
      call pipe_read_integer(rank, pipe)
      call pipe_read_double(tol, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhptri( uplo, n, ap, ipiv, work, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      complex*16         ap( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhptri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zggrqf( m, p, n, a, lda, taua, b, ldb, taub, work,
     $                   lwork, info )
      integer            info, lda, ldb, lwork, m, n, p
      complex*16         a( lda, * ), b( ldb, * ), taua( * ), taub( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zggrqf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(p, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(taua, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(taub, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(p, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(taua, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(taub, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine shsein( side, eigsrc, initv, select, n, h, ldh, wr, wi,
     $                   vl, ldvl, vr, ldvr, mm, m, work, ifaill,
     $                   ifailr, info )
      character          eigsrc, initv, side
      integer            info, ldh, ldvl, ldvr, m, mm, n
      logical            select( * )
      integer            ifaill( * ), ifailr( * )
      real               h( ldh, * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   wi( * ), work( * ), wr( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("shsein", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(eigsrc, pipe)
      call pipe_write_character(initv, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(h, pipe)
      call pipe_write_integer(ldh, pipe)
      call pipe_write_reals(wr, pipe)
      call pipe_write_reals(wi, pipe)
      call pipe_write_reals(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_reals(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_integer(mm, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(ifaill, pipe)
      call pipe_write_integers(ifailr, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(eigsrc, pipe)
      call pipe_read_character(initv, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(h, pipe)
      call pipe_read_integer(ldh, pipe)
      call pipe_read_reals(wr, pipe)
      call pipe_read_reals(wi, pipe)
      call pipe_read_reals(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_reals(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_integer(mm, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(ifaill, pipe)
      call pipe_read_integers(ifailr, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssteqr( compz, n, d, e, z, ldz, work, info )
      character          compz
      integer            info, ldz, n
      real               d( * ), e( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssteqr", pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dggqrf( n, m, p, a, lda, taua, b, ldb, taub, work,
     $                   lwork, info )
      integer            info, lda, ldb, lwork, m, n, p
      double precision   a( lda, * ), b( ldb, * ), taua( * ), taub( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dggqrf", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(p, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(taua, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(taub, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(p, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(taua, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(taub, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsbevx( jobz, range, uplo, n, kd, ab, ldab, q, ldq, vl,
     $                   vu, il, iu, abstol, m, w, z, ldz, work, iwork,
     $                   ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, kd, ldab, ldq, ldz, m, n
      double precision   abstol, vl, vu
      integer            ifail( * ), iwork( * )
      double precision   ab( ldab, * ), q( ldq, * ), w( * ), work( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsbevx", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_double(vl, pipe)
      call pipe_write_double(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_double(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_double(vl, pipe)
      call pipe_read_double(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_double(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sspevd( jobz, uplo, n, ap, w, z, ldz, work, lwork,
     $                   iwork, liwork, info )
      character          jobz, uplo
      integer            info, ldz, liwork, lwork, n
      integer            iwork( * )
      real               ap( * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sspevd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpptri( uplo, n, ap, info )
      character          uplo
      integer            info, n
      double precision   ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpptri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpttrf( n, d, e, info )
      integer            info, n
      real               d( * )
      complex            e( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpttrf", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_complexs(e, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_complexs(e, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sspevx( jobz, range, uplo, n, ap, vl, vu, il, iu,
     $                   abstol, m, w, z, ldz, work, iwork, ifail,
     $                   info )
      character          jobz, range, uplo
      integer            il, info, iu, ldz, m, n
      real               abstol, vl, vu
      integer            ifail( * ), iwork( * )
      real               ap( * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sspevx", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_real(vl, pipe)
      call pipe_write_real(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_real(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_real(vl, pipe)
      call pipe_read_real(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_real(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chptrd( uplo, n, ap, d, e, tau, info )
      character          uplo
      integer            info, n
      real               d( * ), e( * )
      complex            ap( * ), tau( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chptrd", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sggrqf( m, p, n, a, lda, taua, b, ldb, taub, work,
     $                   lwork, info )
      integer            info, lda, ldb, lwork, m, n, p
      real               a( lda, * ), b( ldb, * ), taua( * ), taub( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sggrqf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(p, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(taua, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(taub, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(p, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(taua, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(taub, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctpcon( norm, uplo, diag, n, ap, rcond, work, rwork,
     $                   info )
      character          diag, norm, uplo
      integer            info, n
      real               rcond
      real               rwork( * )
      complex            ap( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctpcon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpteqr( compz, n, d, e, z, ldz, work, info )
      character          compz
      integer            info, ldz, n
      double precision   d( * ), e( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpteqr", pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zporfs( uplo, n, nrhs, a, lda, af, ldaf, b, ldb, x,
     $                   ldx, ferr, berr, work, rwork, info )
      character          uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         a( lda, * ), af( ldaf, * ), b( ldb, * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zporfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(af, pipe)
      call pipe_write_integer(ldaf, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(af, pipe)
      call pipe_read_integer(ldaf, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zstedc( compz, n, d, e, z, ldz, work, lwork, rwork,
     $                   lrwork, iwork, liwork, info )
      character          compz
      integer            info, ldz, liwork, lrwork, lwork, n
      integer            iwork( * )
      double precision   d( * ), e( * ), rwork( * )
      complex*16         work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zstedc", pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(lrwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(lrwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgttrs( trans, n, nrhs, dl, d, du, du2, ipiv, b, ldb,
     $                   info )
      character          trans
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      real               b( ldb, * ), d( * ), dl( * ), du( * ), du2( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgttrs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(dl, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(du, pipe)
      call pipe_write_reals(du2, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(dl, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(du, pipe)
      call pipe_read_reals(du2, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsygst( itype, uplo, n, a, lda, b, ldb, info )
      character          uplo
      integer            info, itype, lda, ldb, n
      double precision   a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsygst", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgelsd( m, n, nrhs, a, lda, b, ldb, s, rcond,
     $                   rank, work, lwork, iwork, info )
      integer            info, lda, ldb, lwork, m, n, nrhs, rank
      real               rcond
      integer            iwork( * )
      real               a( lda, * ), b( ldb, * ), s( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgelsd", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_integer(rank, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_integer(rank, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spbcon( uplo, n, kd, ab, ldab, anorm, rcond, work,
     $                   iwork, info )
      character          uplo
      integer            info, kd, ldab, n
      real               anorm, rcond
      integer            iwork( * )
      real               ab( ldab, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spbcon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_real(anorm, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_real(anorm, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dggevx( balanc, jobvl, jobvr, sense, n, a, lda, b, ldb,
     $                   alphar, alphai, beta, vl, ldvl, vr, ldvr, ilo,
     $                   ihi, lscale, rscale, abnrm, bbnrm, rconde,
     $                   rcondv, work, lwork, iwork, bwork, info )
      character          balanc, jobvl, jobvr, sense
      integer            ihi, ilo, info, lda, ldb, ldvl, ldvr, lwork, n
      double precision   abnrm, bbnrm
      logical            bwork( * )
      integer            iwork( * )
      double precision   a( lda, * ), alphai( * ), alphar( * ),
     $                   b( ldb, * ), beta( * ), lscale( * ),
     $                   rconde( * ), rcondv( * ), rscale( * ),
     $                   vl( ldvl, * ), vr( ldvr, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dggevx", pipe)
      call pipe_write_character(balanc, pipe)
      call pipe_write_character(jobvl, pipe)
      call pipe_write_character(jobvr, pipe)
      call pipe_write_character(sense, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(alphar, pipe)
      call pipe_write_doubles(alphai, pipe)
      call pipe_write_doubles(beta, pipe)
      call pipe_write_doubles(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_doubles(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_doubles(lscale, pipe)
      call pipe_write_doubles(rscale, pipe)
      call pipe_write_double(abnrm, pipe)
      call pipe_write_double(bbnrm, pipe)
      call pipe_write_doubles(rconde, pipe)
      call pipe_write_doubles(rcondv, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_logics(bwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(balanc, pipe)
      call pipe_read_character(jobvl, pipe)
      call pipe_read_character(jobvr, pipe)
      call pipe_read_character(sense, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(alphar, pipe)
      call pipe_read_doubles(alphai, pipe)
      call pipe_read_doubles(beta, pipe)
      call pipe_read_doubles(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_doubles(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_doubles(lscale, pipe)
      call pipe_read_doubles(rscale, pipe)
      call pipe_read_double(abnrm, pipe)
      call pipe_read_double(bbnrm, pipe)
      call pipe_read_doubles(rconde, pipe)
      call pipe_read_doubles(rcondv, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_logics(bwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztftri( transr, uplo, diag, n, a, info )
      character          transr, uplo, diag
      integer            info, n
      complex*16         a( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztftri", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chpgvd( itype, jobz, uplo, n, ap, bp, w, z, ldz, work,
     $                   lwork, rwork, lrwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, itype, ldz, liwork, lrwork, lwork, n
      integer            iwork( * )
      real               rwork( * ), w( * )
      complex            ap( * ), bp( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chpgvd", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_complexs(bp, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(lrwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_complexs(bp, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(lrwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sopmtr( side, uplo, trans, m, n, ap, tau, c, ldc, work,
     $                   info )
      character          side, trans, uplo
      integer            info, ldc, m, n
      real               ap( * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sopmtr", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpoequb( n, a, lda, s, scond, amax, info )
      integer            info, lda, n
      double precision   amax, scond
      double precision   a( lda, * ), s( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpoequb", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_double(scond, pipe)
      call pipe_write_double(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_double(scond, pipe)
      call pipe_read_double(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgesvj( joba, jobu, jobv, m, n, a, lda, sva, mv, v,
     $                   ldv, work, lwork, info )
      integer            info, lda, ldv, lwork, m, mv, n
      character*1        joba, jobu, jobv
      real               a( lda, * ), sva( n ), v( ldv, * ),
     $                   work( lwork )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgesvj", pipe)
      call pipe_write_character(joba, pipe)
      call pipe_write_character(jobu, pipe)
      call pipe_write_character(jobv, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(sva, pipe)
      call pipe_write_integer(mv, pipe)
      call pipe_write_reals(v, pipe)
      call pipe_write_integer(ldv, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(joba, pipe)
      call pipe_read_character(jobu, pipe)
      call pipe_read_character(jobv, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(sva, pipe)
      call pipe_read_integer(mv, pipe)
      call pipe_read_reals(v, pipe)
      call pipe_read_integer(ldv, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctrrfs( uplo, trans, diag, n, nrhs, a, lda, b, ldb, x,
     $                   ldx, ferr, berr, work, rwork, info )
      character          diag, trans, uplo
      integer            info, lda, ldb, ldx, n, nrhs
      real               berr( * ), ferr( * ), rwork( * )
      complex            a( lda, * ), b( ldb, * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctrrfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgbtrf( m, n, kl, ku, ab, ldab, ipiv, info )
      integer            info, kl, ku, ldab, m, n
      integer            ipiv( * )
      real               ab( ldab, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgbtrf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgtrfs( trans, n, nrhs, dl, d, du, dlf, df, duf, du2,
     $                   ipiv, b, ldb, x, ldx, ferr, berr, work, iwork,
     $                   info )
      character          trans
      integer            info, ldb, ldx, n, nrhs
      integer            ipiv( * ), iwork( * )
      double precision   b( ldb, * ), berr( * ), d( * ), df( * ),
     $                   dl( * ), dlf( * ), du( * ), du2( * ), duf( * ),
     $                   ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgtrfs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(dl, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(du, pipe)
      call pipe_write_doubles(dlf, pipe)
      call pipe_write_doubles(df, pipe)
      call pipe_write_doubles(duf, pipe)
      call pipe_write_doubles(du2, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(dl, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(du, pipe)
      call pipe_read_doubles(dlf, pipe)
      call pipe_read_doubles(df, pipe)
      call pipe_read_doubles(duf, pipe)
      call pipe_read_doubles(du2, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgttrf( n, dl, d, du, du2, ipiv, info )
      integer            info, n
      integer            ipiv( * )
      complex            d( * ), dl( * ), du( * ), du2( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgttrf", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(dl, pipe)
      call pipe_write_complexs(d, pipe)
      call pipe_write_complexs(du, pipe)
      call pipe_write_complexs(du2, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(dl, pipe)
      call pipe_read_complexs(d, pipe)
      call pipe_read_complexs(du, pipe)
      call pipe_read_complexs(du2, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zstemr( jobz, range, n, d, e, vl, vu, il, iu,
     $                   m, w, z, ldz, nzc, isuppz, tryrac, work, lwork,
     $                   iwork, liwork, info )
      character          jobz, range
      logical            tryrac
      integer            il, info, iu, ldz, nzc, liwork, lwork, m, n
      double precision vl, vu
      integer            isuppz( * ), iwork( * )
      double precision   d( * ), e( * ), w( * ), work( * )
      complex*16         z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zstemr", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_double(vl, pipe)
      call pipe_write_double(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integer(nzc, pipe)
      call pipe_write_integers(isuppz, pipe)
      call pipe_write_logic(tryrac, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_double(vl, pipe)
      call pipe_read_double(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integer(nzc, pipe)
      call pipe_read_integers(isuppz, pipe)
      call pipe_read_logic(tryrac, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spprfs( uplo, n, nrhs, ap, afp, b, ldb, x, ldx, ferr,
     $                   berr, work, iwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      integer            iwork( * )
      real               afp( * ), ap( * ), b( ldb, * ), berr( * ),
     $                   ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spprfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_reals(afp, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_reals(afp, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spbrfs( uplo, n, kd, nrhs, ab, ldab, afb, ldafb, b,
     $                   ldb, x, ldx, ferr, berr, work, iwork, info )
      character          uplo
      integer            info, kd, ldab, ldafb, ldb, ldx, n, nrhs
      integer            iwork( * )
      real               ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),
     $                   berr( * ), ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spbrfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(afb, pipe)
      call pipe_write_integer(ldafb, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(afb, pipe)
      call pipe_read_integer(ldafb, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zptsv( n, nrhs, d, e, b, ldb, info )
      integer            info, ldb, n, nrhs
      double precision   d( * )
      complex*16         b( ldb, * ), e( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zptsv", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_complex16s(e, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_complex16s(e, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine strsna( job, howmny, select, n, t, ldt, vl, ldvl, vr,
     $                   ldvr, s, sep, mm, m, work, ldwork, iwork,
     $                   info )
      character          howmny, job
      integer            info, ldt, ldvl, ldvr, ldwork, m, mm, n
      logical            select( * )
      integer            iwork( * )
      real               s( * ), sep( * ), t( ldt, * ), vl( ldvl, * ),
     $                   vr( ldvr, * ), work( ldwork, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("strsna", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(howmny, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(t, pipe)
      call pipe_write_integer(ldt, pipe)
      call pipe_write_reals(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_reals(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_reals(sep, pipe)
      call pipe_write_integer(mm, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(ldwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(howmny, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(t, pipe)
      call pipe_read_integer(ldt, pipe)
      call pipe_read_reals(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_reals(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_reals(sep, pipe)
      call pipe_read_integer(mm, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(ldwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpbequ( uplo, n, kd, ab, ldab, s, scond, amax, info )
      character          uplo
      integer            info, kd, ldab, n
      double precision   amax, scond
      double precision   s( * )
      complex*16         ab( ldab, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpbequ", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_double(scond, pipe)
      call pipe_write_double(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_double(scond, pipe)
      call pipe_read_double(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztgsyl( trans, ijob, m, n, a, lda, b, ldb, c, ldc, d,
     $                   ldd, e, lde, f, ldf, scale, dif, work, lwork,
     $                   iwork, info )
      character          trans
      integer            ijob, info, lda, ldb, ldc, ldd, lde, ldf,
     $                   lwork, m, n
      double precision   dif, scale
      integer            iwork( * )
      complex*16         a( lda, * ), b( ldb, * ), c( ldc, * ),
     $                   d( ldd, * ), e( lde, * ), f( ldf, * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztgsyl", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(ijob, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complex16s(d, pipe)
      call pipe_write_integer(ldd, pipe)
      call pipe_write_complex16s(e, pipe)
      call pipe_write_integer(lde, pipe)
      call pipe_write_complex16s(f, pipe)
      call pipe_write_integer(ldf, pipe)
      call pipe_write_double(scale, pipe)
      call pipe_write_double(dif, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(ijob, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complex16s(d, pipe)
      call pipe_read_integer(ldd, pipe)
      call pipe_read_complex16s(e, pipe)
      call pipe_read_integer(lde, pipe)
      call pipe_read_complex16s(f, pipe)
      call pipe_read_integer(ldf, pipe)
      call pipe_read_double(scale, pipe)
      call pipe_read_double(dif, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztrexc( compq, n, t, ldt, q, ldq, ifst, ilst, info )
      character          compq
      integer            ifst, ilst, info, ldq, ldt, n
      complex*16         q( ldq, * ), t( ldt, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztrexc", pipe)
      call pipe_write_character(compq, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(t, pipe)
      call pipe_write_integer(ldt, pipe)
      call pipe_write_complex16s(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_integer(ifst, pipe)
      call pipe_write_integer(ilst, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(compq, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(t, pipe)
      call pipe_read_integer(ldt, pipe)
      call pipe_read_complex16s(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_integer(ifst, pipe)
      call pipe_read_integer(ilst, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgesvd( jobu, jobvt, m, n, a, lda, s, u, ldu, vt, ldvt,
     $                   work, lwork, rwork, info )
      character          jobu, jobvt
      integer            info, lda, ldu, ldvt, lwork, m, n
      real               rwork( * ), s( * )
      complex            a( lda, * ), u( ldu, * ), vt( ldvt, * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgesvd", pipe)
      call pipe_write_character(jobu, pipe)
      call pipe_write_character(jobvt, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_complexs(u, pipe)
      call pipe_write_integer(ldu, pipe)
      call pipe_write_complexs(vt, pipe)
      call pipe_write_integer(ldvt, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobu, pipe)
      call pipe_read_character(jobvt, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_complexs(u, pipe)
      call pipe_read_integer(ldu, pipe)
      call pipe_read_complexs(vt, pipe)
      call pipe_read_integer(ldvt, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhbev( jobz, uplo, n, kd, ab, ldab, w, z, ldz, work,
     $                  rwork, info )
      character          jobz, uplo
      integer            info, kd, ldab, ldz, n
      double precision   rwork( * ), w( * )
      complex*16         ab( ldab, * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhbev", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsbtrd( vect, uplo, n, kd, ab, ldab, d, e, q, ldq,
     $                   work, info )
      character          uplo, vect
      integer            info, kd, ldab, ldq, n
      double precision   ab( ldab, * ), d( * ), e( * ), q( ldq, * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsbtrd", pipe)
      call pipe_write_character(vect, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_doubles(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(vect, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_doubles(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sormrz( side, trans, m, n, k, l, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans
      integer            info, k, l, lda, ldc, lwork, m, n
      real               a( lda, * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sormrz", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_integer(l, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_integer(l, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zunmtr( side, uplo, trans, m, n, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans, uplo
      integer            info, lda, ldc, lwork, m, n
      complex*16         a( lda, * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zunmtr", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dbdsqr( uplo, n, ncvt, nru, ncc, d, e, vt, ldvt, u,
     $                   ldu, c, ldc, work, info )
      character          uplo
      integer            info, ldc, ldu, ldvt, n, ncc, ncvt, nru
      double precision   c( ldc, * ), d( * ), e( * ), u( ldu, * ),
     $                   vt( ldvt, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dbdsqr", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ncvt, pipe)
      call pipe_write_integer(nru, pipe)
      call pipe_write_integer(ncc, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_doubles(vt, pipe)
      call pipe_write_integer(ldvt, pipe)
      call pipe_write_doubles(u, pipe)
      call pipe_write_integer(ldu, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ncvt, pipe)
      call pipe_read_integer(nru, pipe)
      call pipe_read_integer(ncc, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_doubles(vt, pipe)
      call pipe_read_integer(ldvt, pipe)
      call pipe_read_doubles(u, pipe)
      call pipe_read_integer(ldu, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgetri( n, a, lda, ipiv, work, lwork, info )
      integer            info, lda, lwork, n
      integer            ipiv( * )
      real               a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgetri", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zunglq( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      complex*16         a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zunglq", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhpsvx( fact, uplo, n, nrhs, ap, afp, ipiv, b, ldb, x,
     $                   ldx, rcond, ferr, berr, work, rwork, info )
      character          fact, uplo
      integer            info, ldb, ldx, n, nrhs
      double precision   rcond
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         afp( * ), ap( * ), b( ldb, * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhpsvx", pipe)
      call pipe_write_character(fact, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_complex16s(afp, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(fact, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_complex16s(afp, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgbbrd( vect, m, n, ncc, kl, ku, ab, ldab, d, e, q,
     $                   ldq, pt, ldpt, c, ldc, work, rwork, info )
      character          vect
      integer            info, kl, ku, ldab, ldc, ldpt, ldq, m, n, ncc
      real               d( * ), e( * ), rwork( * )
      complex            ab( ldab, * ), c( ldc, * ), pt( ldpt, * ),
     $                   q( ldq, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgbbrd", pipe)
      call pipe_write_character(vect, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ncc, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_complexs(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_complexs(pt, pipe)
      call pipe_write_integer(ldpt, pipe)
      call pipe_write_complexs(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(vect, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ncc, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_complexs(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_complexs(pt, pipe)
      call pipe_read_integer(ldpt, pipe)
      call pipe_read_complexs(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpttrf( n, d, e, info )
      integer            info, n
      double precision   d( * ), e( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpttrf", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zunmrz( side, trans, m, n, k, l, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans
      integer            info, k, l, lda, ldc, lwork, m, n
      complex*16         a( lda, * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zunmrz", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_integer(l, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_integer(l, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgeevx( balanc, jobvl, jobvr, sense, n, a, lda, wr, wi,
     $                   vl, ldvl, vr, ldvr, ilo, ihi, scale, abnrm,
     $                   rconde, rcondv, work, lwork, iwork, info )
      implicit none
      character          balanc, jobvl, jobvr, sense
      integer            ihi, ilo, info, lda, ldvl, ldvr, lwork, n
      double precision   abnrm
      integer            iwork( * )
      double precision   a( lda, * ), rconde( * ), rcondv( * ),
     $                   scale( * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   wi( * ), work( * ), wr( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgeevx", pipe)
      call pipe_write_character(balanc, pipe)
      call pipe_write_character(jobvl, pipe)
      call pipe_write_character(jobvr, pipe)
      call pipe_write_character(sense, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(wr, pipe)
      call pipe_write_doubles(wi, pipe)
      call pipe_write_doubles(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_doubles(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_doubles(scale, pipe)
      call pipe_write_double(abnrm, pipe)
      call pipe_write_doubles(rconde, pipe)
      call pipe_write_doubles(rcondv, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(balanc, pipe)
      call pipe_read_character(jobvl, pipe)
      call pipe_read_character(jobvr, pipe)
      call pipe_read_character(sense, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(wr, pipe)
      call pipe_read_doubles(wi, pipe)
      call pipe_read_doubles(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_doubles(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_doubles(scale, pipe)
      call pipe_read_double(abnrm, pipe)
      call pipe_read_doubles(rconde, pipe)
      call pipe_read_doubles(rcondv, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsyev( jobz, uplo, n, a, lda, w, work, lwork, info )
      character          jobz, uplo
      integer            info, lda, lwork, n
      double precision   a( lda, * ), w( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsyev", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztrttp( uplo, n, a, lda, ap, info )
      character          uplo
      integer            info, n, lda
      complex*16         a( lda, * ), ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztrttp", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpptrs( uplo, n, nrhs, ap, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      complex            ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpptrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine shseqr( job, compz, n, ilo, ihi, h, ldh, wr, wi, z,
     $                   ldz, work, lwork, info )
      integer            ihi, ilo, info, ldh, ldz, lwork, n
      character          compz, job
      real               h( ldh, * ), wi( * ), work( * ), wr( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("shseqr", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_reals(h, pipe)
      call pipe_write_integer(ldh, pipe)
      call pipe_write_reals(wr, pipe)
      call pipe_write_reals(wi, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_reals(h, pipe)
      call pipe_read_integer(ldh, pipe)
      call pipe_read_reals(wr, pipe)
      call pipe_read_reals(wi, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpptrs( uplo, n, nrhs, ap, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      double precision   ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpptrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpftrf( transr, uplo, n, a, info )
      character          transr, uplo
      integer            n, info
      complex            a( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpftrf", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cherfs( uplo, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb,
     $                   x, ldx, ferr, berr, work, rwork, info )
      character          uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            a( lda, * ), af( ldaf, * ), b( ldb, * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cherfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(af, pipe)
      call pipe_write_integer(ldaf, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(af, pipe)
      call pipe_read_integer(ldaf, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsyequb( uplo, n, a, lda, s, scond, amax, work, info )
      integer            info, lda, n
      double precision   amax, scond
      character          uplo
      double precision   a( lda, * ), s( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsyequb", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_double(scond, pipe)
      call pipe_write_double(amax, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_double(scond, pipe)
      call pipe_read_double(amax, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zggevx( balanc, jobvl, jobvr, sense, n, a, lda, b, ldb,
     $                   alpha, beta, vl, ldvl, vr, ldvr, ilo, ihi,
     $                   lscale, rscale, abnrm, bbnrm, rconde, rcondv,
     $                   work, lwork, rwork, iwork, bwork, info )
      character          balanc, jobvl, jobvr, sense
      integer            ihi, ilo, info, lda, ldb, ldvl, ldvr, lwork, n
      double precision   abnrm, bbnrm
      logical            bwork( * )
      integer            iwork( * )
      double precision   lscale( * ), rconde( * ), rcondv( * ),
     $                   rscale( * ), rwork( * )
      complex*16         a( lda, * ), alpha( * ), b( ldb, * ),
     $                   beta( * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zggevx", pipe)
      call pipe_write_character(balanc, pipe)
      call pipe_write_character(jobvl, pipe)
      call pipe_write_character(jobvr, pipe)
      call pipe_write_character(sense, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(alpha, pipe)
      call pipe_write_complex16s(beta, pipe)
      call pipe_write_complex16s(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_complex16s(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_doubles(lscale, pipe)
      call pipe_write_doubles(rscale, pipe)
      call pipe_write_double(abnrm, pipe)
      call pipe_write_double(bbnrm, pipe)
      call pipe_write_doubles(rconde, pipe)
      call pipe_write_doubles(rcondv, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_logics(bwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(balanc, pipe)
      call pipe_read_character(jobvl, pipe)
      call pipe_read_character(jobvr, pipe)
      call pipe_read_character(sense, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(alpha, pipe)
      call pipe_read_complex16s(beta, pipe)
      call pipe_read_complex16s(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_complex16s(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_doubles(lscale, pipe)
      call pipe_read_doubles(rscale, pipe)
      call pipe_read_double(abnrm, pipe)
      call pipe_read_double(bbnrm, pipe)
      call pipe_read_doubles(rconde, pipe)
      call pipe_read_doubles(rcondv, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_logics(bwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhbgst( vect, uplo, n, ka, kb, ab, ldab, bb, ldbb, x,
     $                   ldx, work, rwork, info )
      character          uplo, vect
      integer            info, ka, kb, ldab, ldbb, ldx, n
      double precision   rwork( * )
      complex*16         ab( ldab, * ), bb( ldbb, * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhbgst", pipe)
      call pipe_write_character(vect, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ka, pipe)
      call pipe_write_integer(kb, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complex16s(bb, pipe)
      call pipe_write_integer(ldbb, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(vect, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ka, pipe)
      call pipe_read_integer(kb, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complex16s(bb, pipe)
      call pipe_read_integer(ldbb, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhegv( itype, jobz, uplo, n, a, lda, b, ldb, w, work,
     $                  lwork, rwork, info )
      character          jobz, uplo
      integer            info, itype, lda, ldb, lwork, n
      double precision   rwork( * ), w( * )
      complex*16         a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhegv", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgtsv( n, nrhs, dl, d, du, b, ldb, info )
      integer            info, ldb, n, nrhs
      complex            b( ldb, * ), d( * ), dl( * ), du( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgtsv", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(dl, pipe)
      call pipe_write_complexs(d, pipe)
      call pipe_write_complexs(du, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(dl, pipe)
      call pipe_read_complexs(d, pipe)
      call pipe_read_complexs(du, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpftri( transr, uplo, n, a, info )
      character          transr, uplo
      integer            info, n
      double precision         a( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpftri", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgbequb( m, n, kl, ku, ab, ldab, r, c, rowcnd, colcnd,
     $                    amax, info )
      integer            info, kl, ku, ldab, m, n
      real               amax, colcnd, rowcnd
      real               c( * ), r( * )
      complex            ab( ldab, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgbequb", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(r, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_real(rowcnd, pipe)
      call pipe_write_real(colcnd, pipe)
      call pipe_write_real(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(r, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_real(rowcnd, pipe)
      call pipe_read_real(colcnd, pipe)
      call pipe_read_real(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctbcon( norm, uplo, diag, n, kd, ab, ldab, rcond, work,
     $                   rwork, info )
      character          diag, norm, uplo
      integer            info, kd, ldab, n
      real               rcond
      real               rwork( * )
      complex            ab( ldab, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctbcon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgbtrs( trans, n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb,
     $                   info )
      character          trans
      integer            info, kl, ku, ldab, ldb, n, nrhs
      integer            ipiv( * )
      complex            ab( ldab, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgbtrs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spftrs( transr, uplo, n, nrhs, a, b, ldb, info )
      character          transr, uplo
      integer            info, ldb, n, nrhs
      real               a( 0: * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spftrs", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgetrf( m, n, a, lda, ipiv, info )
      integer            info, lda, m, n
      integer            ipiv( * )
      real               a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgetrf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgbequb( m, n, kl, ku, ab, ldab, r, c, rowcnd, colcnd,
     $                    amax, info )
      integer            info, kl, ku, ldab, m, n
      double precision   amax, colcnd, rowcnd
      double precision   ab( ldab, * ), c( * ), r( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgbequb", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(r, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_double(rowcnd, pipe)
      call pipe_write_double(colcnd, pipe)
      call pipe_write_double(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(r, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_double(rowcnd, pipe)
      call pipe_read_double(colcnd, pipe)
      call pipe_read_double(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zsptrf( uplo, n, ap, ipiv, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      complex*16         ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zsptrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztzrzf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      complex*16         a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztzrzf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cggbal( job, n, a, lda, b, ldb, ilo, ihi, lscale,
     $                   rscale, work, info )
      character          job
      integer            ihi, ilo, info, lda, ldb, n
      real               lscale( * ), rscale( * ), work( * )
      complex            a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cggbal", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_reals(lscale, pipe)
      call pipe_write_reals(rscale, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_reals(lscale, pipe)
      call pipe_read_reals(rscale, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctzrzf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      complex            a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctzrzf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgerqf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      real               a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgerqf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dggbak( job, side, n, ilo, ihi, lscale, rscale, m, v,
     $                   ldv, info )
      character          job, side
      integer            ihi, ilo, info, ldv, m, n
      double precision   lscale( * ), rscale( * ), v( ldv, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dggbak", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_doubles(lscale, pipe)
      call pipe_write_doubles(rscale, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(v, pipe)
      call pipe_write_integer(ldv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_doubles(lscale, pipe)
      call pipe_read_doubles(rscale, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(v, pipe)
      call pipe_read_integer(ldv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zheevr( jobz, range, uplo, n, a, lda, vl, vu, il, iu,
     $                   abstol, m, w, z, ldz, isuppz, work, lwork,
     $                   rwork, lrwork, iwork, liwork, info )
      character          jobz, range, uplo
      integer            il, info, iu, lda, ldz, liwork, lrwork, lwork,
     $                   m, n
      double precision   abstol, vl, vu
      integer            isuppz( * ), iwork( * )
      double precision   rwork( * ), w( * )
      complex*16         a( lda, * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zheevr", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_double(vl, pipe)
      call pipe_write_double(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_double(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integers(isuppz, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(lrwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_double(vl, pipe)
      call pipe_read_double(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_double(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integers(isuppz, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(lrwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dspevx( jobz, range, uplo, n, ap, vl, vu, il, iu,
     $                   abstol, m, w, z, ldz, work, iwork, ifail,
     $                   info )
      character          jobz, range, uplo
      integer            il, info, iu, ldz, m, n
      double precision   abstol, vl, vu
      integer            ifail( * ), iwork( * )
      double precision   ap( * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dspevx", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_double(vl, pipe)
      call pipe_write_double(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_double(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_double(vl, pipe)
      call pipe_read_double(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_double(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztrsyl( trana, tranb, isgn, m, n, a, lda, b, ldb, c,
     $                   ldc, scale, info )
      character          trana, tranb
      integer            info, isgn, lda, ldb, ldc, m, n
      double precision   scale
      complex*16         a( lda, * ), b( ldb, * ), c( ldc, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztrsyl", pipe)
      call pipe_write_character(trana, pipe)
      call pipe_write_character(tranb, pipe)
      call pipe_write_integer(isgn, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_double(scale, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trana, pipe)
      call pipe_read_character(tranb, pipe)
      call pipe_read_integer(isgn, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_double(scale, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsygvd( itype, jobz, uplo, n, a, lda, b, ldb, w, work,
     $                   lwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, itype, lda, ldb, liwork, lwork, n
      integer            iwork( * )
      double precision   a( lda, * ), b( ldb, * ), w( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsygvd", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zsptrs( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zsptrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsbgvx( jobz, range, uplo, n, ka, kb, ab, ldab, bb,
     $                   ldbb, q, ldq, vl, vu, il, iu, abstol, m, w, z,
     $                   ldz, work, iwork, ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, ka, kb, ldab, ldbb, ldq, ldz, m,
     $                   n
      double precision   abstol, vl, vu
      integer            ifail( * ), iwork( * )
      double precision   ab( ldab, * ), bb( ldbb, * ), q( ldq, * ),
     $                   w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsbgvx", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ka, pipe)
      call pipe_write_integer(kb, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(bb, pipe)
      call pipe_write_integer(ldbb, pipe)
      call pipe_write_doubles(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_double(vl, pipe)
      call pipe_write_double(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_double(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ka, pipe)
      call pipe_read_integer(kb, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(bb, pipe)
      call pipe_read_integer(ldbb, pipe)
      call pipe_read_doubles(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_double(vl, pipe)
      call pipe_read_double(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_double(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgeqp3( m, n, a, lda, jpvt, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      integer            jpvt( * )
      real               a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgeqp3", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(jpvt, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(jpvt, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgbequ( m, n, kl, ku, ab, ldab, r, c, rowcnd, colcnd,
     $                   amax, info )
      integer            info, kl, ku, ldab, m, n
      real               amax, colcnd, rowcnd
      real               c( * ), r( * )
      complex            ab( ldab, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgbequ", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(r, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_real(rowcnd, pipe)
      call pipe_write_real(colcnd, pipe)
      call pipe_write_real(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(r, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_real(rowcnd, pipe)
      call pipe_read_real(colcnd, pipe)
      call pipe_read_real(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zsprfs( uplo, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx,
     $                   ferr, berr, work, rwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         afp( * ), ap( * ), b( ldb, * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zsprfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_complex16s(afp, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_complex16s(afp, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cggrqf( m, p, n, a, lda, taua, b, ldb, taub, work,
     $                   lwork, info )
      integer            info, lda, ldb, lwork, m, n, p
      complex            a( lda, * ), b( ldb, * ), taua( * ), taub( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cggrqf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(p, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(taua, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(taub, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(p, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(taua, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(taub, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhetri( uplo, n, a, lda, ipiv, work, info )
      character          uplo
      integer            info, lda, n
      integer            ipiv( * )
      complex*16         a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhetri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgttrs( trans, n, nrhs, dl, d, du, du2, ipiv, b, ldb,
     $                   info )
      character          trans
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         b( ldb, * ), d( * ), dl( * ), du( * ), du2( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgttrs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(dl, pipe)
      call pipe_write_complex16s(d, pipe)
      call pipe_write_complex16s(du, pipe)
      call pipe_write_complex16s(du2, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(dl, pipe)
      call pipe_read_complex16s(d, pipe)
      call pipe_read_complex16s(du, pipe)
      call pipe_read_complex16s(du2, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssygv( itype, jobz, uplo, n, a, lda, b, ldb, w, work,
     $                  lwork, info )
      character          jobz, uplo
      integer            info, itype, lda, ldb, lwork, n
      real               a( lda, * ), b( ldb, * ), w( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssygv", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpptrs( uplo, n, nrhs, ap, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      complex*16         ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpptrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtrsen( job, compq, select, n, t, ldt, q, ldq, wr, wi,
     $                   m, s, sep, work, lwork, iwork, liwork, info )
      character          compq, job
      integer            info, ldq, ldt, liwork, lwork, m, n
      double precision   s, sep
      logical            select( * )
      integer            iwork( * )
      double precision   q( ldq, * ), t( ldt, * ), wi( * ), work( * ),
     $                   wr( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtrsen", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(compq, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(t, pipe)
      call pipe_write_integer(ldt, pipe)
      call pipe_write_doubles(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_doubles(wr, pipe)
      call pipe_write_doubles(wi, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_double(s, pipe)
      call pipe_write_double(sep, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(compq, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(t, pipe)
      call pipe_read_integer(ldt, pipe)
      call pipe_read_doubles(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_doubles(wr, pipe)
      call pipe_read_doubles(wi, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_double(s, pipe)
      call pipe_read_double(sep, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgecon( norm, n, a, lda, anorm, rcond, work, iwork,
     $                   info )
      character          norm
      integer            info, lda, n
      real               anorm, rcond
      integer            iwork( * )
      real               a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgecon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_real(anorm, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_real(anorm, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sdisna( job, m, n, d, sep, info )
      character          job
      integer            info, m, n
      real               d( * ), sep( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sdisna", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(sep, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(sep, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztpcon( norm, uplo, diag, n, ap, rcond, work, rwork,
     $                   info )
      character          diag, norm, uplo
      integer            info, n
      double precision   rcond
      double precision   rwork( * )
      complex*16         ap( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztpcon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgeev( jobvl, jobvr, n, a, lda, wr, wi, vl, ldvl, vr,
     $                  ldvr, work, lwork, info )
      implicit none
      character          jobvl, jobvr
      integer            info, lda, ldvl, ldvr, lwork, n
      real   a( lda, * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   wi( * ), work( * ), wr( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgeev", pipe)
      call pipe_write_character(jobvl, pipe)
      call pipe_write_character(jobvr, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(wr, pipe)
      call pipe_write_reals(wi, pipe)
      call pipe_write_reals(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_reals(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobvl, pipe)
      call pipe_read_character(jobvr, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(wr, pipe)
      call pipe_read_reals(wi, pipe)
      call pipe_read_reals(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_reals(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chbevx( jobz, range, uplo, n, kd, ab, ldab, q, ldq, vl,
     $                   vu, il, iu, abstol, m, w, z, ldz, work, rwork,
     $                   iwork, ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, kd, ldab, ldq, ldz, m, n
      real               abstol, vl, vu
      integer            ifail( * ), iwork( * )
      real               rwork( * ), w( * )
      complex            ab( ldab, * ), q( ldq, * ), work( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chbevx", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complexs(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_real(vl, pipe)
      call pipe_write_real(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_real(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complexs(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_real(vl, pipe)
      call pipe_read_real(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_real(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgebal( job, n, a, lda, ilo, ihi, scale, info )
      character          job
      integer            ihi, ilo, info, lda, n
      double precision   scale( * )
      complex*16         a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgebal", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_doubles(scale, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_doubles(scale, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sggbak( job, side, n, ilo, ihi, lscale, rscale, m, v,
     $                   ldv, info )
      character          job, side
      integer            ihi, ilo, info, ldv, m, n
      real               lscale( * ), rscale( * ), v( ldv, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sggbak", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_reals(lscale, pipe)
      call pipe_write_reals(rscale, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(v, pipe)
      call pipe_write_integer(ldv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_reals(lscale, pipe)
      call pipe_read_reals(rscale, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(v, pipe)
      call pipe_read_integer(ldv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctrttf( transr, uplo, n, a, lda, arf, info )
      character          transr, uplo
      integer            info, n, lda
      complex            a( 0: lda-1, 0: * ), arf( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctrttf", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(arf, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(arf, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zheev( jobz, uplo, n, a, lda, w, work, lwork, rwork,
     $                  info )
      character          jobz, uplo
      integer            info, lda, lwork, n
      double precision   rwork( * ), w( * )
      complex*16         a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zheev", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpocon( uplo, n, a, lda, anorm, rcond, work, rwork,
     $                   info )
      character          uplo
      integer            info, lda, n
      double precision   anorm, rcond
      double precision   rwork( * )
      complex*16         a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpocon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_double(anorm, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_double(anorm, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgebrd( m, n, a, lda, d, e, tauq, taup, work, lwork,
     $                   info )
      integer            info, lda, lwork, m, n
      double precision   d( * ), e( * )
      complex*16         a( lda, * ), taup( * ), tauq( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgebrd", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_complex16s(tauq, pipe)
      call pipe_write_complex16s(taup, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_complex16s(tauq, pipe)
      call pipe_read_complex16s(taup, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine csteqr( compz, n, d, e, z, ldz, work, info )
      character          compz
      integer            info, ldz, n
      real               d( * ), e( * ), work( * )
      complex            z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("csteqr", pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zppsv( uplo, n, nrhs, ap, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      complex*16         ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zppsv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsyevr( jobz, range, uplo, n, a, lda, vl, vu, il, iu,
     $                   abstol, m, w, z, ldz, isuppz, work, lwork,
     $                   iwork, liwork, info )
      character          jobz, range, uplo
      integer            il, info, iu, lda, ldz, liwork, lwork, m, n
      double precision   abstol, vl, vu
      integer            isuppz( * ), iwork( * )
      double precision   a( lda, * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsyevr", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_double(vl, pipe)
      call pipe_write_double(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_double(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integers(isuppz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_double(vl, pipe)
      call pipe_read_double(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_double(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integers(isuppz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spptri( uplo, n, ap, info )
      character          uplo
      integer            info, n
      real               ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spptri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpbstf( uplo, n, kd, ab, ldab, info )
      character          uplo
      integer            info, kd, ldab, n
      complex            ab( ldab, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpbstf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztrcon( norm, uplo, diag, n, a, lda, rcond, work,
     $                   rwork, info )
      character          diag, norm, uplo
      integer            info, lda, n
      double precision   rcond
      double precision   rwork( * )
      complex*16         a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztrcon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgerfs( trans, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb,
     $                   x, ldx, ferr, berr, work, iwork, info )
      character          trans
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            ipiv( * ), iwork( * )
      double precision   a( lda, * ), af( ldaf, * ), b( ldb, * ),
     $                   berr( * ), ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgerfs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(af, pipe)
      call pipe_write_integer(ldaf, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(af, pipe)
      call pipe_read_integer(ldaf, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgttrf( n, dl, d, du, du2, ipiv, info )
      integer            info, n
      integer            ipiv( * )
      real               d( * ), dl( * ), du( * ), du2( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgttrf", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(dl, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(du, pipe)
      call pipe_write_reals(du2, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(dl, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(du, pipe)
      call pipe_read_reals(du2, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctrtrs( uplo, trans, diag, n, nrhs, a, lda, b, ldb,
     $                   info )
      character          diag, trans, uplo
      integer            info, lda, ldb, n, nrhs
      complex            a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctrtrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgesv( n, nrhs, a, lda, ipiv, b, ldb, info )
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      double precision   a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgesv", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sbdsqr( uplo, n, ncvt, nru, ncc, d, e, vt, ldvt, u,
     $                   ldu, c, ldc, work, info )
      character          uplo
      integer            info, ldc, ldu, ldvt, n, ncc, ncvt, nru
      real               c( ldc, * ), d( * ), e( * ), u( ldu, * ),
     $                   vt( ldvt, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sbdsqr", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ncvt, pipe)
      call pipe_write_integer(nru, pipe)
      call pipe_write_integer(ncc, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_reals(vt, pipe)
      call pipe_write_integer(ldvt, pipe)
      call pipe_write_reals(u, pipe)
      call pipe_write_integer(ldu, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ncvt, pipe)
      call pipe_read_integer(nru, pipe)
      call pipe_read_integer(ncc, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_reals(vt, pipe)
      call pipe_read_integer(ldvt, pipe)
      call pipe_read_reals(u, pipe)
      call pipe_read_integer(ldu, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine csptri( uplo, n, ap, ipiv, work, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      complex            ap( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("csptri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpoequ( n, a, lda, s, scond, amax, info )
      integer            info, lda, n
      real               amax, scond
      real               s( * )
      complex            a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpoequ", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_real(scond, pipe)
      call pipe_write_real(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_real(scond, pipe)
      call pipe_read_real(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgbcon( norm, n, kl, ku, ab, ldab, ipiv, anorm, rcond,
     $                   work, iwork, info )
      character          norm
      integer            info, kl, ku, ldab, n
      real               anorm, rcond
      integer            ipiv( * ), iwork( * )
      real               ab( ldab, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgbcon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_real(anorm, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_real(anorm, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgebak( job, side, n, ilo, ihi, scale, m, v, ldv,
     $                   info )
      character          job, side
      integer            ihi, ilo, info, ldv, m, n
      real               v( ldv, * ), scale( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgebak", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_reals(scale, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(v, pipe)
      call pipe_write_integer(ldv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_reals(scale, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(v, pipe)
      call pipe_read_integer(ldv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssytrs( uplo, n, nrhs, a, lda, ipiv, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      real               a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssytrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztrevc( side, howmny, select, n, t, ldt, vl, ldvl, vr,
     $                   ldvr, mm, m, work, rwork, info )
      character          howmny, side
      integer            info, ldt, ldvl, ldvr, m, mm, n
      logical            select( * )
      double precision   rwork( * )
      complex*16         t( ldt, * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztrevc", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(howmny, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(t, pipe)
      call pipe_write_integer(ldt, pipe)
      call pipe_write_complex16s(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_complex16s(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_integer(mm, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(howmny, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(t, pipe)
      call pipe_read_integer(ldt, pipe)
      call pipe_read_complex16s(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_complex16s(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_integer(mm, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgtsv( n, nrhs, dl, d, du, b, ldb, info )
      integer            info, ldb, n, nrhs
      complex*16         b( ldb, * ), d( * ), dl( * ), du( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgtsv", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(dl, pipe)
      call pipe_write_complex16s(d, pipe)
      call pipe_write_complex16s(du, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(dl, pipe)
      call pipe_read_complex16s(d, pipe)
      call pipe_read_complex16s(du, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chptrs( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      complex            ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chptrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgesv( n, nrhs, a, lda, ipiv, b, ldb, info )
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      real               a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgesv", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgbcon( norm, n, kl, ku, ab, ldab, ipiv, anorm, rcond,
     $                   work, rwork, info )
      character          norm
      integer            info, kl, ku, ldab, n
      double precision   anorm, rcond
      integer            ipiv( * )
      double precision   rwork( * )
      complex*16         ab( ldab, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgbcon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_double(anorm, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_double(anorm, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsptrf( uplo, n, ap, ipiv, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      double precision   ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsptrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhpgv( itype, jobz, uplo, n, ap, bp, w, z, ldz, work,
     $                  rwork, info )
      character          jobz, uplo
      integer            info, itype, ldz, n
      double precision   rwork( * ), w( * )
      complex*16         ap( * ), bp( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhpgv", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_complex16s(bp, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_complex16s(bp, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sorgrq( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      real               a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sorgrq", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgttrf( n, dl, d, du, du2, ipiv, info )
      integer            info, n
      integer            ipiv( * )
      double precision   d( * ), dl( * ), du( * ), du2( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgttrf", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(dl, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(du, pipe)
      call pipe_write_doubles(du2, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(dl, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(du, pipe)
      call pipe_read_doubles(du2, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine csytrf( uplo, n, a, lda, ipiv, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      integer            ipiv( * )
      complex            a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("csytrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtfttr( transr, uplo, n, arf, a, lda, info )
      character          transr, uplo
      integer            info, n, lda
      double precision   a( 0: lda-1, 0: * ), arf( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtfttr", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(arf, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(arf, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctgsen( ijob, wantq, wantz, select, n, a, lda, b, ldb,
     $                   alpha, beta, q, ldq, z, ldz, m, pl, pr, dif,
     $                   work, lwork, iwork, liwork, info )
      logical            wantq, wantz
      integer            ijob, info, lda, ldb, ldq, ldz, liwork, lwork,
     $                   m, n
      real               pl, pr
      logical            select( * )
      integer            iwork( * )
      real               dif( * )
      complex            a( lda, * ), alpha( * ), b( ldb, * ),
     $                   beta( * ), q( ldq, * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctgsen", pipe)
      call pipe_write_integer(ijob, pipe)
      call pipe_write_logic(wantq, pipe)
      call pipe_write_logic(wantz, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(alpha, pipe)
      call pipe_write_complexs(beta, pipe)
      call pipe_write_complexs(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_real(pl, pipe)
      call pipe_write_real(pr, pipe)
      call pipe_write_reals(dif, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(ijob, pipe)
      call pipe_read_logic(wantq, pipe)
      call pipe_read_logic(wantz, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(alpha, pipe)
      call pipe_read_complexs(beta, pipe)
      call pipe_read_complexs(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_real(pl, pipe)
      call pipe_read_real(pr, pipe)
      call pipe_read_reals(dif, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dhseqr( job, compz, n, ilo, ihi, h, ldh, wr, wi, z,
     $                   ldz, work, lwork, info )
      integer            ihi, ilo, info, ldh, ldz, lwork, n
      character          compz, job
      double precision   h( ldh, * ), wi( * ), work( * ), wr( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dhseqr", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_doubles(h, pipe)
      call pipe_write_integer(ldh, pipe)
      call pipe_write_doubles(wr, pipe)
      call pipe_write_doubles(wi, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_doubles(h, pipe)
      call pipe_read_integer(ldh, pipe)
      call pipe_read_doubles(wr, pipe)
      call pipe_read_doubles(wi, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine strtri( uplo, diag, n, a, lda, info )
      character          diag, uplo
      integer            info, lda, n
      real               a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("strtri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sorghr( n, ilo, ihi, a, lda, tau, work, lwork, info )
      integer            ihi, ilo, info, lda, lwork, n
      real               a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sorghr", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sspgvd( itype, jobz, uplo, n, ap, bp, w, z, ldz, work,
     $                   lwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, itype, ldz, liwork, lwork, n
      integer            iwork( * )
      real               ap( * ), bp( * ), w( * ), work( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sspgvd", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_reals(bp, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_reals(bp, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztptrs( uplo, trans, diag, n, nrhs, ap, b, ldb, info )
      character          diag, trans, uplo
      integer            info, ldb, n, nrhs
      complex*16         ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztptrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgetrs( trans, n, nrhs, a, lda, ipiv, b, ldb, info )
      character          trans
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      double precision   a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgetrs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztrsna( job, howmny, select, n, t, ldt, vl, ldvl, vr,
     $                   ldvr, s, sep, mm, m, work, ldwork, rwork,
     $                   info )
      character          howmny, job
      integer            info, ldt, ldvl, ldvr, ldwork, m, mm, n
      logical            select( * )
      double precision   rwork( * ), s( * ), sep( * )
      complex*16         t( ldt, * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   work( ldwork, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztrsna", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(howmny, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(t, pipe)
      call pipe_write_integer(ldt, pipe)
      call pipe_write_complex16s(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_complex16s(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_doubles(sep, pipe)
      call pipe_write_integer(mm, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(ldwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(howmny, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(t, pipe)
      call pipe_read_integer(ldt, pipe)
      call pipe_read_complex16s(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_complex16s(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_doubles(sep, pipe)
      call pipe_read_integer(mm, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(ldwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine stgexc( wantq, wantz, n, a, lda, b, ldb, q, ldq, z,
     $                   ldz, ifst, ilst, work, lwork, info )
      logical            wantq, wantz
      integer            ifst, ilst, info, lda, ldb, ldq, ldz, lwork, n
      real               a( lda, * ), b( ldb, * ), q( ldq, * ),
     $                   work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("stgexc", pipe)
      call pipe_write_logic(wantq, pipe)
      call pipe_write_logic(wantz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integer(ifst, pipe)
      call pipe_write_integer(ilst, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_logic(wantq, pipe)
      call pipe_read_logic(wantz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integer(ifst, pipe)
      call pipe_read_integer(ilst, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zunmrq( side, trans, m, n, k, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      complex*16         a( lda, * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zunmrq", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctgexc( wantq, wantz, n, a, lda, b, ldb, q, ldq, z,
     $                   ldz, ifst, ilst, info )
      logical            wantq, wantz
      integer            ifst, ilst, info, lda, ldb, ldq, ldz, n
      complex            a( lda, * ), b( ldb, * ), q( ldq, * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctgexc", pipe)
      call pipe_write_logic(wantq, pipe)
      call pipe_write_logic(wantz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integer(ifst, pipe)
      call pipe_write_integer(ilst, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_logic(wantq, pipe)
      call pipe_read_logic(wantz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integer(ifst, pipe)
      call pipe_read_integer(ilst, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chesvx( fact, uplo, n, nrhs, a, lda, af, ldaf, ipiv, b,
     $                   ldb, x, ldx, rcond, ferr, berr, work, lwork,
     $                   rwork, info )
      character          fact, uplo
      integer            info, lda, ldaf, ldb, ldx, lwork, n, nrhs
      real               rcond
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            a( lda, * ), af( ldaf, * ), b( ldb, * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chesvx", pipe)
      call pipe_write_character(fact, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(af, pipe)
      call pipe_write_integer(ldaf, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(fact, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(af, pipe)
      call pipe_read_integer(ldaf, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zungqr( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      complex*16         a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zungqr", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dggglm( n, m, p, a, lda, b, ldb, d, x, y, work, lwork,
     $                   info )
      integer            info, lda, ldb, lwork, m, n, p
      double precision   a( lda, * ), b( ldb, * ), d( * ), work( * ),
     $                   x( * ), y( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dggglm", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(p, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(x, pipe)
      call pipe_write_doubles(y, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(p, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(x, pipe)
      call pipe_read_doubles(y, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine strevc( side, howmny, select, n, t, ldt, vl, ldvl, vr,
     $                   ldvr, mm, m, work, info )
      character          howmny, side
      integer            info, ldt, ldvl, ldvr, m, mm, n
      logical            select( * )
      real               t( ldt, * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("strevc", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(howmny, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(t, pipe)
      call pipe_write_integer(ldt, pipe)
      call pipe_write_reals(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_reals(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_integer(mm, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(howmny, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(t, pipe)
      call pipe_read_integer(ldt, pipe)
      call pipe_read_reals(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_reals(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_integer(mm, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine strttp( uplo, n, a, lda, ap, info )
      character          uplo
      integer            info, n, lda
      real               a( lda, * ), ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("strttp", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgtsvx( fact, trans, n, nrhs, dl, d, du, dlf, df, duf,
     $                   du2, ipiv, b, ldb, x, ldx, rcond, ferr, berr,
     $                   work, iwork, info )
      character          fact, trans
      integer            info, ldb, ldx, n, nrhs
      double precision   rcond
      integer            ipiv( * ), iwork( * )
      double precision   b( ldb, * ), berr( * ), d( * ), df( * ),
     $                   dl( * ), dlf( * ), du( * ), du2( * ), duf( * ),
     $                   ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgtsvx", pipe)
      call pipe_write_character(fact, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(dl, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(du, pipe)
      call pipe_write_doubles(dlf, pipe)
      call pipe_write_doubles(df, pipe)
      call pipe_write_doubles(duf, pipe)
      call pipe_write_doubles(du2, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(fact, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(dl, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(du, pipe)
      call pipe_read_doubles(dlf, pipe)
      call pipe_read_doubles(df, pipe)
      call pipe_read_doubles(duf, pipe)
      call pipe_read_doubles(du2, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cunmqr( side, trans, m, n, k, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      complex            a( lda, * ), c( ldc, * ), tau( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cunmqr", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpotrf( uplo, n, a, lda, info )
      character          uplo
      integer            info, lda, n
      complex            a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpotrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgeequ( m, n, a, lda, r, c, rowcnd, colcnd, amax,
     $                   info )
      integer            info, lda, m, n
      real               amax, colcnd, rowcnd
      real               a( lda, * ), c( * ), r( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgeequ", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(r, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_real(rowcnd, pipe)
      call pipe_write_real(colcnd, pipe)
      call pipe_write_real(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(r, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_real(rowcnd, pipe)
      call pipe_read_real(colcnd, pipe)
      call pipe_read_real(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpbtrs( uplo, n, kd, nrhs, ab, ldab, b, ldb, info )
      character          uplo
      integer            info, kd, ldab, ldb, n, nrhs
      double precision   ab( ldab, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpbtrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cheev( jobz, uplo, n, a, lda, w, work, lwork, rwork,
     $                  info )
      character          jobz, uplo
      integer            info, lda, lwork, n
      real               rwork( * ), w( * )
      complex            a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cheev", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgttrs( trans, n, nrhs, dl, d, du, du2, ipiv, b, ldb,
     $                   info )
      character          trans
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      double precision   b( ldb, * ), d( * ), dl( * ), du( * ), du2( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgttrs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(dl, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(du, pipe)
      call pipe_write_doubles(du2, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(dl, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(du, pipe)
      call pipe_read_doubles(du2, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sorglq( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      real               a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sorglq", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsysvx( fact, uplo, n, nrhs, a, lda, af, ldaf, ipiv, b,
     $                   ldb, x, ldx, rcond, ferr, berr, work, lwork,
     $                   iwork, info )
      character          fact, uplo
      integer            info, lda, ldaf, ldb, ldx, lwork, n, nrhs
      double precision   rcond
      integer            ipiv( * ), iwork( * )
      double precision   a( lda, * ), af( ldaf, * ), b( ldb, * ),
     $                   berr( * ), ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsysvx", pipe)
      call pipe_write_character(fact, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(af, pipe)
      call pipe_write_integer(ldaf, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(fact, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(af, pipe)
      call pipe_read_integer(ldaf, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zposv( uplo, n, nrhs, a, lda, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      complex*16         a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zposv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtbrfs( uplo, trans, diag, n, kd, nrhs, ab, ldab, b,
     $                   ldb, x, ldx, ferr, berr, work, iwork, info )
      character          diag, trans, uplo
      integer            info, kd, ldab, ldb, ldx, n, nrhs
      integer            iwork( * )
      double precision   ab( ldab, * ), b( ldb, * ), berr( * ),
     $                   ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtbrfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dormrq( side, trans, m, n, k, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      double precision   a( lda, * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dormrq", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpttrs( uplo, n, nrhs, d, e, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      double precision   d( * )
      complex*16         b( ldb, * ), e( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpttrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_complex16s(e, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_complex16s(e, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sormql( side, trans, m, n, k, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      real               a( lda, * ), c( ldc, * ), tau( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sormql", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgtsv( n, nrhs, dl, d, du, b, ldb, info )
      integer            info, ldb, n, nrhs
      double precision   b( ldb, * ), d( * ), dl( * ), du( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgtsv", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(dl, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(du, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(dl, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(du, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssbgvx( jobz, range, uplo, n, ka, kb, ab, ldab, bb,
     $                   ldbb, q, ldq, vl, vu, il, iu, abstol, m, w, z,
     $                   ldz, work, iwork, ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, ka, kb, ldab, ldbb, ldq, ldz, m,
     $                   n
      real               abstol, vl, vu
      integer            ifail( * ), iwork( * )
      real               ab( ldab, * ), bb( ldbb, * ), q( ldq, * ),
     $                   w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssbgvx", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ka, pipe)
      call pipe_write_integer(kb, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(bb, pipe)
      call pipe_write_integer(ldbb, pipe)
      call pipe_write_reals(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_real(vl, pipe)
      call pipe_write_real(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_real(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ka, pipe)
      call pipe_read_integer(kb, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(bb, pipe)
      call pipe_read_integer(ldbb, pipe)
      call pipe_read_reals(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_real(vl, pipe)
      call pipe_read_real(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_real(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctrexc( compq, n, t, ldt, q, ldq, ifst, ilst, info )
      character          compq
      integer            ifst, ilst, info, ldq, ldt, n
      complex            q( ldq, * ), t( ldt, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctrexc", pipe)
      call pipe_write_character(compq, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(t, pipe)
      call pipe_write_integer(ldt, pipe)
      call pipe_write_complexs(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_integer(ifst, pipe)
      call pipe_write_integer(ilst, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(compq, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(t, pipe)
      call pipe_read_integer(ldt, pipe)
      call pipe_read_complexs(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_integer(ifst, pipe)
      call pipe_read_integer(ilst, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sppsv( uplo, n, nrhs, ap, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      real               ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sppsv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine stzrzf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      real               a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("stzrzf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cptsv( n, nrhs, d, e, b, ldb, info )
      integer            info, ldb, n, nrhs
      real               d( * )
      complex            b( ldb, * ), e( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cptsv", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_complexs(e, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_complexs(e, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine stgsja( jobu, jobv, jobq, m, p, n, k, l, a, lda, b,
     $                   ldb, tola, tolb, alpha, beta, u, ldu, v, ldv,
     $                   q, ldq, work, ncycle, info )
      character          jobq, jobu, jobv
      integer            info, k, l, lda, ldb, ldq, ldu, ldv, m, n,
     $                   ncycle, p
      real               tola, tolb
      real               a( lda, * ), alpha( * ), b( ldb, * ),
     $                   beta( * ), q( ldq, * ), u( ldu, * ),
     $                   v( ldv, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("stgsja", pipe)
      call pipe_write_character(jobu, pipe)
      call pipe_write_character(jobv, pipe)
      call pipe_write_character(jobq, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(p, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_integer(l, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_real(tola, pipe)
      call pipe_write_real(tolb, pipe)
      call pipe_write_reals(alpha, pipe)
      call pipe_write_reals(beta, pipe)
      call pipe_write_reals(u, pipe)
      call pipe_write_integer(ldu, pipe)
      call pipe_write_reals(v, pipe)
      call pipe_write_integer(ldv, pipe)
      call pipe_write_reals(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(ncycle, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobu, pipe)
      call pipe_read_character(jobv, pipe)
      call pipe_read_character(jobq, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(p, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_integer(l, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_real(tola, pipe)
      call pipe_read_real(tolb, pipe)
      call pipe_read_reals(alpha, pipe)
      call pipe_read_reals(beta, pipe)
      call pipe_read_reals(u, pipe)
      call pipe_read_integer(ldu, pipe)
      call pipe_read_reals(v, pipe)
      call pipe_read_integer(ldv, pipe)
      call pipe_read_reals(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(ncycle, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chseqr( job, compz, n, ilo, ihi, h, ldh, w, z, ldz,
     $                   work, lwork, info )
      integer            ihi, ilo, info, ldh, ldz, lwork, n
      character          compz, job
      complex            h( ldh, * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chseqr", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_complexs(h, pipe)
      call pipe_write_integer(ldh, pipe)
      call pipe_write_complexs(w, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_complexs(h, pipe)
      call pipe_read_integer(ldh, pipe)
      call pipe_read_complexs(w, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctgsna( job, howmny, select, n, a, lda, b, ldb, vl,
     $                   ldvl, vr, ldvr, s, dif, mm, m, work, lwork,
     $                   iwork, info )
      character          howmny, job
      integer            info, lda, ldb, ldvl, ldvr, lwork, m, mm, n
      logical            select( * )
      integer            iwork( * )
      real               dif( * ), s( * )
      complex            a( lda, * ), b( ldb, * ), vl( ldvl, * ),
     $                   vr( ldvr, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctgsna", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(howmny, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_complexs(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_reals(dif, pipe)
      call pipe_write_integer(mm, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(howmny, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_complexs(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_reals(dif, pipe)
      call pipe_read_integer(mm, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine strcon( norm, uplo, diag, n, a, lda, rcond, work,
     $                   iwork, info )
      character          diag, norm, uplo
      integer            info, lda, n
      real               rcond
      integer            iwork( * )
      real               a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("strcon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpbrfs( uplo, n, kd, nrhs, ab, ldab, afb, ldafb, b,
     $                   ldb, x, ldx, ferr, berr, work, rwork, info )
      character          uplo
      integer            info, kd, ldab, ldafb, ldb, ldx, n, nrhs
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpbrfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complex16s(afb, pipe)
      call pipe_write_integer(ldafb, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complex16s(afb, pipe)
      call pipe_read_integer(ldafb, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpotrf( uplo, n, a, lda, info )
      character          uplo
      integer            info, lda, n
      double precision   a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpotrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctbtrs( uplo, trans, diag, n, kd, nrhs, ab, ldab, b,
     $                   ldb, info )
      character          diag, trans, uplo
      integer            info, kd, ldab, ldb, n, nrhs
      complex            ab( ldab, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctbtrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgehrd( n, ilo, ihi, a, lda, tau, work, lwork, info )
      integer            ihi, ilo, info, lda, lwork, n
      real              a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgehrd", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zsycon( uplo, n, a, lda, ipiv, anorm, rcond, work,
     $                   info )
      character          uplo
      integer            info, lda, n
      double precision   anorm, rcond
      integer            ipiv( * )
      complex*16         a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zsycon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_double(anorm, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_double(anorm, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgbsv( n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb, info )
      integer            info, kl, ku, ldab, ldb, n, nrhs
      integer            ipiv( * )
      complex            ab( ldab, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgbsv", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sspcon( uplo, n, ap, ipiv, anorm, rcond, work, iwork,
     $                   info )
      character          uplo
      integer            info, n
      real               anorm, rcond
      integer            ipiv( * ), iwork( * )
      real               ap( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sspcon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_real(anorm, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_real(anorm, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgelsy( m, n, nrhs, a, lda, b, ldb, jpvt, rcond, rank,
     $                   work, lwork, info )
      integer            info, lda, ldb, lwork, m, n, nrhs, rank
      real               rcond
      integer            jpvt( * )
      real               a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgelsy", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integers(jpvt, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_integer(rank, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integers(jpvt, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_integer(rank, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpprfs( uplo, n, nrhs, ap, afp, b, ldb, x, ldx, ferr,
     $                   berr, work, iwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      integer            iwork( * )
      double precision   afp( * ), ap( * ), b( ldb, * ), berr( * ),
     $                   ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpprfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_doubles(afp, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_doubles(afp, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine csyequb( uplo, n, a, lda, s, scond, amax, work, info )
      integer            info, lda, n
      real               amax, scond
      character          uplo
      complex            a( lda, * ), work( * )
      real               s( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("csyequb", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_real(scond, pipe)
      call pipe_write_real(amax, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_real(scond, pipe)
      call pipe_read_real(amax, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dppcon( uplo, n, ap, anorm, rcond, work, iwork, info )
      character          uplo
      integer            info, n
      double precision   anorm, rcond
      integer            iwork( * )
      double precision   ap( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dppcon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_double(anorm, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_double(anorm, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cungtr( uplo, n, a, lda, tau, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      complex            a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cungtr", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgetrs( trans, n, nrhs, a, lda, ipiv, b, ldb, info )
      character          trans
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgetrs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dorgql( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      double precision   a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dorgql", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine stptrs( uplo, trans, diag, n, nrhs, ap, b, ldb, info )
      character          diag, trans, uplo
      integer            info, ldb, n, nrhs
      real               ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("stptrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsbev( jobz, uplo, n, kd, ab, ldab, w, z, ldz, work,
     $                  info )
      character          jobz, uplo
      integer            info, kd, ldab, ldz, n
      double precision   ab( ldab, * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsbev", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgels( trans, m, n, nrhs, a, lda, b, ldb, work, lwork,
     $                  info )
      character          trans
      integer            info, lda, ldb, lwork, m, n, nrhs
      complex*16         a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgels", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgecon( norm, n, a, lda, anorm, rcond, work, rwork,
     $                   info )
      character          norm
      integer            info, lda, n
      double precision   anorm, rcond
      double precision   rwork( * )
      complex*16         a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgecon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_double(anorm, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_double(anorm, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgesdd( jobz, m, n, a, lda, s, u, ldu, vt, ldvt,
     $                   work, lwork, iwork, info )
      implicit none
      character          jobz
      integer            info, lda, ldu, ldvt, lwork, m, n
      integer            iwork( * )
      real   a( lda, * ), s( * ), u( ldu, * ),
     $                   vt( ldvt, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgesdd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_reals(u, pipe)
      call pipe_write_integer(ldu, pipe)
      call pipe_write_reals(vt, pipe)
      call pipe_write_integer(ldvt, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_reals(u, pipe)
      call pipe_read_integer(ldu, pipe)
      call pipe_read_reals(vt, pipe)
      call pipe_read_integer(ldvt, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgglse( m, n, p, a, lda, b, ldb, c, d, x, work, lwork,
     $                   info )
      integer            info, lda, ldb, lwork, m, n, p
      double precision   a( lda, * ), b( ldb, * ), c( * ), d( * ),
     $                   work( * ), x( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgglse", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(p, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(x, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(p, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(x, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztgevc( side, howmny, select, n, s, lds, p, ldp, vl,
     $                   ldvl, vr, ldvr, mm, m, work, rwork, info )
      character          howmny, side
      integer            info, ldp, lds, ldvl, ldvr, m, mm, n
      logical            select( * )
      double precision   rwork( * )
      complex*16         p( ldp, * ), s( lds, * ), vl( ldvl, * ),
     $                   vr( ldvr, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztgevc", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(howmny, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(s, pipe)
      call pipe_write_integer(lds, pipe)
      call pipe_write_complex16s(p, pipe)
      call pipe_write_integer(ldp, pipe)
      call pipe_write_complex16s(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_complex16s(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_integer(mm, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(howmny, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(s, pipe)
      call pipe_read_integer(lds, pipe)
      call pipe_read_complex16s(p, pipe)
      call pipe_read_integer(ldp, pipe)
      call pipe_read_complex16s(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_complex16s(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_integer(mm, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dormrz( side, trans, m, n, k, l, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans
      integer            info, k, l, lda, ldc, lwork, m, n
      double precision   a( lda, * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dormrz", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_integer(l, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_integer(l, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgeequb( m, n, a, lda, r, c, rowcnd, colcnd, amax,
     $                    info )
      integer            info, lda, m, n
      real               amax, colcnd, rowcnd
      real               c( * ), r( * )
      complex            a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgeequb", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(r, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_real(rowcnd, pipe)
      call pipe_write_real(colcnd, pipe)
      call pipe_write_real(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(r, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_real(rowcnd, pipe)
      call pipe_read_real(colcnd, pipe)
      call pipe_read_real(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dormbr( vect, side, trans, m, n, k, a, lda, tau, c,
     $                   ldc, work, lwork, info )
      character          side, trans, vect
      integer            info, k, lda, ldc, lwork, m, n
      double precision   a( lda, * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dormbr", pipe)
      call pipe_write_character(vect, pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(vect, pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhpevd( jobz, uplo, n, ap, w, z, ldz, work, lwork,
     $                   rwork, lrwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, ldz, liwork, lrwork, lwork, n
      integer            iwork( * )
      double precision   rwork( * ), w( * )
      complex*16         ap( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhpevd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(lrwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(lrwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dspgv( itype, jobz, uplo, n, ap, bp, w, z, ldz, work,
     $                  info )
      character          jobz, uplo
      integer            info, itype, ldz, n
      double precision   ap( * ), bp( * ), w( * ), work( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dspgv", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_doubles(bp, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_doubles(bp, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgetri( n, a, lda, ipiv, work, lwork, info )
      integer            info, lda, lwork, n
      integer            ipiv( * )
      double precision   a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgetri", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgeqrf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      complex*16         a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgeqrf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgeqrfp( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      real               a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgeqrfp", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpbtrs( uplo, n, kd, nrhs, ab, ldab, b, ldb, info )
      character          uplo
      integer            info, kd, ldab, ldb, n, nrhs
      complex*16         ab( ldab, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpbtrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spbsv( uplo, n, kd, nrhs, ab, ldab, b, ldb, info )
      character          uplo
      integer            info, kd, ldab, ldb, n, nrhs
      real               ab( ldab, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spbsv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpprfs( uplo, n, nrhs, ap, afp, b, ldb, x, ldx, ferr,
     $                   berr, work, rwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      real               berr( * ), ferr( * ), rwork( * )
      complex            afp( * ), ap( * ), b( ldb, * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpprfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_complexs(afp, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_complexs(afp, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sspsvx( fact, uplo, n, nrhs, ap, afp, ipiv, b, ldb, x,
     $                   ldx, rcond, ferr, berr, work, iwork, info )
      character          fact, uplo
      integer            info, ldb, ldx, n, nrhs
      real               rcond
      integer            ipiv( * ), iwork( * )
      real               afp( * ), ap( * ), b( ldb, * ), berr( * ),
     $                   ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sspsvx", pipe)
      call pipe_write_character(fact, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_reals(afp, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(fact, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_reals(afp, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sptrfs( n, nrhs, d, e, df, ef, b, ldb, x, ldx, ferr,
     $                   berr, work, info )
      integer            info, ldb, ldx, n, nrhs
      real               b( ldb, * ), berr( * ), d( * ), df( * ),
     $                   e( * ), ef( * ), ferr( * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sptrfs", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_reals(df, pipe)
      call pipe_write_reals(ef, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_reals(df, pipe)
      call pipe_read_reals(ef, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zggev( jobvl, jobvr, n, a, lda, b, ldb, alpha, beta,
     $                  vl, ldvl, vr, ldvr, work, lwork, rwork, info )
      character          jobvl, jobvr
      integer            info, lda, ldb, ldvl, ldvr, lwork, n
      double precision   rwork( * )
      complex*16         a( lda, * ), alpha( * ), b( ldb, * ),
     $                   beta( * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zggev", pipe)
      call pipe_write_character(jobvl, pipe)
      call pipe_write_character(jobvr, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(alpha, pipe)
      call pipe_write_complex16s(beta, pipe)
      call pipe_write_complex16s(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_complex16s(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobvl, pipe)
      call pipe_read_character(jobvr, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(alpha, pipe)
      call pipe_read_complex16s(beta, pipe)
      call pipe_read_complex16s(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_complex16s(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chbgvd( jobz, uplo, n, ka, kb, ab, ldab, bb, ldbb, w,
     $                   z, ldz, work, lwork, rwork, lrwork, iwork,
     $                   liwork, info )
      character          jobz, uplo
      integer            info, ka, kb, ldab, ldbb, ldz, liwork, lrwork,
     $                   lwork, n
      integer            iwork( * )
      real               rwork( * ), w( * )
      complex            ab( ldab, * ), bb( ldbb, * ), work( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chbgvd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ka, pipe)
      call pipe_write_integer(kb, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complexs(bb, pipe)
      call pipe_write_integer(ldbb, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(lrwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ka, pipe)
      call pipe_read_integer(kb, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complexs(bb, pipe)
      call pipe_read_integer(ldbb, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(lrwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dorghr( n, ilo, ihi, a, lda, tau, work, lwork, info )
      integer            ihi, ilo, info, lda, lwork, n
      double precision   a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dorghr", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sormrq( side, trans, m, n, k, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      real               a( lda, * ), c( ldc, * ), tau( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sormrq", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chpsvx( fact, uplo, n, nrhs, ap, afp, ipiv, b, ldb, x,
     $                   ldx, rcond, ferr, berr, work, rwork, info )
      character          fact, uplo
      integer            info, ldb, ldx, n, nrhs
      real               rcond
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            afp( * ), ap( * ), b( ldb, * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chpsvx", pipe)
      call pipe_write_character(fact, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_complexs(afp, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(fact, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_complexs(afp, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine stbcon( norm, uplo, diag, n, kd, ab, ldab, rcond, work,
     $                   iwork, info )
      character          diag, norm, uplo
      integer            info, kd, ldab, n
      real               rcond
      integer            iwork( * )
      real               ab( ldab, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("stbcon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zunmqr( side, trans, m, n, k, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      complex*16         a( lda, * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zunmqr", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztfttp( transr, uplo, n, arf, ap, info )
      character          transr, uplo
      integer            info, n
      complex*16         ap( 0: * ), arf( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztfttp", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(arf, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(arf, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhbevd( jobz, uplo, n, kd, ab, ldab, w, z, ldz, work,
     $                   lwork, rwork, lrwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, kd, ldab, ldz, liwork, lrwork, lwork, n
      integer            iwork( * )
      double precision   rwork( * ), w( * )
      complex*16         ab( ldab, * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhbevd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(lrwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(lrwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dspgvx( itype, jobz, range, uplo, n, ap, bp, vl, vu,
     $                   il, iu, abstol, m, w, z, ldz, work, iwork,
     $                   ifail, info )
      character          jobz, range, uplo
      integer            il, info, itype, iu, ldz, m, n
      double precision   abstol, vl, vu
      integer            ifail( * ), iwork( * )
      double precision   ap( * ), bp( * ), w( * ), work( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dspgvx", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_doubles(bp, pipe)
      call pipe_write_double(vl, pipe)
      call pipe_write_double(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_double(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_doubles(bp, pipe)
      call pipe_read_double(vl, pipe)
      call pipe_read_double(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_double(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpocon( uplo, n, a, lda, anorm, rcond, work, iwork,
     $                   info )
      character          uplo
      integer            info, lda, n
      double precision   anorm, rcond
      integer            iwork( * )
      double precision   a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpocon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_double(anorm, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_double(anorm, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsytrs( uplo, n, nrhs, a, lda, ipiv, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      double precision   a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsytrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zsysv( uplo, n, nrhs, a, lda, ipiv, b, ldb, work,
     $                  lwork, info )
      character          uplo
      integer            info, lda, ldb, lwork, n, nrhs
      integer            ipiv( * )
      complex*16         a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zsysv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgeequ( m, n, a, lda, r, c, rowcnd, colcnd, amax,
     $                   info )
      integer            info, lda, m, n
      double precision   amax, colcnd, rowcnd
      double precision   c( * ), r( * )
      complex*16         a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgeequ", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(r, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_double(rowcnd, pipe)
      call pipe_write_double(colcnd, pipe)
      call pipe_write_double(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(r, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_double(rowcnd, pipe)
      call pipe_read_double(colcnd, pipe)
      call pipe_read_double(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sggglm( n, m, p, a, lda, b, ldb, d, x, y, work, lwork,
     $                   info )
      integer            info, lda, ldb, lwork, m, n, p
      real               a( lda, * ), b( ldb, * ), d( * ), work( * ),
     $                   x( * ), y( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sggglm", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(p, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(x, pipe)
      call pipe_write_reals(y, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(p, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(x, pipe)
      call pipe_read_reals(y, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpftri( transr, uplo, n, a, info )
      character          transr, uplo
      integer            info, n
      complex*16         a( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpftri", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgebak( job, side, n, ilo, ihi, scale, m, v, ldv,
     $                   info )
      character          job, side
      integer            ihi, ilo, info, ldv, m, n
      double precision   scale( * )
      complex*16         v( ldv, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgebak", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_doubles(scale, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_complex16s(v, pipe)
      call pipe_write_integer(ldv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_doubles(scale, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_complex16s(v, pipe)
      call pipe_read_integer(ldv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctrsyl( trana, tranb, isgn, m, n, a, lda, b, ldb, c,
     $                   ldc, scale, info )
      character          trana, tranb
      integer            info, isgn, lda, ldb, ldc, m, n
      real               scale
      complex            a( lda, * ), b( ldb, * ), c( ldc, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctrsyl", pipe)
      call pipe_write_character(trana, pipe)
      call pipe_write_character(tranb, pipe)
      call pipe_write_integer(isgn, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_real(scale, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trana, pipe)
      call pipe_read_character(tranb, pipe)
      call pipe_read_integer(isgn, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_real(scale, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgelsd( m, n, nrhs, a, lda, b, ldb, s, rcond, rank,
     $                   work, lwork, rwork, iwork, info )
      integer            info, lda, ldb, lwork, m, n, nrhs, rank
      double precision   rcond
      integer            iwork( * )
      double precision   rwork( * ), s( * )
      complex*16         a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgelsd", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_integer(rank, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_integer(rank, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgelsy( m, n, nrhs, a, lda, b, ldb, jpvt, rcond, rank,
     $                   work, lwork, rwork, info )
      integer            info, lda, ldb, lwork, m, n, nrhs, rank
      real               rcond
      integer            jpvt( * )
      real               rwork( * )
      complex            a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgelsy", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integers(jpvt, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_integer(rank, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integers(jpvt, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_integer(rank, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgeevx( balanc, jobvl, jobvr, sense, n, a, lda, w, vl,
     $                   ldvl, vr, ldvr, ilo, ihi, scale, abnrm, rconde,
     $                   rcondv, work, lwork, rwork, info )
      implicit none
      character          balanc, jobvl, jobvr, sense
      integer            ihi, ilo, info, lda, ldvl, ldvr, lwork, n
      real               abnrm
      real               rconde( * ), rcondv( * ), rwork( * ),
     $                   scale( * )
      complex            a( lda, * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   w( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgeevx", pipe)
      call pipe_write_character(balanc, pipe)
      call pipe_write_character(jobvl, pipe)
      call pipe_write_character(jobvr, pipe)
      call pipe_write_character(sense, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(w, pipe)
      call pipe_write_complexs(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_complexs(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_reals(scale, pipe)
      call pipe_write_real(abnrm, pipe)
      call pipe_write_reals(rconde, pipe)
      call pipe_write_reals(rcondv, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(balanc, pipe)
      call pipe_read_character(jobvl, pipe)
      call pipe_read_character(jobvr, pipe)
      call pipe_read_character(sense, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(w, pipe)
      call pipe_read_complexs(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_complexs(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_reals(scale, pipe)
      call pipe_read_real(abnrm, pipe)
      call pipe_read_reals(rconde, pipe)
      call pipe_read_reals(rcondv, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgbrfs( trans, n, kl, ku, nrhs, ab, ldab, afb, ldafb,
     $                   ipiv, b, ldb, x, ldx, ferr, berr, work, rwork,
     $                   info )
      character          trans
      integer            info, kl, ku, ldab, ldafb, ldb, ldx, n, nrhs
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgbrfs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complex16s(afb, pipe)
      call pipe_write_integer(ldafb, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complex16s(afb, pipe)
      call pipe_read_integer(ldafb, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssbevx( jobz, range, uplo, n, kd, ab, ldab, q, ldq, vl,
     $                   vu, il, iu, abstol, m, w, z, ldz, work, iwork,
     $                   ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, kd, ldab, ldq, ldz, m, n
      real               abstol, vl, vu
      integer            ifail( * ), iwork( * )
      real               ab( ldab, * ), q( ldq, * ), w( * ), work( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssbevx", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_real(vl, pipe)
      call pipe_write_real(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_real(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_real(vl, pipe)
      call pipe_read_real(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_real(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgelsd( m, n, nrhs, a, lda, b, ldb, s, rcond, rank,
     $                   work, lwork, iwork, info )
      integer            info, lda, ldb, lwork, m, n, nrhs, rank
      double precision   rcond
      integer            iwork( * )
      double precision   a( lda, * ), b( ldb, * ), s( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgelsd", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_integer(rank, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_integer(rank, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dppsv( uplo, n, nrhs, ap, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      double precision   ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dppsv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctfttp( transr, uplo, n, arf, ap, info )
      character          transr, uplo
      integer            info, n
      complex            ap( 0: * ), arf( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctfttp", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(arf, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(arf, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zheequb( uplo, n, a, lda, s, scond, amax, work, info )
      integer            info, lda, n
      double precision   amax, scond
      character          uplo
      complex*16         a( lda, * ), work( * )
      double precision   s( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zheequb", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_double(scond, pipe)
      call pipe_write_double(amax, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_double(scond, pipe)
      call pipe_read_double(amax, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zspsv( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zspsv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sorgql( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      real               a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sorgql", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpptri( uplo, n, ap, info )
      character          uplo
      integer            info, n
      complex            ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpptri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgeqrfp( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      double precision   a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgeqrfp", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine stftri( transr, uplo, diag, n, a, info )
      character          transr, uplo, diag
      integer            info, n
      real               a( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("stftri", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sppequ( uplo, n, ap, s, scond, amax, info )
      character          uplo
      integer            info, n
      real               amax, scond
      real               ap( * ), s( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sppequ", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_real(scond, pipe)
      call pipe_write_real(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_real(scond, pipe)
      call pipe_read_real(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgeqlf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      complex*16         a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgeqlf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dggrqf( m, p, n, a, lda, taua, b, ldb, taub, work,
     $                   lwork, info )
      integer            info, lda, ldb, lwork, m, n, p
      double precision   a( lda, * ), b( ldb, * ), taua( * ), taub( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dggrqf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(p, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(taua, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(taub, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(p, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(taua, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(taub, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhbgvx( jobz, range, uplo, n, ka, kb, ab, ldab, bb,
     $                   ldbb, q, ldq, vl, vu, il, iu, abstol, m, w, z,
     $                   ldz, work, rwork, iwork, ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, ka, kb, ldab, ldbb, ldq, ldz, m,
     $                   n
      double precision   abstol, vl, vu
      integer            ifail( * ), iwork( * )
      double precision   rwork( * ), w( * )
      complex*16         ab( ldab, * ), bb( ldbb, * ), q( ldq, * ),
     $                   work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhbgvx", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ka, pipe)
      call pipe_write_integer(kb, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complex16s(bb, pipe)
      call pipe_write_integer(ldbb, pipe)
      call pipe_write_complex16s(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_double(vl, pipe)
      call pipe_write_double(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_double(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ka, pipe)
      call pipe_read_integer(kb, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complex16s(bb, pipe)
      call pipe_read_integer(ldbb, pipe)
      call pipe_read_complex16s(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_double(vl, pipe)
      call pipe_read_double(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_double(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dspgvd( itype, jobz, uplo, n, ap, bp, w, z, ldz, work,
     $                   lwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, itype, ldz, liwork, lwork, n
      integer            iwork( * )
      double precision   ap( * ), bp( * ), w( * ), work( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dspgvd", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_doubles(bp, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_doubles(bp, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpbrfs( uplo, n, kd, nrhs, ab, ldab, afb, ldafb, b,
     $                   ldb, x, ldx, ferr, berr, work, rwork, info )
      character          uplo
      integer            info, kd, ldab, ldafb, ldb, ldx, n, nrhs
      real               berr( * ), ferr( * ), rwork( * )
      complex            ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpbrfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complexs(afb, pipe)
      call pipe_write_integer(ldafb, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complexs(afb, pipe)
      call pipe_read_integer(ldafb, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chetrf( uplo, n, a, lda, ipiv, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      integer            ipiv( * )
      complex            a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chetrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dstein( n, d, e, m, w, iblock, isplit, z, ldz, work,
     $                   iwork, ifail, info )
      integer            info, ldz, m, n
      integer            iblock( * ), ifail( * ), isplit( * ),
     $                   iwork( * )
      double precision   d( * ), e( * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dstein", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_integers(iblock, pipe)
      call pipe_write_integers(isplit, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_integers(iblock, pipe)
      call pipe_read_integers(isplit, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zheevx( jobz, range, uplo, n, a, lda, vl, vu, il, iu,
     $                   abstol, m, w, z, ldz, work, lwork, rwork,
     $                   iwork, ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, lda, ldz, lwork, m, n
      double precision   abstol, vl, vu
      integer            ifail( * ), iwork( * )
      double precision   rwork( * ), w( * )
      complex*16         a( lda, * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zheevx", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_double(vl, pipe)
      call pipe_write_double(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_double(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_double(vl, pipe)
      call pipe_read_double(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_double(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dptrfs( n, nrhs, d, e, df, ef, b, ldb, x, ldx, ferr,
     $                   berr, work, info )
      integer            info, ldb, ldx, n, nrhs
      double precision   b( ldb, * ), berr( * ), d( * ), df( * ),
     $                   e( * ), ef( * ), ferr( * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dptrfs", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_doubles(df, pipe)
      call pipe_write_doubles(ef, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_doubles(df, pipe)
      call pipe_read_doubles(ef, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgelss( m, n, nrhs, a, lda, b, ldb, s, rcond, rank,
     $                   work, lwork, rwork, info )
      integer            info, lda, ldb, lwork, m, n, nrhs, rank
      real               rcond
      real               rwork( * ), s( * )
      complex            a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgelss", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_integer(rank, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_integer(rank, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtpttr( uplo, n, ap, a, lda, info )
      character          uplo
      integer            info, n, lda
      double precision   a( lda, * ), ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtpttr", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dormql( side, trans, m, n, k, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      double precision   a( lda, * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dormql", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dstedc( compz, n, d, e, z, ldz, work, lwork, iwork,
     $                   liwork, info )
      character          compz
      integer            info, ldz, liwork, lwork, n
      integer            iwork( * )
      double precision   d( * ), e( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dstedc", pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssytrd( uplo, n, a, lda, d, e, tau, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      real               a( lda, * ), d( * ), e( * ), tau( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssytrd", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhprfs( uplo, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx,
     $                   ferr, berr, work, rwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         afp( * ), ap( * ), b( ldb, * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhprfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_complex16s(afp, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_complex16s(afp, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgbtrf( m, n, kl, ku, ab, ldab, ipiv, info )
      integer            info, kl, ku, ldab, m, n
      integer            ipiv( * )
      double precision   ab( ldab, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgbtrf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpteqr( compz, n, d, e, z, ldz, work, info )
      character          compz
      integer            info, ldz, n
      double precision   d( * ), e( * ), work( * )
      complex*16         z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpteqr", pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsptrs( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      double precision   ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsptrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cposv( uplo, n, nrhs, a, lda, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      complex            a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cposv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sorgqr( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      real               a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sorgqr", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zsptri( uplo, n, ap, ipiv, work, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      complex*16         ap( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zsptri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sspev( jobz, uplo, n, ap, w, z, ldz, work, info )
      character          jobz, uplo
      integer            info, ldz, n
      real               ap( * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sspev", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cspsv( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      complex            ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cspsv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctfsm( transr, side, uplo, trans, diag, m, n, alpha, a,
     $                  b, ldb )
      character          transr, diag, side, trans, uplo
      integer            ldb, m, n
      complex            alpha
      complex            a( 0: * ), b( 0: ldb-1, 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctfsm", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex(alpha, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex(alpha, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_close(pipe)

      end

      subroutine zpotri( uplo, n, a, lda, info )
      character          uplo
      integer            info, lda, n
      complex*16         a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpotri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zungbr( vect, m, n, k, a, lda, tau, work, lwork, info )
      character          vect
      integer            info, k, lda, lwork, m, n
      complex*16         a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zungbr", pipe)
      call pipe_write_character(vect, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(vect, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zggbal( job, n, a, lda, b, ldb, ilo, ihi, lscale,
     $                   rscale, work, info )
      character          job
      integer            ihi, ilo, info, lda, ldb, n
      double precision   lscale( * ), rscale( * ), work( * )
      complex*16         a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zggbal", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_doubles(lscale, pipe)
      call pipe_write_doubles(rscale, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_doubles(lscale, pipe)
      call pipe_read_doubles(rscale, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssysv( uplo, n, nrhs, a, lda, ipiv, b, ldb, work,
     $                  lwork, info )
      character          uplo
      integer            info, lda, ldb, lwork, n, nrhs
      integer            ipiv( * )
      real               a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssysv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spbequ( uplo, n, kd, ab, ldab, s, scond, amax, info )
      character          uplo
      integer            info, kd, ldab, n
      real               amax, scond
      real               ab( ldab, * ), s( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spbequ", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_real(scond, pipe)
      call pipe_write_real(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_real(scond, pipe)
      call pipe_read_real(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpbcon( uplo, n, kd, ab, ldab, anorm, rcond, work,
     $                   iwork, info )
      character          uplo
      integer            info, kd, ldab, n
      double precision   anorm, rcond
      integer            iwork( * )
      double precision   ab( ldab, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpbcon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_double(anorm, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_double(anorm, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztrsen( job, compq, select, n, t, ldt, q, ldq, w, m, s,
     $                   sep, work, lwork, info )
      character          compq, job
      integer            info, ldq, ldt, lwork, m, n
      double precision   s, sep
      logical            select( * )
      complex*16         q( ldq, * ), t( ldt, * ), w( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztrsen", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(compq, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(t, pipe)
      call pipe_write_integer(ldt, pipe)
      call pipe_write_complex16s(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_complex16s(w, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_double(s, pipe)
      call pipe_write_double(sep, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(compq, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(t, pipe)
      call pipe_read_integer(ldt, pipe)
      call pipe_read_complex16s(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_complex16s(w, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_double(s, pipe)
      call pipe_read_double(sep, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgesdd( jobz, m, n, a, lda, s, u, ldu, vt, ldvt,
     $                   work, lwork, rwork, iwork, info )
      implicit none
      character          jobz
      integer            info, lda, ldu, ldvt, lwork, m, n
      integer            iwork( * )
      double precision   rwork( * ), s( * )
      complex*16         a( lda, * ), u( ldu, * ), vt( ldvt, * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgesdd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_complex16s(u, pipe)
      call pipe_write_integer(ldu, pipe)
      call pipe_write_complex16s(vt, pipe)
      call pipe_write_integer(ldvt, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_complex16s(u, pipe)
      call pipe_read_integer(ldu, pipe)
      call pipe_read_complex16s(vt, pipe)
      call pipe_read_integer(ldvt, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chpcon( uplo, n, ap, ipiv, anorm, rcond, work, info )
      character          uplo
      integer            info, n
      real               anorm, rcond
      integer            ipiv( * )
      complex            ap( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chpcon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_real(anorm, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_real(anorm, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgtcon( norm, n, dl, d, du, du2, ipiv, anorm, rcond,
     $                   work, iwork, info )
      character          norm
      integer            info, n
      real               anorm, rcond
      integer            ipiv( * ), iwork( * )
      real               d( * ), dl( * ), du( * ), du2( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgtcon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(dl, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(du, pipe)
      call pipe_write_reals(du2, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_real(anorm, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(dl, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(du, pipe)
      call pipe_read_reals(du2, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_real(anorm, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dspsv( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      double precision   ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dspsv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zunmhr( side, trans, m, n, ilo, ihi, a, lda, tau, c,
     $                   ldc, work, lwork, info )
      character          side, trans
      integer            ihi, ilo, info, lda, ldc, lwork, m, n
      complex*16         a( lda, * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zunmhr", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhptrd( uplo, n, ap, d, e, tau, info )
      character          uplo
      integer            info, n
      double precision   d( * ), e( * )
      complex*16         ap( * ), tau( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhptrd", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cggqrf( n, m, p, a, lda, taua, b, ldb, taub, work,
     $                   lwork, info )
      integer            info, lda, ldb, lwork, m, n, p
      complex            a( lda, * ), b( ldb, * ), taua( * ), taub( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cggqrf", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(p, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(taua, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(taub, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(p, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(taua, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(taub, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztfsm( transr, side, uplo, trans, diag, m, n, alpha, a,
     $                  b, ldb )
      character          transr, diag, side, trans, uplo
      integer            ldb, m, n
      complex*16         alpha
      complex*16         a( 0: * ), b( 0: ldb-1, 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztfsm", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16(alpha, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16(alpha, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_close(pipe)

      end

      subroutine zbdsqr( uplo, n, ncvt, nru, ncc, d, e, vt, ldvt, u,
     $                   ldu, c, ldc, rwork, info )
      character          uplo
      integer            info, ldc, ldu, ldvt, n, ncc, ncvt, nru
      double precision   d( * ), e( * ), rwork( * )
      complex*16         c( ldc, * ), u( ldu, * ), vt( ldvt, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zbdsqr", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ncvt, pipe)
      call pipe_write_integer(nru, pipe)
      call pipe_write_integer(ncc, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_complex16s(vt, pipe)
      call pipe_write_integer(ldvt, pipe)
      call pipe_write_complex16s(u, pipe)
      call pipe_write_integer(ldu, pipe)
      call pipe_write_complex16s(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ncvt, pipe)
      call pipe_read_integer(nru, pipe)
      call pipe_read_integer(ncc, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_complex16s(vt, pipe)
      call pipe_read_integer(ldvt, pipe)
      call pipe_read_complex16s(u, pipe)
      call pipe_read_integer(ldu, pipe)
      call pipe_read_complex16s(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cstein( n, d, e, m, w, iblock, isplit, z, ldz, work,
     $                   iwork, ifail, info )
      integer            info, ldz, m, n
      integer            iblock( * ), ifail( * ), isplit( * ),
     $                   iwork( * )
      real               d( * ), e( * ), w( * ), work( * )
      complex            z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cstein", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_integers(iblock, pipe)
      call pipe_write_integers(isplit, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_integers(iblock, pipe)
      call pipe_read_integers(isplit, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgbtrs( trans, n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb,
     $                   info )
      character          trans
      integer            info, kl, ku, ldab, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         ab( ldab, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgbtrs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpptri( uplo, n, ap, info )
      character          uplo
      integer            info, n
      complex*16         ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpptri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssptrf( uplo, n, ap, ipiv, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      real               ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssptrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpftrf( transr, uplo, n, a, info )
      character          transr, uplo
      integer            n, info
      double precision   a( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpftrf", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dorgbr( vect, m, n, k, a, lda, tau, work, lwork, info )
      character          vect
      integer            info, k, lda, lwork, m, n
      double precision   a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dorgbr", pipe)
      call pipe_write_character(vect, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(vect, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgesvj( joba, jobu, jobv, m, n, a, lda, sva, mv, v,
     $                   ldv, work, lwork, info )
      integer            info, lda, ldv, lwork, m, mv, n
      character*1        joba, jobu, jobv
      double precision   a( lda, * ), sva( n ), v( ldv, * ),
     $                   work( lwork )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgesvj", pipe)
      call pipe_write_character(joba, pipe)
      call pipe_write_character(jobu, pipe)
      call pipe_write_character(jobv, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(sva, pipe)
      call pipe_write_integer(mv, pipe)
      call pipe_write_doubles(v, pipe)
      call pipe_write_integer(ldv, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(joba, pipe)
      call pipe_read_character(jobu, pipe)
      call pipe_read_character(jobv, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(sva, pipe)
      call pipe_read_integer(mv, pipe)
      call pipe_read_doubles(v, pipe)
      call pipe_read_integer(ldv, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgerfs( trans, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb,
     $                   x, ldx, ferr, berr, work, rwork, info )
      character          trans
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            a( lda, * ), af( ldaf, * ), b( ldb, * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgerfs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(af, pipe)
      call pipe_write_integer(ldaf, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(af, pipe)
      call pipe_read_integer(ldaf, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cunmtr( side, uplo, trans, m, n, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans, uplo
      integer            info, lda, ldc, lwork, m, n
      complex            a( lda, * ), c( ldc, * ), tau( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cunmtr", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dorgtr( uplo, n, a, lda, tau, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      double precision   a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dorgtr", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssbgvd( jobz, uplo, n, ka, kb, ab, ldab, bb, ldbb, w,
     $                   z, ldz, work, lwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, ka, kb, ldab, ldbb, ldz, liwork, lwork, n
      integer            iwork( * )
      real               ab( ldab, * ), bb( ldbb, * ), w( * ),
     $                   work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssbgvd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ka, pipe)
      call pipe_write_integer(kb, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(bb, pipe)
      call pipe_write_integer(ldbb, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ka, pipe)
      call pipe_read_integer(kb, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(bb, pipe)
      call pipe_read_integer(ldbb, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zstegr( jobz, range, n, d, e, vl, vu, il, iu,
     $           abstol, m, w, z, ldz, isuppz, work, lwork, iwork,
     $           liwork, info )
      character          jobz, range
      integer            il, info, iu, ldz, liwork, lwork, m, n
      double precision abstol, vl, vu
      integer            isuppz( * ), iwork( * )
      double precision   d( * ), e( * ), w( * ), work( * )
      complex*16         z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zstegr", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_double(vl, pipe)
      call pipe_write_double(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_double(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integers(isuppz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_double(vl, pipe)
      call pipe_read_double(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_double(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integers(isuppz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dggev( jobvl, jobvr, n, a, lda, b, ldb, alphar, alphai,
     $                  beta, vl, ldvl, vr, ldvr, work, lwork, info )
      character          jobvl, jobvr
      integer            info, lda, ldb, ldvl, ldvr, lwork, n
      double precision   a( lda, * ), alphai( * ), alphar( * ),
     $                   b( ldb, * ), beta( * ), vl( ldvl, * ),
     $                   vr( ldvr, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dggev", pipe)
      call pipe_write_character(jobvl, pipe)
      call pipe_write_character(jobvr, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(alphar, pipe)
      call pipe_write_doubles(alphai, pipe)
      call pipe_write_doubles(beta, pipe)
      call pipe_write_doubles(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_doubles(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobvl, pipe)
      call pipe_read_character(jobvr, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(alphar, pipe)
      call pipe_read_doubles(alphai, pipe)
      call pipe_read_doubles(beta, pipe)
      call pipe_read_doubles(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_doubles(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cggbak( job, side, n, ilo, ihi, lscale, rscale, m, v,
     $                   ldv, info )
      character          job, side
      integer            ihi, ilo, info, ldv, m, n
      real               lscale( * ), rscale( * )
      complex            v( ldv, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cggbak", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_reals(lscale, pipe)
      call pipe_write_reals(rscale, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_complexs(v, pipe)
      call pipe_write_integer(ldv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_reals(lscale, pipe)
      call pipe_read_reals(rscale, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_complexs(v, pipe)
      call pipe_read_integer(ldv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dporfs( uplo, n, nrhs, a, lda, af, ldaf, b, ldb, x,
     $                   ldx, ferr, berr, work, iwork, info )
      character          uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            iwork( * )
      double precision   a( lda, * ), af( ldaf, * ), b( ldb, * ),
     $                   berr( * ), ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dporfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(af, pipe)
      call pipe_write_integer(ldaf, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(af, pipe)
      call pipe_read_integer(ldaf, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgelqf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      complex            a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgelqf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhseqr( job, compz, n, ilo, ihi, h, ldh, w, z, ldz,
     $                   work, lwork, info )
      integer            ihi, ilo, info, ldh, ldz, lwork, n
      character          compz, job
      complex*16         h( ldh, * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhseqr", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_complex16s(h, pipe)
      call pipe_write_integer(ldh, pipe)
      call pipe_write_complex16s(w, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_complex16s(h, pipe)
      call pipe_read_integer(ldh, pipe)
      call pipe_read_complex16s(w, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgtcon( norm, n, dl, d, du, du2, ipiv, anorm, rcond,
     $                   work, iwork, info )
      character          norm
      integer            info, n
      double precision   anorm, rcond
      integer            ipiv( * ), iwork( * )
      double precision   d( * ), dl( * ), du( * ), du2( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgtcon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(dl, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(du, pipe)
      call pipe_write_doubles(du2, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_double(anorm, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(dl, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(du, pipe)
      call pipe_read_doubles(du2, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_double(anorm, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssyrfs( uplo, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb,
     $                   x, ldx, ferr, berr, work, iwork, info )
      character          uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            ipiv( * ), iwork( * )
      real               a( lda, * ), af( ldaf, * ), b( ldb, * ),
     $                   berr( * ), ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssyrfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(af, pipe)
      call pipe_write_integer(ldaf, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(af, pipe)
      call pipe_read_integer(ldaf, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cunmbr( vect, side, trans, m, n, k, a, lda, tau, c,
     $                   ldc, work, lwork, info )
      character          side, trans, vect
      integer            info, k, lda, ldc, lwork, m, n
      complex            a( lda, * ), c( ldc, * ), tau( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cunmbr", pipe)
      call pipe_write_character(vect, pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(vect, pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zunmlq( side, trans, m, n, k, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      complex*16         a( lda, * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zunmlq", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgeequb( m, n, a, lda, r, c, rowcnd, colcnd, amax,
     $                    info )
      integer            info, lda, m, n
      double precision   amax, colcnd, rowcnd
      double precision   c( * ), r( * )
      complex*16         a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgeequb", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(r, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_double(rowcnd, pipe)
      call pipe_write_double(colcnd, pipe)
      call pipe_write_double(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(r, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_double(rowcnd, pipe)
      call pipe_read_double(colcnd, pipe)
      call pipe_read_double(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sspsv( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      real               ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sspsv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgeqlf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      double precision   a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgeqlf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgbcon( norm, n, kl, ku, ab, ldab, ipiv, anorm, rcond,
     $                   work, rwork, info )
      character          norm
      integer            info, kl, ku, ldab, n
      real               anorm, rcond
      integer            ipiv( * )
      real               rwork( * )
      complex            ab( ldab, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgbcon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_real(anorm, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_real(anorm, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpstrf( uplo, n, a, lda, piv, rank, tol, work, info )
      real               tol
      integer            info, lda, n, rank
      character          uplo
      complex            a( lda, * )
      real               work( 2*n )
      integer            piv( n )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpstrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(piv, pipe)
      call pipe_write_integer(rank, pipe)
      call pipe_write_real(tol, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(piv, pipe)
      call pipe_read_integer(rank, pipe)
      call pipe_read_real(tol, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgerqf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      double precision   a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgerqf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine stfttp( transr, uplo, n, arf, ap, info )
      character          transr, uplo
      integer            info, n
      real               ap( 0: * ), arf( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("stfttp", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(arf, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(arf, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgbbrd( vect, m, n, ncc, kl, ku, ab, ldab, d, e, q,
     $                   ldq, pt, ldpt, c, ldc, work, info )
      character          vect
      integer            info, kl, ku, ldab, ldc, ldpt, ldq, m, n, ncc
      real               ab( ldab, * ), c( ldc, * ), d( * ), e( * ),
     $                   pt( ldpt, * ), q( ldq, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgbbrd", pipe)
      call pipe_write_character(vect, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ncc, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_reals(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_reals(pt, pipe)
      call pipe_write_integer(ldpt, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(vect, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ncc, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_reals(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_reals(pt, pipe)
      call pipe_read_integer(ldpt, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgbrfs( trans, n, kl, ku, nrhs, ab, ldab, afb, ldafb,
     $                   ipiv, b, ldb, x, ldx, ferr, berr, work, iwork,
     $                   info )
      character          trans
      integer            info, kl, ku, ldab, ldafb, ldb, ldx, n, nrhs
      integer            ipiv( * ), iwork( * )
      double precision   ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),
     $                   berr( * ), ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgbrfs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(afb, pipe)
      call pipe_write_integer(ldafb, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(afb, pipe)
      call pipe_read_integer(ldafb, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtzrzf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      double precision   a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtzrzf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhpsv( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhpsv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zggglm( n, m, p, a, lda, b, ldb, d, x, y, work, lwork,
     $                   info )
      integer            info, lda, ldb, lwork, m, n, p
      complex*16         a( lda, * ), b( ldb, * ), d( * ), work( * ),
     $                   x( * ), y( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zggglm", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(p, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(d, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_complex16s(y, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(p, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(d, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_complex16s(y, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgglse( m, n, p, a, lda, b, ldb, c, d, x, work, lwork,
     $                   info )
      integer            info, lda, ldb, lwork, m, n, p
      complex*16         a( lda, * ), b( ldb, * ), c( * ), d( * ),
     $                   work( * ), x( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgglse", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(p, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(c, pipe)
      call pipe_write_complex16s(d, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(p, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(c, pipe)
      call pipe_read_complex16s(d, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spotrf( uplo, n, a, lda, info )
      character          uplo
      integer            info, lda, n
      real               a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spotrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhpgst( itype, uplo, n, ap, bp, info )
      character          uplo
      integer            info, itype, n
      complex*16         ap( * ), bp( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhpgst", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_complex16s(bp, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_complex16s(bp, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cporfs( uplo, n, nrhs, a, lda, af, ldaf, b, ldb, x,
     $                   ldx, ferr, berr, work, rwork, info )
      character          uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      real               berr( * ), ferr( * ), rwork( * )
      complex            a( lda, * ), af( ldaf, * ), b( ldb, * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cporfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(af, pipe)
      call pipe_write_integer(ldaf, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(af, pipe)
      call pipe_read_integer(ldaf, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsptrd( uplo, n, ap, d, e, tau, info )
      character          uplo
      integer            info, n
      double precision   ap( * ), d( * ), e( * ), tau( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsptrd", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpftrf( transr, uplo, n, a, info )
      character          transr, uplo
      integer            n, info
      complex*16         a( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpftrf", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dormlq( side, trans, m, n, k, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      double precision   a( lda, * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dormlq", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cspsvx( fact, uplo, n, nrhs, ap, afp, ipiv, b, ldb, x,
     $                   ldx, rcond, ferr, berr, work, rwork, info )
      character          fact, uplo
      integer            info, ldb, ldx, n, nrhs
      real               rcond
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            afp( * ), ap( * ), b( ldb, * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cspsvx", pipe)
      call pipe_write_character(fact, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_complexs(afp, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(fact, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_complexs(afp, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zsytri( uplo, n, a, lda, ipiv, work, info )
      character          uplo
      integer            info, lda, n
      integer            ipiv( * )
      complex*16         a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zsytri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztrttf( transr, uplo, n, a, lda, arf, info )
      character          transr, uplo
      integer            info, n, lda
      complex*16         a( 0: lda-1, 0: * ), arf( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztrttf", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(arf, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(arf, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgbbrd( vect, m, n, ncc, kl, ku, ab, ldab, d, e, q,
     $                   ldq, pt, ldpt, c, ldc, work, info )
      character          vect
      integer            info, kl, ku, ldab, ldc, ldpt, ldq, m, n, ncc
      double precision   ab( ldab, * ), c( ldc, * ), d( * ), e( * ),
     $                   pt( ldpt, * ), q( ldq, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgbbrd", pipe)
      call pipe_write_character(vect, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ncc, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_doubles(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_doubles(pt, pipe)
      call pipe_write_integer(ldpt, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(vect, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ncc, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_doubles(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_doubles(pt, pipe)
      call pipe_read_integer(ldpt, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zungrq( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      complex*16         a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zungrq", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgetrs( trans, n, nrhs, a, lda, ipiv, b, ldb, info )
      character          trans
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      real               a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgetrs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpbequ( uplo, n, kd, ab, ldab, s, scond, amax, info )
      character          uplo
      integer            info, kd, ldab, n
      real               amax, scond
      real               s( * )
      complex            ab( ldab, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpbequ", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_real(scond, pipe)
      call pipe_write_real(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_real(scond, pipe)
      call pipe_read_real(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine strexc( compq, n, t, ldt, q, ldq, ifst, ilst, work,
     $                   info )
      character          compq
      integer            ifst, ilst, info, ldq, ldt, n
      real               q( ldq, * ), t( ldt, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("strexc", pipe)
      call pipe_write_character(compq, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(t, pipe)
      call pipe_write_integer(ldt, pipe)
      call pipe_write_reals(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_integer(ifst, pipe)
      call pipe_write_integer(ilst, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(compq, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(t, pipe)
      call pipe_read_integer(ldt, pipe)
      call pipe_read_reals(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_integer(ifst, pipe)
      call pipe_read_integer(ilst, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgejsv( joba, jobu, jobv, jobr, jobt, jobp,
     $                   m, n, a, lda, sva, u, ldu, v, ldv,
     $                   work, lwork, iwork, info )
      implicit    none
      integer     info, lda, ldu, ldv, lwork, m, n
      real        a( lda, * ), sva( n ), u( ldu, * ), v( ldv, * ),
     $            work( lwork )
      integer     iwork( * )
      character*1 joba, jobp, jobr, jobt, jobu, jobv
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgejsv", pipe)
      call pipe_write_character(joba, pipe)
      call pipe_write_character(jobu, pipe)
      call pipe_write_character(jobv, pipe)
      call pipe_write_character(jobr, pipe)
      call pipe_write_character(jobt, pipe)
      call pipe_write_character(jobp, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(sva, pipe)
      call pipe_write_reals(u, pipe)
      call pipe_write_integer(ldu, pipe)
      call pipe_write_reals(v, pipe)
      call pipe_write_integer(ldv, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(joba, pipe)
      call pipe_read_character(jobu, pipe)
      call pipe_read_character(jobv, pipe)
      call pipe_read_character(jobr, pipe)
      call pipe_read_character(jobt, pipe)
      call pipe_read_character(jobp, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(sva, pipe)
      call pipe_read_reals(u, pipe)
      call pipe_read_integer(ldu, pipe)
      call pipe_read_reals(v, pipe)
      call pipe_read_integer(ldv, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctgsyl( trans, ijob, m, n, a, lda, b, ldb, c, ldc, d,
     $                   ldd, e, lde, f, ldf, scale, dif, work, lwork,
     $                   iwork, info )
      character          trans
      integer            ijob, info, lda, ldb, ldc, ldd, lde, ldf,
     $                   lwork, m, n
      real               dif, scale
      integer            iwork( * )
      complex            a( lda, * ), b( ldb, * ), c( ldc, * ),
     $                   d( ldd, * ), e( lde, * ), f( ldf, * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctgsyl", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(ijob, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complexs(d, pipe)
      call pipe_write_integer(ldd, pipe)
      call pipe_write_complexs(e, pipe)
      call pipe_write_integer(lde, pipe)
      call pipe_write_complexs(f, pipe)
      call pipe_write_integer(ldf, pipe)
      call pipe_write_real(scale, pipe)
      call pipe_write_real(dif, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(ijob, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complexs(d, pipe)
      call pipe_read_integer(ldd, pipe)
      call pipe_read_complexs(e, pipe)
      call pipe_read_integer(lde, pipe)
      call pipe_read_complexs(f, pipe)
      call pipe_read_integer(ldf, pipe)
      call pipe_read_real(scale, pipe)
      call pipe_read_real(dif, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zppcon( uplo, n, ap, anorm, rcond, work, rwork, info )
      character          uplo
      integer            info, n
      double precision   anorm, rcond
      double precision   rwork( * )
      complex*16         ap( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zppcon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_double(anorm, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_double(anorm, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgecon( norm, n, a, lda, anorm, rcond, work, iwork,
     $                   info )
      character          norm
      integer            info, lda, n
      double precision   anorm, rcond
      integer            iwork( * )
      double precision   a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgecon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_double(anorm, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_double(anorm, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgetri( n, a, lda, ipiv, work, lwork, info )
      integer            info, lda, lwork, n
      integer            ipiv( * )
      complex*16         a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgetri", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgeev( jobvl, jobvr, n, a, lda, wr, wi, vl, ldvl, vr,
     $                  ldvr, work, lwork, info )
      implicit none
      character          jobvl, jobvr
      integer            info, lda, ldvl, ldvr, lwork, n
      double precision   a( lda, * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   wi( * ), work( * ), wr( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgeev", pipe)
      call pipe_write_character(jobvl, pipe)
      call pipe_write_character(jobvr, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(wr, pipe)
      call pipe_write_doubles(wi, pipe)
      call pipe_write_doubles(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_doubles(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobvl, pipe)
      call pipe_read_character(jobvr, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(wr, pipe)
      call pipe_read_doubles(wi, pipe)
      call pipe_read_doubles(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_doubles(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sopgtr( uplo, n, ap, tau, q, ldq, work, info )
      character          uplo
      integer            info, ldq, n
      real               ap( * ), q( ldq, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sopgtr", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtgevc( side, howmny, select, n, s, lds, p, ldp, vl,
     $                   ldvl, vr, ldvr, mm, m, work, info )
      character          howmny, side
      integer            info, ldp, lds, ldvl, ldvr, m, mm, n
      logical            select( * )
      double precision   p( ldp, * ), s( lds, * ), vl( ldvl, * ),
     $                   vr( ldvr, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtgevc", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(howmny, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_integer(lds, pipe)
      call pipe_write_doubles(p, pipe)
      call pipe_write_integer(ldp, pipe)
      call pipe_write_doubles(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_doubles(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_integer(mm, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(howmny, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_integer(lds, pipe)
      call pipe_read_doubles(p, pipe)
      call pipe_read_integer(ldp, pipe)
      call pipe_read_doubles(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_doubles(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_integer(mm, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgetri( n, a, lda, ipiv, work, lwork, info )
      integer            info, lda, lwork, n
      integer            ipiv( * )
      complex            a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgetri", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chegst( itype, uplo, n, a, lda, b, ldb, info )
      character          uplo
      integer            info, itype, lda, ldb, n
      complex            a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chegst", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpprfs( uplo, n, nrhs, ap, afp, b, ldb, x, ldx, ferr,
     $                   berr, work, rwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         afp( * ), ap( * ), b( ldb, * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpprfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_complex16s(afp, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_complex16s(afp, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctbrfs( uplo, trans, diag, n, kd, nrhs, ab, ldab, b,
     $                   ldb, x, ldx, ferr, berr, work, rwork, info )
      character          diag, trans, uplo
      integer            info, kd, ldab, ldb, ldx, n, nrhs
      real               berr( * ), ferr( * ), rwork( * )
      complex            ab( ldab, * ), b( ldb, * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctbrfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chgeqz( job, compq, compz, n, ilo, ihi, h, ldh, t, ldt,
     $                   alpha, beta, q, ldq, z, ldz, work, lwork,
     $                   rwork, info )
      character          compq, compz, job
      integer            ihi, ilo, info, ldh, ldq, ldt, ldz, lwork, n
      real               rwork( * )
      complex            alpha( * ), beta( * ), h( ldh, * ),
     $                   q( ldq, * ), t( ldt, * ), work( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chgeqz", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(compq, pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_complexs(h, pipe)
      call pipe_write_integer(ldh, pipe)
      call pipe_write_complexs(t, pipe)
      call pipe_write_integer(ldt, pipe)
      call pipe_write_complexs(alpha, pipe)
      call pipe_write_complexs(beta, pipe)
      call pipe_write_complexs(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(compq, pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_complexs(h, pipe)
      call pipe_read_integer(ldh, pipe)
      call pipe_read_complexs(t, pipe)
      call pipe_read_integer(ldt, pipe)
      call pipe_read_complexs(alpha, pipe)
      call pipe_read_complexs(beta, pipe)
      call pipe_read_complexs(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dptcon( n, d, e, anorm, rcond, work, info )
      integer            info, n
      double precision   anorm, rcond
      double precision   d( * ), e( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dptcon", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_double(anorm, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_double(anorm, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spttrf( n, d, e, info )
      integer            info, n
      real               d( * ), e( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spttrf", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsysv( uplo, n, nrhs, a, lda, ipiv, b, ldb, work,
     $                  lwork, info )
      character          uplo
      integer            info, lda, ldb, lwork, n, nrhs
      integer            ipiv( * )
      double precision   a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsysv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cungqr( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      complex            a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cungqr", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgesv( n, nrhs, a, lda, ipiv, b, ldb, info )
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgesv", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhesvx( fact, uplo, n, nrhs, a, lda, af, ldaf, ipiv, b,
     $                   ldb, x, ldx, rcond, ferr, berr, work, lwork,
     $                   rwork, info )
      character          fact, uplo
      integer            info, lda, ldaf, ldb, ldx, lwork, n, nrhs
      double precision   rcond
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         a( lda, * ), af( ldaf, * ), b( ldb, * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhesvx", pipe)
      call pipe_write_character(fact, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(af, pipe)
      call pipe_write_integer(ldaf, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(fact, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(af, pipe)
      call pipe_read_integer(ldaf, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zppequ( uplo, n, ap, s, scond, amax, info )
      character          uplo
      integer            info, n
      double precision   amax, scond
      double precision   s( * )
      complex*16         ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zppequ", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_double(scond, pipe)
      call pipe_write_double(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_double(scond, pipe)
      call pipe_read_double(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsbgst( vect, uplo, n, ka, kb, ab, ldab, bb, ldbb, x,
     $                   ldx, work, info )
      character          uplo, vect
      integer            info, ka, kb, ldab, ldbb, ldx, n
      double precision   ab( ldab, * ), bb( ldbb, * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsbgst", pipe)
      call pipe_write_character(vect, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ka, pipe)
      call pipe_write_integer(kb, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(bb, pipe)
      call pipe_write_integer(ldbb, pipe)
      call pipe_write_doubles(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(vect, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ka, pipe)
      call pipe_read_integer(kb, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(bb, pipe)
      call pipe_read_integer(ldbb, pipe)
      call pipe_read_doubles(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpttrf( n, d, e, info )
      integer            info, n
      double precision   d( * )
      complex*16         e( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpttrf", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_complex16s(e, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_complex16s(e, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgebal( job, n, a, lda, ilo, ihi, scale, info )
      character          job
      integer            ihi, ilo, info, lda, n
      double precision   a( lda, * ), scale( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgebal", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_doubles(scale, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_doubles(scale, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsprfs( uplo, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx,
     $                   ferr, berr, work, iwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      integer            ipiv( * ), iwork( * )
      double precision   afp( * ), ap( * ), b( ldb, * ), berr( * ),
     $                   ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsprfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_doubles(afp, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_doubles(afp, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgbsv( n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb, info )
      integer            info, kl, ku, ldab, ldb, n, nrhs
      integer            ipiv( * )
      double precision   ab( ldab, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgbsv", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dspevd( jobz, uplo, n, ap, w, z, ldz, work, lwork,
     $                   iwork, liwork, info )
      character          jobz, uplo
      integer            info, ldz, liwork, lwork, n
      integer            iwork( * )
      double precision   ap( * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dspevd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgesvd( jobu, jobvt, m, n, a, lda, s, u, ldu,
     $                   vt, ldvt, work, lwork, rwork, info )
      character          jobu, jobvt
      integer            info, lda, ldu, ldvt, lwork, m, n
      double precision   rwork( * ), s( * )
      complex*16         a( lda, * ), u( ldu, * ), vt( ldvt, * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgesvd", pipe)
      call pipe_write_character(jobu, pipe)
      call pipe_write_character(jobvt, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_complex16s(u, pipe)
      call pipe_write_integer(ldu, pipe)
      call pipe_write_complex16s(vt, pipe)
      call pipe_write_integer(ldvt, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobu, pipe)
      call pipe_read_character(jobvt, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_complex16s(u, pipe)
      call pipe_read_integer(ldu, pipe)
      call pipe_read_complex16s(vt, pipe)
      call pipe_read_integer(ldvt, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssptrs( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      real               ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssptrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsterf( n, d, e, info )
      integer            info, n
      double precision   d( * ), e( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsterf", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dstebz( range, order, n, vl, vu, il, iu, abstol, d, e,
     $                   m, nsplit, w, iblock, isplit, work, iwork,
     $                   info )
      character          order, range
      integer            il, info, iu, m, n, nsplit
      double precision   abstol, vl, vu
      integer            iblock( * ), isplit( * ), iwork( * )
      double precision   d( * ), e( * ), w( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dstebz", pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(order, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_double(vl, pipe)
      call pipe_write_double(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_double(abstol, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(nsplit, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_integers(iblock, pipe)
      call pipe_write_integers(isplit, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(order, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_double(vl, pipe)
      call pipe_read_double(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_double(abstol, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(nsplit, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_integers(iblock, pipe)
      call pipe_read_integers(isplit, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spotri( uplo, n, a, lda, info )
      character          uplo
      integer            info, lda, n
      real               a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spotri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgelss( m, n, nrhs, a, lda, b, ldb, s, rcond, rank,
     $                   work, lwork, rwork, info )
      integer            info, lda, ldb, lwork, m, n, nrhs, rank
      double precision   rcond
      double precision   rwork( * ), s( * )
      complex*16         a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgelss", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_integer(rank, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_integer(rank, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhpevx( jobz, range, uplo, n, ap, vl, vu, il, iu,
     $                   abstol, m, w, z, ldz, work, rwork, iwork,
     $                   ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, ldz, m, n
      double precision   abstol, vl, vu
      integer            ifail( * ), iwork( * )
      double precision   rwork( * ), w( * )
      complex*16         ap( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhpevx", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_double(vl, pipe)
      call pipe_write_double(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_double(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_double(vl, pipe)
      call pipe_read_double(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_double(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtgsen( ijob, wantq, wantz, select, n, a, lda, b, ldb,
     $                   alphar, alphai, beta, q, ldq, z, ldz, m, pl,
     $                   pr, dif, work, lwork, iwork, liwork, info )
      logical            wantq, wantz
      integer            ijob, info, lda, ldb, ldq, ldz, liwork, lwork,
     $                   m, n
      double precision   pl, pr
      logical            select( * )
      integer            iwork( * )
      double precision   a( lda, * ), alphai( * ), alphar( * ),
     $                   b( ldb, * ), beta( * ), dif( * ), q( ldq, * ),
     $                   work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtgsen", pipe)
      call pipe_write_integer(ijob, pipe)
      call pipe_write_logic(wantq, pipe)
      call pipe_write_logic(wantz, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(alphar, pipe)
      call pipe_write_doubles(alphai, pipe)
      call pipe_write_doubles(beta, pipe)
      call pipe_write_doubles(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_double(pl, pipe)
      call pipe_write_double(pr, pipe)
      call pipe_write_doubles(dif, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(ijob, pipe)
      call pipe_read_logic(wantq, pipe)
      call pipe_read_logic(wantz, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(alphar, pipe)
      call pipe_read_doubles(alphai, pipe)
      call pipe_read_doubles(beta, pipe)
      call pipe_read_doubles(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_double(pl, pipe)
      call pipe_read_double(pr, pipe)
      call pipe_read_doubles(dif, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zggbak( job, side, n, ilo, ihi, lscale, rscale, m, v,
     $                   ldv, info )
      character          job, side
      integer            ihi, ilo, info, ldv, m, n
      double precision   lscale( * ), rscale( * )
      complex*16         v( ldv, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zggbak", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_doubles(lscale, pipe)
      call pipe_write_doubles(rscale, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_complex16s(v, pipe)
      call pipe_write_integer(ldv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_doubles(lscale, pipe)
      call pipe_read_doubles(rscale, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_complex16s(v, pipe)
      call pipe_read_integer(ldv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cbdsqr( uplo, n, ncvt, nru, ncc, d, e, vt, ldvt, u,
     $                   ldu, c, ldc, rwork, info )
      character          uplo
      integer            info, ldc, ldu, ldvt, n, ncc, ncvt, nru
      real               d( * ), e( * ), rwork( * )
      complex            c( ldc, * ), u( ldu, * ), vt( ldvt, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cbdsqr", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ncvt, pipe)
      call pipe_write_integer(nru, pipe)
      call pipe_write_integer(ncc, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_complexs(vt, pipe)
      call pipe_write_integer(ldvt, pipe)
      call pipe_write_complexs(u, pipe)
      call pipe_write_integer(ldu, pipe)
      call pipe_write_complexs(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ncvt, pipe)
      call pipe_read_integer(nru, pipe)
      call pipe_read_integer(ncc, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_complexs(vt, pipe)
      call pipe_read_integer(ldvt, pipe)
      call pipe_read_complexs(u, pipe)
      call pipe_read_integer(ldu, pipe)
      call pipe_read_complexs(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpbtrf( uplo, n, kd, ab, ldab, info )
      character          uplo
      integer            info, kd, ldab, n
      complex            ab( ldab, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpbtrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sggev( jobvl, jobvr, n, a, lda, b, ldb, alphar, alphai,
     $                  beta, vl, ldvl, vr, ldvr, work, lwork, info )
      character          jobvl, jobvr
      integer            info, lda, ldb, ldvl, ldvr, lwork, n
      real               a( lda, * ), alphai( * ), alphar( * ),
     $                   b( ldb, * ), beta( * ), vl( ldvl, * ),
     $                   vr( ldvr, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sggev", pipe)
      call pipe_write_character(jobvl, pipe)
      call pipe_write_character(jobvr, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(alphar, pipe)
      call pipe_write_reals(alphai, pipe)
      call pipe_write_reals(beta, pipe)
      call pipe_write_reals(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_reals(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobvl, pipe)
      call pipe_read_character(jobvr, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(alphar, pipe)
      call pipe_read_reals(alphai, pipe)
      call pipe_read_reals(beta, pipe)
      call pipe_read_reals(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_reals(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtgsyl( trans, ijob, m, n, a, lda, b, ldb, c, ldc, d,
     $                   ldd, e, lde, f, ldf, scale, dif, work, lwork,
     $                   iwork, info )
      character          trans
      integer            ijob, info, lda, ldb, ldc, ldd, lde, ldf,
     $                   lwork, m, n
      double precision   dif, scale
      integer            iwork( * )
      double precision   a( lda, * ), b( ldb, * ), c( ldc, * ),
     $                   d( ldd, * ), e( lde, * ), f( ldf, * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtgsyl", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(ijob, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_integer(ldd, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_integer(lde, pipe)
      call pipe_write_doubles(f, pipe)
      call pipe_write_integer(ldf, pipe)
      call pipe_write_double(scale, pipe)
      call pipe_write_double(dif, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(ijob, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_integer(ldd, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_integer(lde, pipe)
      call pipe_read_doubles(f, pipe)
      call pipe_read_integer(ldf, pipe)
      call pipe_read_double(scale, pipe)
      call pipe_read_double(dif, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cungql( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      complex            a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cungql", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cungrq( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      complex            a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cungrq", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zptsvx( fact, n, nrhs, d, e, df, ef, b, ldb, x, ldx,
     $                   rcond, ferr, berr, work, rwork, info )
      character          fact
      integer            info, ldb, ldx, n, nrhs
      double precision   rcond
      double precision   berr( * ), d( * ), df( * ), ferr( * ),
     $                   rwork( * )
      complex*16         b( ldb, * ), e( * ), ef( * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zptsvx", pipe)
      call pipe_write_character(fact, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_complex16s(e, pipe)
      call pipe_write_doubles(df, pipe)
      call pipe_write_complex16s(ef, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(fact, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_complex16s(e, pipe)
      call pipe_read_doubles(df, pipe)
      call pipe_read_complex16s(ef, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgeevx( balanc, jobvl, jobvr, sense, n, a, lda, wr, wi,
     $                   vl, ldvl, vr, ldvr, ilo, ihi, scale, abnrm,
     $                   rconde, rcondv, work, lwork, iwork, info )
      implicit none
      character          balanc, jobvl, jobvr, sense
      integer            ihi, ilo, info, lda, ldvl, ldvr, lwork, n
      real               abnrm
      integer            iwork( * )
      real               a( lda, * ), rconde( * ), rcondv( * ),
     $                   scale( * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   wi( * ), work( * ), wr( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgeevx", pipe)
      call pipe_write_character(balanc, pipe)
      call pipe_write_character(jobvl, pipe)
      call pipe_write_character(jobvr, pipe)
      call pipe_write_character(sense, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(wr, pipe)
      call pipe_write_reals(wi, pipe)
      call pipe_write_reals(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_reals(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_reals(scale, pipe)
      call pipe_write_real(abnrm, pipe)
      call pipe_write_reals(rconde, pipe)
      call pipe_write_reals(rcondv, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(balanc, pipe)
      call pipe_read_character(jobvl, pipe)
      call pipe_read_character(jobvr, pipe)
      call pipe_read_character(sense, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(wr, pipe)
      call pipe_read_reals(wi, pipe)
      call pipe_read_reals(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_reals(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_reals(scale, pipe)
      call pipe_read_real(abnrm, pipe)
      call pipe_read_reals(rconde, pipe)
      call pipe_read_reals(rcondv, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsygv( itype, jobz, uplo, n, a, lda, b, ldb, w, work,
     $                  lwork, info )
      character          jobz, uplo
      integer            info, itype, lda, ldb, lwork, n
      double precision   a( lda, * ), b( ldb, * ), w( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsygv", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhgeqz( job, compq, compz, n, ilo, ihi, h, ldh, t, ldt,
     $                   alpha, beta, q, ldq, z, ldz, work, lwork,
     $                   rwork, info )
      character          compq, compz, job
      integer            ihi, ilo, info, ldh, ldq, ldt, ldz, lwork, n
      double precision   rwork( * )
      complex*16         alpha( * ), beta( * ), h( ldh, * ),
     $                   q( ldq, * ), t( ldt, * ), work( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhgeqz", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(compq, pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_complex16s(h, pipe)
      call pipe_write_integer(ldh, pipe)
      call pipe_write_complex16s(t, pipe)
      call pipe_write_integer(ldt, pipe)
      call pipe_write_complex16s(alpha, pipe)
      call pipe_write_complex16s(beta, pipe)
      call pipe_write_complex16s(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(compq, pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_complex16s(h, pipe)
      call pipe_read_integer(ldh, pipe)
      call pipe_read_complex16s(t, pipe)
      call pipe_read_integer(ldt, pipe)
      call pipe_read_complex16s(alpha, pipe)
      call pipe_read_complex16s(beta, pipe)
      call pipe_read_complex16s(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sormbr( vect, side, trans, m, n, k, a, lda, tau, c,
     $                   ldc, work, lwork, info )
      character          side, trans, vect
      integer            info, k, lda, ldc, lwork, m, n
      real               a( lda, * ), c( ldc, * ), tau( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sormbr", pipe)
      call pipe_write_character(vect, pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(tau, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(vect, pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(tau, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtpttf( transr, uplo, n, ap, arf, info )
      character          transr, uplo
      integer            info, n
      double precision   ap( 0: * ), arf( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtpttf", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_doubles(arf, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_doubles(arf, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhpgvd( itype, jobz, uplo, n, ap, bp, w, z, ldz, work,
     $                   lwork, rwork, lrwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, itype, ldz, liwork, lrwork, lwork, n
      integer            iwork( * )
      double precision   rwork( * ), w( * )
      complex*16         ap( * ), bp( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhpgvd", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_complex16s(bp, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(lrwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_complex16s(bp, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(lrwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpftrs( transr, uplo, n, nrhs, a, b, ldb, info )
      character          transr, uplo
      integer            info, ldb, n, nrhs
      complex*16         a( 0: * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpftrs", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpftrs( transr, uplo, n, nrhs, a, b, ldb, info )
      character          transr, uplo
      integer            info, ldb, n, nrhs
      double precision   a( 0: * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpftrs", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztpttr( uplo, n, ap, a, lda, info )
      character          uplo
      integer            info, n, lda
      complex*16         a( lda, * ), ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztpttr", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgebal( job, n, a, lda, ilo, ihi, scale, info )
      character          job
      integer            ihi, ilo, info, lda, n
      real               a( lda, * ), scale( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgebal", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_reals(scale, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_reals(scale, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cheevr( jobz, range, uplo, n, a, lda, vl, vu, il, iu,
     $                   abstol, m, w, z, ldz, isuppz, work, lwork,
     $                   rwork, lrwork, iwork, liwork, info )
      character          jobz, range, uplo
      integer            il, info, iu, lda, ldz, liwork, lrwork, lwork,
     $                   m, n
      real               abstol, vl, vu
      integer            isuppz( * ), iwork( * )
      real               rwork( * ), w( * )
      complex            a( lda, * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cheevr", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_real(vl, pipe)
      call pipe_write_real(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_real(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integers(isuppz, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(lrwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_real(vl, pipe)
      call pipe_read_real(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_real(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integers(isuppz, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(lrwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgetrf( m, n, a, lda, ipiv, info )
      integer            info, lda, m, n
      integer            ipiv( * )
      complex            a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgetrf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgels( trans, m, n, nrhs, a, lda, b, ldb, work, lwork,
     $                  info )
      character          trans
      integer            info, lda, ldb, lwork, m, n, nrhs
      complex            a( lda, * ), b( ldb, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgels", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zherfs( uplo, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb,
     $                   x, ldx, ferr, berr, work, rwork, info )
      character          uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         a( lda, * ), af( ldaf, * ), b( ldb, * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zherfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(af, pipe)
      call pipe_write_integer(ldaf, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(af, pipe)
      call pipe_read_integer(ldaf, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sstevr( jobz, range, n, d, e, vl, vu, il, iu, abstol,
     $                   m, w, z, ldz, isuppz, work, lwork, iwork,
     $                   liwork, info )
      character          jobz, range
      integer            il, info, iu, ldz, liwork, lwork, m, n
      real               abstol, vl, vu
      integer            isuppz( * ), iwork( * )
      real               d( * ), e( * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sstevr", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_real(vl, pipe)
      call pipe_write_real(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_real(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integers(isuppz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_real(vl, pipe)
      call pipe_read_real(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_real(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integers(isuppz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dorgrq( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      double precision   a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dorgrq", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztfttr( transr, uplo, n, arf, a, lda, info )
      character          transr, uplo
      integer            info, n, lda
      complex*16         a( 0: lda-1, 0: * ), arf( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztfttr", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(arf, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(arf, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtfsm( transr, side, uplo, trans, diag, m, n, alpha, a,
     $                  b, ldb )
      character          transr, diag, side, trans, uplo
      integer            ldb, m, n
      double precision   alpha
      double precision   a( 0: * ), b( 0: ldb-1, 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtfsm", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_double(alpha, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_double(alpha, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_close(pipe)

      end

      subroutine zhpev( jobz, uplo, n, ap, w, z, ldz, work, rwork,
     $                  info )
      character          jobz, uplo
      integer            info, ldz, n
      double precision   rwork( * ), w( * )
      complex*16         ap( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhpev", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssycon( uplo, n, a, lda, ipiv, anorm, rcond, work,
     $                   iwork, info )
      character          uplo
      integer            info, lda, n
      real               anorm, rcond
      integer            ipiv( * ), iwork( * )
      real               a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssycon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_real(anorm, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_real(anorm, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsteqr( compz, n, d, e, z, ldz, work, info )
      character          compz
      integer            info, ldz, n
      double precision   d( * ), e( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsteqr", pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctpttr( uplo, n, ap, a, lda, info )
      character          uplo
      integer            info, n, lda
      complex            a( lda, * ), ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctpttr", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgbrfs( trans, n, kl, ku, nrhs, ab, ldab, afb, ldafb,
     $                   ipiv, b, ldb, x, ldx, ferr, berr, work, iwork,
     $                   info )
      character          trans
      integer            info, kl, ku, ldab, ldafb, ldb, ldx, n, nrhs
      integer            ipiv( * ), iwork( * )
      real               ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),
     $                   berr( * ), ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgbrfs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(afb, pipe)
      call pipe_write_integer(ldafb, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(afb, pipe)
      call pipe_read_integer(ldafb, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zupgtr( uplo, n, ap, tau, q, ldq, work, info )
      character          uplo
      integer            info, ldq, n
      complex*16         ap( * ), q( ldq, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zupgtr", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgtrfs( trans, n, nrhs, dl, d, du, dlf, df, duf, du2,
     $                   ipiv, b, ldb, x, ldx, ferr, berr, work, iwork,
     $                   info )
      character          trans
      integer            info, ldb, ldx, n, nrhs
      integer            ipiv( * ), iwork( * )
      real               b( ldb, * ), berr( * ), d( * ), df( * ),
     $                   dl( * ), dlf( * ), du( * ), du2( * ), duf( * ),
     $                   ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgtrfs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(dl, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(du, pipe)
      call pipe_write_reals(dlf, pipe)
      call pipe_write_reals(df, pipe)
      call pipe_write_reals(duf, pipe)
      call pipe_write_reals(du2, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(dl, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(du, pipe)
      call pipe_read_reals(dlf, pipe)
      call pipe_read_reals(df, pipe)
      call pipe_read_reals(duf, pipe)
      call pipe_read_reals(du2, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgejsv( joba, jobu, jobv, jobr, jobt, jobp,
     $                   m, n, a, lda, sva, u, ldu, v, ldv,
     $                   work, lwork, iwork, info )
      implicit    none
      integer     info, lda, ldu, ldv, lwork, m, n
      double precision a( lda, * ), sva( n ), u( ldu, * ), v( ldv, * ),
     $            work( lwork )
      integer     iwork( * )
      character*1 joba, jobp, jobr, jobt, jobu, jobv
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgejsv", pipe)
      call pipe_write_character(joba, pipe)
      call pipe_write_character(jobu, pipe)
      call pipe_write_character(jobv, pipe)
      call pipe_write_character(jobr, pipe)
      call pipe_write_character(jobt, pipe)
      call pipe_write_character(jobp, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(sva, pipe)
      call pipe_write_doubles(u, pipe)
      call pipe_write_integer(ldu, pipe)
      call pipe_write_doubles(v, pipe)
      call pipe_write_integer(ldv, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(joba, pipe)
      call pipe_read_character(jobu, pipe)
      call pipe_read_character(jobv, pipe)
      call pipe_read_character(jobr, pipe)
      call pipe_read_character(jobt, pipe)
      call pipe_read_character(jobp, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(sva, pipe)
      call pipe_read_doubles(u, pipe)
      call pipe_read_integer(ldu, pipe)
      call pipe_read_doubles(v, pipe)
      call pipe_read_integer(ldv, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpotrs( uplo, n, nrhs, a, lda, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      double precision   a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpotrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpbsv( uplo, n, kd, nrhs, ab, ldab, b, ldb, info )
      character          uplo
      integer            info, kd, ldab, ldb, n, nrhs
      complex            ab( ldab, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpbsv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cunglq( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      complex            a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cunglq", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zunmql( side, trans, m, n, k, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      complex*16         a( lda, * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zunmql", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cstemr( jobz, range, n, d, e, vl, vu, il, iu,
     $                   m, w, z, ldz, nzc, isuppz, tryrac, work, lwork,
     $                   iwork, liwork, info )
      character          jobz, range
      logical            tryrac
      integer            il, info, iu, ldz, nzc, liwork, lwork, m, n
      real             vl, vu
      integer            isuppz( * ), iwork( * )
      real               d( * ), e( * ), w( * ), work( * )
      complex            z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cstemr", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_real(vl, pipe)
      call pipe_write_real(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integer(nzc, pipe)
      call pipe_write_integers(isuppz, pipe)
      call pipe_write_logic(tryrac, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_real(vl, pipe)
      call pipe_read_real(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integer(nzc, pipe)
      call pipe_read_integers(isuppz, pipe)
      call pipe_read_logic(tryrac, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spbtrs( uplo, n, kd, nrhs, ab, ldab, b, ldb, info )
      character          uplo
      integer            info, kd, ldab, ldb, n, nrhs
      real               ab( ldab, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spbtrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpotrs( uplo, n, nrhs, a, lda, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      complex*16         a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpotrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dopgtr( uplo, n, ap, tau, q, ldq, work, info )
      character          uplo
      integer            info, ldq, n
      double precision   ap( * ), q( ldq, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dopgtr", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(ap, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(ap, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtrrfs( uplo, trans, diag, n, nrhs, a, lda, b, ldb, x,
     $                   ldx, ferr, berr, work, iwork, info )
      character          diag, trans, uplo
      integer            info, lda, ldb, ldx, n, nrhs
      integer            iwork( * )
      double precision   a( lda, * ), b( ldb, * ), berr( * ), ferr( * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtrrfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cupgtr( uplo, n, ap, tau, q, ldq, work, info )
      character          uplo
      integer            info, ldq, n
      complex            ap( * ), q( ldq, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cupgtr", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chetri( uplo, n, a, lda, ipiv, work, info )
      character          uplo
      integer            info, lda, n
      integer            ipiv( * )
      complex            a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chetri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpttrs( uplo, n, nrhs, d, e, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      real               d( * )
      complex            b( ldb, * ), e( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpttrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_complexs(e, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_complexs(e, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cppsv( uplo, n, nrhs, ap, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      complex            ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cppsv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgeevx( balanc, jobvl, jobvr, sense, n, a, lda, w, vl,
     $                   ldvl, vr, ldvr, ilo, ihi, scale, abnrm, rconde,
     $                   rcondv, work, lwork, rwork, info )
      implicit none
      character          balanc, jobvl, jobvr, sense
      integer            ihi, ilo, info, lda, ldvl, ldvr, lwork, n
      double precision   abnrm
      double precision   rconde( * ), rcondv( * ), rwork( * ),
     $                   scale( * )
      complex*16         a( lda, * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   w( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgeevx", pipe)
      call pipe_write_character(balanc, pipe)
      call pipe_write_character(jobvl, pipe)
      call pipe_write_character(jobvr, pipe)
      call pipe_write_character(sense, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(w, pipe)
      call pipe_write_complex16s(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_complex16s(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_doubles(scale, pipe)
      call pipe_write_double(abnrm, pipe)
      call pipe_write_doubles(rconde, pipe)
      call pipe_write_doubles(rcondv, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(balanc, pipe)
      call pipe_read_character(jobvl, pipe)
      call pipe_read_character(jobvr, pipe)
      call pipe_read_character(sense, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(w, pipe)
      call pipe_read_complex16s(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_complex16s(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_doubles(scale, pipe)
      call pipe_read_double(abnrm, pipe)
      call pipe_read_doubles(rconde, pipe)
      call pipe_read_doubles(rcondv, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztbrfs( uplo, trans, diag, n, kd, nrhs, ab, ldab, b,
     $                   ldb, x, ldx, ferr, berr, work, rwork, info )
      character          diag, trans, uplo
      integer            info, kd, ldab, ldb, ldx, n, nrhs
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         ab( ldab, * ), b( ldb, * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztbrfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtbtrs( uplo, trans, diag, n, kd, nrhs, ab, ldab, b,
     $                   ldb, info )
      character          diag, trans, uplo
      integer            info, kd, ldab, ldb, n, nrhs
      double precision   ab( ldab, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtbtrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine stptri( uplo, diag, n, ap, info )
      character          diag, uplo
      integer            info, n
      real               ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("stptri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spftri( transr, uplo, n, a, info )
      character          transr, uplo
      integer            info, n
      real               a( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spftri", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine stpcon( norm, uplo, diag, n, ap, rcond, work, iwork,
     $                   info )
      character          diag, norm, uplo
      integer            info, n
      real               rcond
      integer            iwork( * )
      real               ap( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("stpcon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine strttf( transr, uplo, n, a, lda, arf, info )
      character          transr, uplo
      integer            info, n, lda
      real               a( 0: lda-1, 0: * ), arf( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("strttf", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(arf, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(arf, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtrsna( job, howmny, select, n, t, ldt, vl, ldvl, vr,
     $                   ldvr, s, sep, mm, m, work, ldwork, iwork,
     $                   info )
      character          howmny, job
      integer            info, ldt, ldvl, ldvr, ldwork, m, mm, n
      logical            select( * )
      integer            iwork( * )
      double precision   s( * ), sep( * ), t( ldt, * ), vl( ldvl, * ),
     $                   vr( ldvr, * ), work( ldwork, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtrsna", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(howmny, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(t, pipe)
      call pipe_write_integer(ldt, pipe)
      call pipe_write_doubles(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_doubles(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_doubles(sep, pipe)
      call pipe_write_integer(mm, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(ldwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(howmny, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(t, pipe)
      call pipe_read_integer(ldt, pipe)
      call pipe_read_doubles(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_doubles(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_doubles(sep, pipe)
      call pipe_read_integer(mm, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(ldwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cunmrz( side, trans, m, n, k, l, a, lda, tau, c, ldc,
     $                   work, lwork, info )
      character          side, trans
      integer            info, k, l, lda, ldc, lwork, m, n
      complex            a( lda, * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cunmrz", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_integer(l, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_integer(l, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgebrd( m, n, a, lda, d, e, tauq, taup, work, lwork,
     $                   info )
      integer            info, lda, lwork, m, n
      real               d( * ), e( * )
      complex            a( lda, * ), taup( * ), tauq( * ),
     $                   work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgebrd", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_complexs(tauq, pipe)
      call pipe_write_complexs(taup, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_complexs(tauq, pipe)
      call pipe_read_complexs(taup, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpbstf( uplo, n, kd, ab, ldab, info )
      character          uplo
      integer            info, kd, ldab, n
      complex*16         ab( ldab, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpbstf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dptsv( n, nrhs, d, e, b, ldb, info )
      integer            info, ldb, n, nrhs
      double precision   b( ldb, * ), d( * ), e( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dptsv", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dsyrfs( uplo, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb,
     $                   x, ldx, ferr, berr, work, iwork, info )
      character          uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            ipiv( * ), iwork( * )
      double precision   a( lda, * ), af( ldaf, * ), b( ldb, * ),
     $                   berr( * ), ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dsyrfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(af, pipe)
      call pipe_write_integer(ldaf, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(af, pipe)
      call pipe_read_integer(ldaf, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chpgvx( itype, jobz, range, uplo, n, ap, bp, vl, vu,
     $                   il, iu, abstol, m, w, z, ldz, work, rwork,
     $                   iwork, ifail, info )
      character          jobz, range, uplo
      integer            il, info, itype, iu, ldz, m, n
      real               abstol, vl, vu
      integer            ifail( * ), iwork( * )
      real               rwork( * ), w( * )
      complex            ap( * ), bp( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chpgvx", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_complexs(bp, pipe)
      call pipe_write_real(vl, pipe)
      call pipe_write_real(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_real(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_complexs(bp, pipe)
      call pipe_read_real(vl, pipe)
      call pipe_read_real(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_real(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine stbtrs( uplo, trans, diag, n, kd, nrhs, ab, ldab, b,
     $                   ldb, info )
      character          diag, trans, uplo
      integer            info, kd, ldab, ldb, n, nrhs
      real               ab( ldab, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("stbtrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cppequ( uplo, n, ap, s, scond, amax, info )
      character          uplo
      integer            info, n
      real               amax, scond
      real               s( * )
      complex            ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cppequ", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_real(scond, pipe)
      call pipe_write_real(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_real(scond, pipe)
      call pipe_read_real(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgbrfs( trans, n, kl, ku, nrhs, ab, ldab, afb, ldafb,
     $                   ipiv, b, ldb, x, ldx, ferr, berr, work, rwork,
     $                   info )
      character          trans
      integer            info, kl, ku, ldab, ldafb, ldb, ldx, n, nrhs
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgbrfs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complexs(afb, pipe)
      call pipe_write_integer(ldafb, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complexs(afb, pipe)
      call pipe_read_integer(ldafb, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spbstf( uplo, n, kd, ab, ldab, info )
      character          uplo
      integer            info, kd, ldab, n
      real               ab( ldab, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spbstf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctfttr( transr, uplo, n, arf, a, lda, info )
      character          transr, uplo
      integer            info, n, lda
      complex            a( 0: lda-1, 0: * ), arf( 0: * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctfttr", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(arf, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(arf, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zspsvx( fact, uplo, n, nrhs, ap, afp, ipiv, b, ldb, x,
     $                   ldx, rcond, ferr, berr, work, rwork, info )
      character          fact, uplo
      integer            info, ldb, ldx, n, nrhs
      double precision   rcond
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         afp( * ), ap( * ), b( ldb, * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zspsvx", pipe)
      call pipe_write_character(fact, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_complex16s(afp, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(fact, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_complex16s(afp, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cheequb( uplo, n, a, lda, s, scond, amax, work, info )
      integer            info, lda, n
      real               amax, scond
      character          uplo
      complex            a( lda, * ), work( * )
      real               s( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cheequb", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_real(scond, pipe)
      call pipe_write_real(amax, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_real(scond, pipe)
      call pipe_read_real(amax, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgeequ( m, n, a, lda, r, c, rowcnd, colcnd, amax,
     $                   info )
      integer            info, lda, m, n
      real               amax, colcnd, rowcnd
      real               c( * ), r( * )
      complex            a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgeequ", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(r, pipe)
      call pipe_write_reals(c, pipe)
      call pipe_write_real(rowcnd, pipe)
      call pipe_write_real(colcnd, pipe)
      call pipe_write_real(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(r, pipe)
      call pipe_read_reals(c, pipe)
      call pipe_read_real(rowcnd, pipe)
      call pipe_read_real(colcnd, pipe)
      call pipe_read_real(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgerfs( trans, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb,
     $                   x, ldx, ferr, berr, work, iwork, info )
      character          trans
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            ipiv( * ), iwork( * )
      real               a( lda, * ), af( ldaf, * ), b( ldb, * ),
     $                   berr( * ), ferr( * ), work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgerfs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(af, pipe)
      call pipe_write_integer(ldaf, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(af, pipe)
      call pipe_read_integer(ldaf, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zupmtr( side, uplo, trans, m, n, ap, tau, c, ldc, work,
     $                   info )
      character          side, trans, uplo
      integer            info, ldc, m, n
      complex*16         ap( * ), c( ldc, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zupmtr", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_complex16s(tau, pipe)
      call pipe_write_complex16s(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_complex16s(tau, pipe)
      call pipe_read_complex16s(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zpotrf( uplo, n, a, lda, info )
      character          uplo
      integer            info, lda, n
      complex*16         a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zpotrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgtrfs( trans, n, nrhs, dl, d, du, dlf, df, duf, du2,
     $                   ipiv, b, ldb, x, ldx, ferr, berr, work, rwork,
     $                   info )
      character          trans
      integer            info, ldb, ldx, n, nrhs
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            b( ldb, * ), d( * ), df( * ), dl( * ),
     $                   dlf( * ), du( * ), du2( * ), duf( * ),
     $                   work( * ), x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgtrfs", pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(dl, pipe)
      call pipe_write_complexs(d, pipe)
      call pipe_write_complexs(du, pipe)
      call pipe_write_complexs(dlf, pipe)
      call pipe_write_complexs(df, pipe)
      call pipe_write_complexs(duf, pipe)
      call pipe_write_complexs(du2, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_reals(ferr, pipe)
      call pipe_write_reals(berr, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(dl, pipe)
      call pipe_read_complexs(d, pipe)
      call pipe_read_complexs(du, pipe)
      call pipe_read_complexs(dlf, pipe)
      call pipe_read_complexs(df, pipe)
      call pipe_read_complexs(duf, pipe)
      call pipe_read_complexs(du2, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_reals(ferr, pipe)
      call pipe_read_reals(berr, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctgevc( side, howmny, select, n, s, lds, p, ldp, vl,
     $                   ldvl, vr, ldvr, mm, m, work, rwork, info )
      character          howmny, side
      integer            info, ldp, lds, ldvl, ldvr, m, mm, n
      logical            select( * )
      real               rwork( * )
      complex            p( ldp, * ), s( lds, * ), vl( ldvl, * ),
     $                   vr( ldvr, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctgevc", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(howmny, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(s, pipe)
      call pipe_write_integer(lds, pipe)
      call pipe_write_complexs(p, pipe)
      call pipe_write_integer(ldp, pipe)
      call pipe_write_complexs(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_complexs(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_integer(mm, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(howmny, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(s, pipe)
      call pipe_read_integer(lds, pipe)
      call pipe_read_complexs(p, pipe)
      call pipe_read_integer(ldp, pipe)
      call pipe_read_complexs(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_complexs(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_integer(mm, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhsein( side, eigsrc, initv, select, n, h, ldh, w, vl,
     $                   ldvl, vr, ldvr, mm, m, work, rwork, ifaill,
     $                   ifailr, info )
      character          eigsrc, initv, side
      integer            info, ldh, ldvl, ldvr, m, mm, n
      logical            select( * )
      integer            ifaill( * ), ifailr( * )
      double precision   rwork( * )
      complex*16         h( ldh, * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   w( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhsein", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(eigsrc, pipe)
      call pipe_write_character(initv, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(h, pipe)
      call pipe_write_integer(ldh, pipe)
      call pipe_write_complex16s(w, pipe)
      call pipe_write_complex16s(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_complex16s(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_integer(mm, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integers(ifaill, pipe)
      call pipe_write_integers(ifailr, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(eigsrc, pipe)
      call pipe_read_character(initv, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(h, pipe)
      call pipe_read_integer(ldh, pipe)
      call pipe_read_complex16s(w, pipe)
      call pipe_read_complex16s(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_complex16s(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_integer(mm, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integers(ifaill, pipe)
      call pipe_read_integers(ifailr, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctrsen( job, compq, select, n, t, ldt, q, ldq, w, m, s,
     $                   sep, work, lwork, info )
      character          compq, job
      integer            info, ldq, ldt, lwork, m, n
      real               s, sep
      logical            select( * )
      complex            q( ldq, * ), t( ldt, * ), w( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctrsen", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(compq, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(t, pipe)
      call pipe_write_integer(ldt, pipe)
      call pipe_write_complexs(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_complexs(w, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_real(s, pipe)
      call pipe_write_real(sep, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(compq, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(t, pipe)
      call pipe_read_integer(ldt, pipe)
      call pipe_read_complexs(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_complexs(w, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_real(s, pipe)
      call pipe_read_real(sep, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dstevd( jobz, n, d, e, z, ldz, work, lwork, iwork,
     $                   liwork, info )
      character          jobz
      integer            info, ldz, liwork, lwork, n
      integer            iwork( * )
      double precision   d( * ), e( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dstevd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctptri( uplo, diag, n, ap, info )
      character          diag, uplo
      integer            info, n
      complex            ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctptri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhpgvx( itype, jobz, range, uplo, n, ap, bp, vl, vu,
     $                   il, iu, abstol, m, w, z, ldz, work, rwork,
     $                   iwork, ifail, info )
      character          jobz, range, uplo
      integer            il, info, itype, iu, ldz, m, n
      double precision   abstol, vl, vu
      integer            ifail( * ), iwork( * )
      double precision   rwork( * ), w( * )
      complex*16         ap( * ), bp( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhpgvx", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_complex16s(bp, pipe)
      call pipe_write_double(vl, pipe)
      call pipe_write_double(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_double(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_complex16s(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_complex16s(bp, pipe)
      call pipe_read_double(vl, pipe)
      call pipe_read_double(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_double(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_complex16s(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spoequ( n, a, lda, s, scond, amax, info )
      integer            info, lda, n
      real               amax, scond
      real               a( lda, * ), s( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spoequ", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_real(scond, pipe)
      call pipe_write_real(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_real(scond, pipe)
      call pipe_read_real(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dorgqr( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      double precision   a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dorgqr", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zgtcon( norm, n, dl, d, du, du2, ipiv, anorm, rcond,
     $                   work, info )
      character          norm
      integer            info, n
      double precision   anorm, rcond
      integer            ipiv( * )
      complex*16         d( * ), dl( * ), du( * ), du2( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zgtcon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(dl, pipe)
      call pipe_write_complex16s(d, pipe)
      call pipe_write_complex16s(du, pipe)
      call pipe_write_complex16s(du2, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_double(anorm, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(dl, pipe)
      call pipe_read_complex16s(d, pipe)
      call pipe_read_complex16s(du, pipe)
      call pipe_read_complex16s(du2, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_double(anorm, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhetrf( uplo, n, a, lda, ipiv, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      integer            ipiv( * )
      complex*16         a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhetrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dhsein( side, eigsrc, initv, select, n, h, ldh, wr, wi,
     $                   vl, ldvl, vr, ldvr, mm, m, work, ifaill,
     $                   ifailr, info )
      character          eigsrc, initv, side
      integer            info, ldh, ldvl, ldvr, m, mm, n
      logical            select( * )
      integer            ifaill( * ), ifailr( * )
      double precision   h( ldh, * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   wi( * ), work( * ), wr( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dhsein", pipe)
      call pipe_write_character(side, pipe)
      call pipe_write_character(eigsrc, pipe)
      call pipe_write_character(initv, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(h, pipe)
      call pipe_write_integer(ldh, pipe)
      call pipe_write_doubles(wr, pipe)
      call pipe_write_doubles(wi, pipe)
      call pipe_write_doubles(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_doubles(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_integer(mm, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(ifaill, pipe)
      call pipe_write_integers(ifailr, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(side, pipe)
      call pipe_read_character(eigsrc, pipe)
      call pipe_read_character(initv, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(h, pipe)
      call pipe_read_integer(ldh, pipe)
      call pipe_read_doubles(wr, pipe)
      call pipe_read_doubles(wi, pipe)
      call pipe_read_doubles(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_doubles(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_integer(mm, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(ifaill, pipe)
      call pipe_read_integers(ifailr, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpoequ( n, a, lda, s, scond, amax, info )
      integer            info, lda, n
      double precision   amax, scond
      double precision   a( lda, * ), s( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpoequ", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_double(scond, pipe)
      call pipe_write_double(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_double(scond, pipe)
      call pipe_read_double(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssptri( uplo, n, ap, ipiv, work, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      real               ap( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssptri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssytrf( uplo, n, a, lda, ipiv, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      integer            ipiv( * )
      real               a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssytrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sgghrd( compq, compz, n, ilo, ihi, a, lda, b, ldb, q,
     $                   ldq, z, ldz, info )
      character          compq, compz
      integer            ihi, ilo, info, lda, ldb, ldq, ldz, n
      real               a( lda, * ), b( ldb, * ), q( ldq, * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sgghrd", pipe)
      call pipe_write_character(compq, pipe)
      call pipe_write_character(compz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ilo, pipe)
      call pipe_write_integer(ihi, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_reals(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(compq, pipe)
      call pipe_read_character(compz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ilo, pipe)
      call pipe_read_integer(ihi, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_reals(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chbgst( vect, uplo, n, ka, kb, ab, ldab, bb, ldbb, x,
     $                   ldx, work, rwork, info )
      character          uplo, vect
      integer            info, ka, kb, ldab, ldbb, ldx, n
      real               rwork( * )
      complex            ab( ldab, * ), bb( ldbb, * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chbgst", pipe)
      call pipe_write_character(vect, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ka, pipe)
      call pipe_write_integer(kb, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complexs(bb, pipe)
      call pipe_write_integer(ldbb, pipe)
      call pipe_write_complexs(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(vect, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ka, pipe)
      call pipe_read_integer(kb, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complexs(bb, pipe)
      call pipe_read_integer(ldbb, pipe)
      call pipe_read_complexs(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgeequ( m, n, a, lda, r, c, rowcnd, colcnd, amax,
     $                   info )
      integer            info, lda, m, n
      double precision   amax, colcnd, rowcnd
      double precision   a( lda, * ), c( * ), r( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgeequ", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(r, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_double(rowcnd, pipe)
      call pipe_write_double(colcnd, pipe)
      call pipe_write_double(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(r, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_double(rowcnd, pipe)
      call pipe_read_double(colcnd, pipe)
      call pipe_read_double(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpotrs( uplo, n, nrhs, a, lda, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      complex            a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpotrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sptcon( n, d, e, anorm, rcond, work, info )
      integer            info, n
      real               anorm, rcond
      real               d( * ), e( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sptcon", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_real(anorm, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_real(anorm, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dposv( uplo, n, nrhs, a, lda, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      double precision   a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dposv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgbtrf( m, n, kl, ku, ab, ldab, ipiv, info )
      integer            info, kl, ku, ldab, m, n
      integer            ipiv( * )
      complex            ab( ldab, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgbtrf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztgsna( job, howmny, select, n, a, lda, b, ldb, vl,
     $                   ldvl, vr, ldvr, s, dif, mm, m, work, lwork,
     $                   iwork, info )
      character          howmny, job
      integer            info, lda, ldb, ldvl, ldvr, lwork, m, mm, n
      logical            select( * )
      integer            iwork( * )
      double precision   dif( * ), s( * )
      complex*16         a( lda, * ), b( ldb, * ), vl( ldvl, * ),
     $                   vr( ldvr, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztgsna", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(howmny, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_complex16s(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_doubles(dif, pipe)
      call pipe_write_integer(mm, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(howmny, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_complex16s(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_doubles(dif, pipe)
      call pipe_read_integer(mm, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spotrs( uplo, n, nrhs, a, lda, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      real               a( lda, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spotrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dstevr( jobz, range, n, d, e, vl, vu, il, iu, abstol,
     $                   m, w, z, ldz, isuppz, work, lwork, iwork,
     $                   liwork, info )
      character          jobz, range
      integer            il, info, iu, ldz, liwork, lwork, m, n
      double precision   abstol, vl, vu
      integer            isuppz( * ), iwork( * )
      double precision   d( * ), e( * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dstevr", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_double(vl, pipe)
      call pipe_write_double(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_double(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integers(isuppz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_double(vl, pipe)
      call pipe_read_double(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_double(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integers(isuppz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpotri( uplo, n, a, lda, info )
      character          uplo
      integer            info, lda, n
      double precision   a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpotri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgebrd( m, n, a, lda, d, e, tauq, taup, work, lwork,
     $                   info )
      integer            info, lda, lwork, m, n
      double precision   a( lda, * ), d( * ), e( * ), taup( * ),
     $                   tauq( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgebrd", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_doubles(tauq, pipe)
      call pipe_write_doubles(taup, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_doubles(tauq, pipe)
      call pipe_read_doubles(taup, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztrrfs( uplo, trans, diag, n, nrhs, a, lda, b, ldb, x,
     $                   ldx, ferr, berr, work, rwork, info )
      character          diag, trans, uplo
      integer            info, lda, ldb, ldx, n, nrhs
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         a( lda, * ), b( ldb, * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztrrfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sstemr( jobz, range, n, d, e, vl, vu, il, iu,
     $                   m, w, z, ldz, nzc, isuppz, tryrac, work, lwork,
     $                   iwork, liwork, info )
      character          jobz, range
      logical            tryrac
      integer            il, info, iu, ldz, nzc, liwork, lwork, m, n
      real               vl, vu
      integer            isuppz( * ), iwork( * )
      real               d( * ), e( * ), w( * ), work( * )
      real               z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sstemr", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_real(vl, pipe)
      call pipe_write_real(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integer(nzc, pipe)
      call pipe_write_integers(isuppz, pipe)
      call pipe_write_logic(tryrac, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_real(vl, pipe)
      call pipe_read_real(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integer(nzc, pipe)
      call pipe_read_integers(isuppz, pipe)
      call pipe_read_logic(tryrac, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgbequ( m, n, kl, ku, ab, ldab, r, c, rowcnd, colcnd,
     $                   amax, info )
      integer            info, kl, ku, ldab, m, n
      double precision   amax, colcnd, rowcnd
      double precision   ab( ldab, * ), c( * ), r( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgbequ", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kl, pipe)
      call pipe_write_integer(ku, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_doubles(r, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_double(rowcnd, pipe)
      call pipe_write_double(colcnd, pipe)
      call pipe_write_double(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kl, pipe)
      call pipe_read_integer(ku, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_doubles(r, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_double(rowcnd, pipe)
      call pipe_read_double(colcnd, pipe)
      call pipe_read_double(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztgsja( jobu, jobv, jobq, m, p, n, k, l, a, lda, b,
     $                   ldb, tola, tolb, alpha, beta, u, ldu, v, ldv,
     $                   q, ldq, work, ncycle, info )
      character          jobq, jobu, jobv
      integer            info, k, l, lda, ldb, ldq, ldu, ldv, m, n,
     $                   ncycle, p
      double precision   tola, tolb
      double precision   alpha( * ), beta( * )
      complex*16         a( lda, * ), b( ldb, * ), q( ldq, * ),
     $                   u( ldu, * ), v( ldv, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztgsja", pipe)
      call pipe_write_character(jobu, pipe)
      call pipe_write_character(jobv, pipe)
      call pipe_write_character(jobq, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(p, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(k, pipe)
      call pipe_write_integer(l, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_double(tola, pipe)
      call pipe_write_double(tolb, pipe)
      call pipe_write_doubles(alpha, pipe)
      call pipe_write_doubles(beta, pipe)
      call pipe_write_complex16s(u, pipe)
      call pipe_write_integer(ldu, pipe)
      call pipe_write_complex16s(v, pipe)
      call pipe_write_integer(ldv, pipe)
      call pipe_write_complex16s(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(ncycle, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobu, pipe)
      call pipe_read_character(jobv, pipe)
      call pipe_read_character(jobq, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(p, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(k, pipe)
      call pipe_read_integer(l, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_double(tola, pipe)
      call pipe_read_double(tolb, pipe)
      call pipe_read_doubles(alpha, pipe)
      call pipe_read_doubles(beta, pipe)
      call pipe_read_complex16s(u, pipe)
      call pipe_read_integer(ldu, pipe)
      call pipe_read_complex16s(v, pipe)
      call pipe_read_integer(ldv, pipe)
      call pipe_read_complex16s(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(ncycle, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sptsv( n, nrhs, d, e, b, ldb, info )
      integer            info, ldb, n, nrhs
      real               b( ldb, * ), d( * ), e( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sptsv", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_reals(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_reals(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpbcon( uplo, n, kd, ab, ldab, anorm, rcond, work,
     $                   rwork, info )
      character          uplo
      integer            info, kd, ldab, n
      real               anorm, rcond
      real               rwork( * )
      complex            ab( ldab, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpbcon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_complexs(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_real(anorm, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_complexs(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_real(anorm, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtrsyl( trana, tranb, isgn, m, n, a, lda, b, ldb, c,
     $                   ldc, scale, info )
      character          trana, tranb
      integer            info, isgn, lda, ldb, ldc, m, n
      double precision   scale
      double precision   a( lda, * ), b( ldb, * ), c( ldc, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtrsyl", pipe)
      call pipe_write_character(trana, pipe)
      call pipe_write_character(tranb, pipe)
      call pipe_write_integer(isgn, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(c, pipe)
      call pipe_write_integer(ldc, pipe)
      call pipe_write_double(scale, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(trana, pipe)
      call pipe_read_character(tranb, pipe)
      call pipe_read_integer(isgn, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(c, pipe)
      call pipe_read_integer(ldc, pipe)
      call pipe_read_double(scale, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ctrsna( job, howmny, select, n, t, ldt, vl, ldvl, vr,
     $                   ldvr, s, sep, mm, m, work, ldwork, rwork,
     $                   info )
      character          howmny, job
      integer            info, ldt, ldvl, ldvr, ldwork, m, mm, n
      logical            select( * )
      real               rwork( * ), s( * ), sep( * )
      complex            t( ldt, * ), vl( ldvl, * ), vr( ldvr, * ),
     $                   work( ldwork, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ctrsna", pipe)
      call pipe_write_character(job, pipe)
      call pipe_write_character(howmny, pipe)
      call pipe_write_logics(select, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(t, pipe)
      call pipe_write_integer(ldt, pipe)
      call pipe_write_complexs(vl, pipe)
      call pipe_write_integer(ldvl, pipe)
      call pipe_write_complexs(vr, pipe)
      call pipe_write_integer(ldvr, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_reals(sep, pipe)
      call pipe_write_integer(mm, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(ldwork, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(job, pipe)
      call pipe_read_character(howmny, pipe)
      call pipe_read_logics(select, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(t, pipe)
      call pipe_read_integer(ldt, pipe)
      call pipe_read_complexs(vl, pipe)
      call pipe_read_integer(ldvl, pipe)
      call pipe_read_complexs(vr, pipe)
      call pipe_read_integer(ldvr, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_reals(sep, pipe)
      call pipe_read_integer(mm, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(ldwork, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpoequb( n, a, lda, s, scond, amax, info )
      integer            info, lda, n
      real               amax, scond
      complex            a( lda, * )
      real               s( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpoequb", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_real(scond, pipe)
      call pipe_write_real(amax, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_real(scond, pipe)
      call pipe_read_real(amax, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpstrf( uplo, n, a, lda, piv, rank, tol, work, info )
      double precision   tol
      integer            info, lda, n, rank
      character          uplo
      double precision   a( lda, * ), work( 2*n )
      integer            piv( n )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpstrf", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integers(piv, pipe)
      call pipe_write_integer(rank, pipe)
      call pipe_write_double(tol, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integers(piv, pipe)
      call pipe_read_integer(rank, pipe)
      call pipe_read_double(tol, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssyevd( jobz, uplo, n, a, lda, w, work, lwork, iwork,
     $                   liwork, info )
      character          jobz, uplo
      integer            info, lda, liwork, lwork, n
      integer            iwork( * )
      real               a( lda, * ), w( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssyevd", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssyequb( uplo, n, a, lda, s, scond, amax, work, info )
      integer            info, lda, n
      real               amax, scond
      character          uplo
      real               a( lda, * ), s( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssyequb", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(s, pipe)
      call pipe_write_real(scond, pipe)
      call pipe_write_real(amax, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(s, pipe)
      call pipe_read_real(scond, pipe)
      call pipe_read_real(amax, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgerqf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      complex            a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgerqf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztrtri( uplo, diag, n, a, lda, info )
      character          diag, uplo
      integer            info, lda, n
      complex*16         a( lda, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztrtri", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dstemr( jobz, range, n, d, e, vl, vu, il, iu,
     $                   m, w, z, ldz, nzc, isuppz, tryrac, work, lwork,
     $                   iwork, liwork, info )
      character          jobz, range
      logical            tryrac
      integer            il, info, iu, ldz, nzc, liwork, lwork, m, n
      double precision vl, vu
      integer            isuppz( * ), iwork( * )
      double precision   d( * ), e( * ), w( * ), work( * )
      double precision   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dstemr", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_double(vl, pipe)
      call pipe_write_double(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integer(nzc, pipe)
      call pipe_write_integers(isuppz, pipe)
      call pipe_write_logic(tryrac, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(liwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_double(vl, pipe)
      call pipe_read_double(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integer(nzc, pipe)
      call pipe_read_integers(isuppz, pipe)
      call pipe_read_logic(tryrac, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(liwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ssbgv( jobz, uplo, n, ka, kb, ab, ldab, bb, ldbb, w, z,
     $                  ldz, work, info )
      character          jobz, uplo
      integer            info, ka, kb, ldab, ldbb, ldz, n
      real               ab( ldab, * ), bb( ldbb, * ), w( * ),
     $                   work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ssbgv", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(ka, pipe)
      call pipe_write_integer(kb, pipe)
      call pipe_write_reals(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_reals(bb, pipe)
      call pipe_write_integer(ldbb, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(ka, pipe)
      call pipe_read_integer(kb, pipe)
      call pipe_read_reals(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_reals(bb, pipe)
      call pipe_read_integer(ldbb, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgesvd( jobu, jobvt, m, n, a, lda, s, u, ldu,
     $                   vt, ldvt, work, lwork, info )
      character          jobu, jobvt
      integer            info, lda, ldu, ldvt, lwork, m, n
      double precision   a( lda, * ), s( * ), u( ldu, * ),
     $                   vt( ldvt, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgesvd", pipe)
      call pipe_write_character(jobu, pipe)
      call pipe_write_character(jobvt, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(s, pipe)
      call pipe_write_doubles(u, pipe)
      call pipe_write_integer(ldu, pipe)
      call pipe_write_doubles(vt, pipe)
      call pipe_write_integer(ldvt, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobu, pipe)
      call pipe_read_character(jobvt, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(s, pipe)
      call pipe_read_doubles(u, pipe)
      call pipe_read_integer(ldu, pipe)
      call pipe_read_doubles(vt, pipe)
      call pipe_read_integer(ldvt, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtgexc( wantq, wantz, n, a, lda, b, ldb, q, ldq, z,
     $                   ldz, ifst, ilst, work, lwork, info )
      logical            wantq, wantz
      integer            ifst, ilst, info, lda, ldb, ldq, ldz, lwork, n
      double precision   a( lda, * ), b( ldb, * ), q( ldq, * ),
     $                   work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtgexc", pipe)
      call pipe_write_logic(wantq, pipe)
      call pipe_write_logic(wantz, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_doubles(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_integer(ifst, pipe)
      call pipe_write_integer(ilst, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_logic(wantq, pipe)
      call pipe_read_logic(wantz, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_doubles(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_integer(ifst, pipe)
      call pipe_read_integer(ilst, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dgeqrf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      double precision   a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dgeqrf", pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_doubles(tau, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_doubles(tau, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtbcon( norm, uplo, diag, n, kd, ab, ldab, rcond, work,
     $                   iwork, info )
      character          diag, norm, uplo
      integer            info, kd, ldab, n
      double precision   rcond
      integer            iwork( * )
      double precision   ab( ldab, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtbcon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_doubles(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_doubles(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine ztbtrs( uplo, trans, diag, n, kd, nrhs, ab, ldab, b,
     $                   ldb, info )
      character          diag, trans, uplo
      integer            info, kd, ldab, ldb, n, nrhs
      complex*16         ab( ldab, * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("ztbtrs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_character(trans, pipe)
      call pipe_write_character(diag, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(kd, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complex16s(ab, pipe)
      call pipe_write_integer(ldab, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_character(trans, pipe)
      call pipe_read_character(diag, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(kd, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complex16s(ab, pipe)
      call pipe_read_integer(ldab, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chpgst( itype, uplo, n, ap, bp, info )
      character          uplo
      integer            info, itype, n
      complex            ap( * ), bp( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chpgst", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_complexs(bp, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_complexs(bp, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine stpttr( uplo, n, ap, a, lda, info )
      character          uplo
      integer            info, n, lda
      real               a( lda, * ), ap( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("stpttr", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sspgvx( itype, jobz, range, uplo, n, ap, bp, vl, vu,
     $                   il, iu, abstol, m, w, z, ldz, work, iwork,
     $                   ifail, info )
      character          jobz, range, uplo
      integer            il, info, itype, iu, ldz, m, n
      real               abstol, vl, vu
      integer            ifail( * ), iwork( * )
      real               ap( * ), bp( * ), w( * ), work( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sspgvx", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_reals(bp, pipe)
      call pipe_write_real(vl, pipe)
      call pipe_write_real(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_real(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_reals(bp, pipe)
      call pipe_read_real(vl, pipe)
      call pipe_read_real(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_real(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sppcon( uplo, n, ap, anorm, rcond, work, iwork, info )
      character          uplo
      integer            info, n
      real               anorm, rcond
      integer            iwork( * )
      real               ap( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sppcon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_real(anorm, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_real(anorm, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chpsv( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      complex            ap( * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chpsv", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dstevx( jobz, range, n, d, e, vl, vu, il, iu, abstol,
     $                   m, w, z, ldz, work, iwork, ifail, info )
      character          jobz, range
      integer            il, info, iu, ldz, m, n
      double precision   abstol, vl, vu
      integer            ifail( * ), iwork( * )
      double precision   d( * ), e( * ), w( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dstevx", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(range, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_double(vl, pipe)
      call pipe_write_double(vu, pipe)
      call pipe_write_integer(il, pipe)
      call pipe_write_integer(iu, pipe)
      call pipe_write_double(abstol, pipe)
      call pipe_write_integer(m, pipe)
      call pipe_write_doubles(w, pipe)
      call pipe_write_doubles(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integers(ifail, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(range, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_double(vl, pipe)
      call pipe_read_double(vu, pipe)
      call pipe_read_integer(il, pipe)
      call pipe_read_integer(iu, pipe)
      call pipe_read_double(abstol, pipe)
      call pipe_read_integer(m, pipe)
      call pipe_read_doubles(w, pipe)
      call pipe_read_doubles(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integers(ifail, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zptrfs( uplo, n, nrhs, d, e, df, ef, b, ldb, x, ldx,
     $                   ferr, berr, work, rwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      double precision   berr( * ), d( * ), df( * ), ferr( * ),
     $                   rwork( * )
      complex*16         b( ldb, * ), e( * ), ef( * ), work( * ),
     $                   x( ldx, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zptrfs", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_complex16s(e, pipe)
      call pipe_write_doubles(df, pipe)
      call pipe_write_complex16s(ef, pipe)
      call pipe_write_complex16s(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_complex16s(x, pipe)
      call pipe_write_integer(ldx, pipe)
      call pipe_write_doubles(ferr, pipe)
      call pipe_write_doubles(berr, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_complex16s(e, pipe)
      call pipe_read_doubles(df, pipe)
      call pipe_read_complex16s(ef, pipe)
      call pipe_read_complex16s(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_complex16s(x, pipe)
      call pipe_read_integer(ldx, pipe)
      call pipe_read_doubles(ferr, pipe)
      call pipe_read_doubles(berr, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dpttrs( n, nrhs, d, e, b, ldb, info )
      integer            info, ldb, n, nrhs
      double precision   b( ldb, * ), d( * ), e( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dpttrs", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_doubles(e, pipe)
      call pipe_write_doubles(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_doubles(e, pipe)
      call pipe_read_doubles(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine sspgv( itype, jobz, uplo, n, ap, bp, w, z, ldz, work,
     $                  info )
      character          jobz, uplo
      integer            info, itype, ldz, n
      real               ap( * ), bp( * ), w( * ), work( * ),
     $                   z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("sspgv", pipe)
      call pipe_write_integer(itype, pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(ap, pipe)
      call pipe_write_reals(bp, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_reals(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(itype, pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(ap, pipe)
      call pipe_read_reals(bp, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_reals(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zptcon( n, d, e, anorm, rcond, rwork, info )
      integer            info, n
      double precision   anorm, rcond
      double precision   d( * ), rwork( * )
      complex*16         e( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zptcon", pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(d, pipe)
      call pipe_write_complex16s(e, pipe)
      call pipe_write_double(anorm, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_doubles(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(d, pipe)
      call pipe_read_complex16s(e, pipe)
      call pipe_read_double(anorm, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_doubles(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine zhpcon( uplo, n, ap, ipiv, anorm, rcond, work, info )
      character          uplo
      integer            info, n
      double precision   anorm, rcond
      integer            ipiv( * )
      complex*16         ap( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("zhpcon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complex16s(ap, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_double(anorm, pipe)
      call pipe_write_double(rcond, pipe)
      call pipe_write_complex16s(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complex16s(ap, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_double(anorm, pipe)
      call pipe_read_double(rcond, pipe)
      call pipe_read_complex16s(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chpev( jobz, uplo, n, ap, w, z, ldz, work, rwork,
     $                  info )
      character          jobz, uplo
      integer            info, ldz, n
      real               rwork( * ), w( * )
      complex            ap( * ), work( * ), z( ldz, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chpev", pipe)
      call pipe_write_character(jobz, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(ap, pipe)
      call pipe_write_reals(w, pipe)
      call pipe_write_complexs(z, pipe)
      call pipe_write_integer(ldz, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_reals(rwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(jobz, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(ap, pipe)
      call pipe_read_reals(w, pipe)
      call pipe_read_complexs(z, pipe)
      call pipe_read_integer(ldz, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_reals(rwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine dtrexc( compq, n, t, ldt, q, ldq, ifst, ilst, work,
     $                   info )
      character          compq
      integer            ifst, ilst, info, ldq, ldt, n
      double precision   q( ldq, * ), t( ldt, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("dtrexc", pipe)
      call pipe_write_character(compq, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_doubles(t, pipe)
      call pipe_write_integer(ldt, pipe)
      call pipe_write_doubles(q, pipe)
      call pipe_write_integer(ldq, pipe)
      call pipe_write_integer(ifst, pipe)
      call pipe_write_integer(ilst, pipe)
      call pipe_write_doubles(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(compq, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_doubles(t, pipe)
      call pipe_read_integer(ldt, pipe)
      call pipe_read_doubles(q, pipe)
      call pipe_read_integer(ldq, pipe)
      call pipe_read_integer(ifst, pipe)
      call pipe_read_integer(ilst, pipe)
      call pipe_read_doubles(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine spocon( uplo, n, a, lda, anorm, rcond, work, iwork,
     $                   info )
      character          uplo
      integer            info, lda, n
      real               anorm, rcond
      integer            iwork( * )
      real               a( lda, * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("spocon", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_reals(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_real(anorm, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_reals(work, pipe)
      call pipe_write_integers(iwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_reals(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_real(anorm, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_reals(work, pipe)
      call pipe_read_integers(iwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cpftrs( transr, uplo, n, nrhs, a, b, ldb, info )
      character          transr, uplo
      integer            info, ldb, n, nrhs
      complex            a( 0: * ), b( ldb, * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cpftrs", pipe)
      call pipe_write_character(transr, pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_integer(nrhs, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_complexs(b, pipe)
      call pipe_write_integer(ldb, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(transr, pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_integer(nrhs, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_complexs(b, pipe)
      call pipe_read_integer(ldb, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine chetrd( uplo, n, a, lda, d, e, tau, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      real               d( * ), e( * )
      complex            a( lda, * ), tau( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("chetrd", pipe)
      call pipe_write_character(uplo, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(a, pipe)
      call pipe_write_integer(lda, pipe)
      call pipe_write_reals(d, pipe)
      call pipe_write_reals(e, pipe)
      call pipe_write_complexs(tau, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(lwork, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(uplo, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(a, pipe)
      call pipe_read_integer(lda, pipe)
      call pipe_read_reals(d, pipe)
      call pipe_read_reals(e, pipe)
      call pipe_read_complexs(tau, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(lwork, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end

      subroutine cgtcon( norm, n, dl, d, du, du2, ipiv, anorm, rcond,
     $                   work, info )
      character          norm
      integer            info, n
      real               anorm, rcond
      integer            ipiv( * )
      complex            d( * ), dl( * ), du( * ), du2( * ), work( * )
      integer            pipe

      call pipe_open_write("../priv/pipe_file", pipe)
      call pipe_write_characters("cgtcon", pipe)
      call pipe_write_character(norm, pipe)
      call pipe_write_integer(n, pipe)
      call pipe_write_complexs(dl, pipe)
      call pipe_write_complexs(d, pipe)
      call pipe_write_complexs(du, pipe)
      call pipe_write_complexs(du2, pipe)
      call pipe_write_integers(ipiv, pipe)
      call pipe_write_real(anorm, pipe)
      call pipe_write_real(rcond, pipe)
      call pipe_write_complexs(work, pipe)
      call pipe_write_integer(info, pipe)
      call pipe_close(pipe)

      call pipe_open_read("../priv/pipe_file", pipe)
      call pipe_skip(pipe)
      call pipe_read_character(norm, pipe)
      call pipe_read_integer(n, pipe)
      call pipe_read_complexs(dl, pipe)
      call pipe_read_complexs(d, pipe)
      call pipe_read_complexs(du, pipe)
      call pipe_read_complexs(du2, pipe)
      call pipe_read_integers(ipiv, pipe)
      call pipe_read_real(anorm, pipe)
      call pipe_read_real(rcond, pipe)
      call pipe_read_complexs(work, pipe)
      call pipe_read_integer(info, pipe)
      call pipe_close(pipe)

      end


      end module blas_pipe